/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 191);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);var toSubscriber_1=__webpack_require__(391);var observable_1=__webpack_require__(66);/**
 * A representation of any set of values over any amount of time. This is the most basic building block
 * of RxJS.
 *
 * @class Observable<T>
 */var Observable=function(){/**
     * @constructor
     * @param {Function} subscribe the function that is called when the Observable is
     * initially subscribed to. This function is given a Subscriber, to which new values
     * can be `next`ed, or an `error` method can be called to raise an error, or
     * `complete` can be called to notify of a successful completion.
     */function Observable(subscribe){this._isScalar=false;if(subscribe){this._subscribe=subscribe;}}/**
     * Creates a new Observable, with this Observable as the source, and the passed
     * operator defined as the new observable's operator.
     * @method lift
     * @param {Operator} operator the operator defining the operation to take on the observable
     * @return {Observable} a new observable with the Operator applied
     */Observable.prototype.lift=function(operator){var observable=new Observable();observable.source=this;observable.operator=operator;return observable;};/**
     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.
     *
     * <span class="informal">Use it when you have all these Observables, but still nothing is happening.</span>
     *
     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It
     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is
     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling
     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often
     * thought.
     *
     * Apart from starting the execution of an Observable, this method allows you to listen for values
     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two
     * following ways.
     *
     * The first way is creating an object that implements {@link Observer} interface. It should have methods
     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create
     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do
     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also
     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't
     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will
     * be left uncaught.
     *
     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.
     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent
     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,
     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,
     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes
     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.
     *
     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.
     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean
     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback
     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.
     *
     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.
     * It is an Observable itself that decides when these functions will be called. For example {@link of}
     * by default emits all its values synchronously. Always check documentation for how given Observable
     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.
     *
     * @example <caption>Subscribe with an Observer</caption>
     * const sumObserver = {
     *   sum: 0,
     *   next(value) {
     *     console.log('Adding: ' + value);
     *     this.sum = this.sum + value;
     *   },
     *   error() { // We actually could just remove this method,
     *   },        // since we do not really care about errors right now.
     *   complete() {
     *     console.log('Sum equals: ' + this.sum);
     *   }
     * };
     *
     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.
     * .subscribe(sumObserver);
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Subscribe with functions</caption>
     * let sum = 0;
     *
     * Rx.Observable.of(1, 2, 3)
     * .subscribe(
     *   function(value) {
     *     console.log('Adding: ' + value);
     *     sum = sum + value;
     *   },
     *   undefined,
     *   function() {
     *     console.log('Sum equals: ' + sum);
     *   }
     * );
     *
     * // Logs:
     * // "Adding: 1"
     * // "Adding: 2"
     * // "Adding: 3"
     * // "Sum equals: 6"
     *
     *
     * @example <caption>Cancel a subscription</caption>
     * const subscription = Rx.Observable.interval(1000).subscribe(
     *   num => console.log(num),
     *   undefined,
     *   () => console.log('completed!') // Will not be called, even
     * );                                // when cancelling subscription
     *
     *
     * setTimeout(() => {
     *   subscription.unsubscribe();
     *   console.log('unsubscribed!');
     * }, 2500);
     *
     * // Logs:
     * // 0 after 1s
     * // 1 after 2s
     * // "unsubscribed!" after 2.5s
     *
     *
     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,
     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed
     *  Observable.
     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,
     *  the error will be thrown as unhandled.
     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.
     * @return {ISubscription} a subscription reference to the registered handlers
     * @method subscribe
     */Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator;var sink=toSubscriber_1.toSubscriber(observerOrNext,error,complete);if(operator){operator.call(sink,this.source);}else{sink.add(this.source?this._subscribe(sink):this._trySubscribe(sink));}if(sink.syncErrorThrowable){sink.syncErrorThrowable=false;if(sink.syncErrorThrown){throw sink.syncErrorValue;}}return sink;};Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink);}catch(err){sink.syncErrorThrown=true;sink.syncErrorValue=err;sink.error(err);}};/**
     * @method forEach
     * @param {Function} next a handler for each value emitted by the observable
     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise
     * @return {Promise} a promise that either resolves on observable completion or
     *  rejects with the handled error
     */Observable.prototype.forEach=function(next,PromiseCtor){var _this=this;if(!PromiseCtor){if(root_1.root.Rx&&root_1.root.Rx.config&&root_1.root.Rx.config.Promise){PromiseCtor=root_1.root.Rx.config.Promise;}else if(root_1.root.Promise){PromiseCtor=root_1.root.Promise;}}if(!PromiseCtor){throw new Error('no Promise impl found');}return new PromiseCtor(function(resolve,reject){// Must be declared in a separate statement to avoid a RefernceError when
// accessing subscription below in the closure due to Temporal Dead Zone.
var subscription;subscription=_this.subscribe(function(value){if(subscription){// if there is a subscription, then we can surmise
// the next handling is asynchronous. Any errors thrown
// need to be rejected explicitly and unsubscribe must be
// called manually
try{next(value);}catch(err){reject(err);subscription.unsubscribe();}}else{// if there is NO subscription, then we're getting a nexted
// value synchronously during subscription. We can just call it.
// If it errors, Observable's `subscribe` will ensure the
// unsubscription logic is called, then synchronously rethrow the error.
// After that, Promise will trap the error and send it
// down the rejection path.
next(value);}},reject,resolve);});};Observable.prototype._subscribe=function(subscriber){return this.source.subscribe(subscriber);};/**
     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable
     * @method Symbol.observable
     * @return {Observable} this instance of the observable
     */Observable.prototype[observable_1.observable]=function(){return this;};// HACK: Since TypeScript inherits static properties too, we have to
// fight against TypeScript here so Subject can have a different static create signature
/**
     * Creates a new cold Observable by calling the Observable constructor
     * @static true
     * @owner Observable
     * @method create
     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor
     * @return {Observable} a new cold observable
     */Observable.create=function(subscribe){return new Observable(subscribe);};return Observable;}();exports.Observable=Observable;//# sourceMappingURL=Observable.js.map

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _isPlaceholder=__webpack_require__(47);/**
 * Optimized internal two-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */module.exports=function _curry2(fn){return function f2(a,b){switch(arguments.length){case 0:return f2;case 1:return _isPlaceholder(a)?f2:_curry1(function(_b){return fn(a,_b);});default:return _isPlaceholder(a)&&_isPlaceholder(b)?f2:_isPlaceholder(a)?_curry1(function(_a){return fn(_a,b);}):_isPlaceholder(b)?_curry1(function(_b){return fn(a,_b);}):fn(a,b);}};};

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var isFunction_1=__webpack_require__(64);var Subscription_1=__webpack_require__(9);var Observer_1=__webpack_require__(161);var rxSubscriber_1=__webpack_require__(65);/**
 * Implements the {@link Observer} interface and extends the
 * {@link Subscription} class. While the {@link Observer} is the public API for
 * consuming the values of an {@link Observable}, all Observers get converted to
 * a Subscriber, in order to provide Subscription-like capabilities such as
 * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for
 * implementing operators, but it is rarely used as a public API.
 *
 * @class Subscriber<T>
 */var Subscriber=function(_super){__extends(Subscriber,_super);/**
     * @param {Observer|function(value: T): void} [destinationOrNext] A partially
     * defined Observer or a `next` callback function.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     */function Subscriber(destinationOrNext,error,complete){_super.call(this);this.syncErrorValue=null;this.syncErrorThrown=false;this.syncErrorThrowable=false;this.isStopped=false;switch(arguments.length){case 0:this.destination=Observer_1.empty;break;case 1:if(!destinationOrNext){this.destination=Observer_1.empty;break;}if((typeof destinationOrNext==='undefined'?'undefined':_typeof(destinationOrNext))==='object'){if(destinationOrNext instanceof Subscriber){this.destination=destinationOrNext;this.destination.add(this);}else{this.syncErrorThrowable=true;this.destination=new SafeSubscriber(this,destinationOrNext);}break;}default:this.syncErrorThrowable=true;this.destination=new SafeSubscriber(this,destinationOrNext,error,complete);break;}}Subscriber.prototype[rxSubscriber_1.rxSubscriber]=function(){return this;};/**
     * A static factory for a Subscriber, given a (potentially partial) definition
     * of an Observer.
     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.
     * @param {function(e: ?any): void} [error] The `error` callback of an
     * Observer.
     * @param {function(): void} [complete] The `complete` callback of an
     * Observer.
     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)
     * Observer represented by the given arguments.
     */Subscriber.create=function(next,error,complete){var subscriber=new Subscriber(next,error,complete);subscriber.syncErrorThrowable=false;return subscriber;};/**
     * The {@link Observer} callback to receive notifications of type `next` from
     * the Observable, with a value. The Observable may call this method 0 or more
     * times.
     * @param {T} [value] The `next` value.
     * @return {void}
     */Subscriber.prototype.next=function(value){if(!this.isStopped){this._next(value);}};/**
     * The {@link Observer} callback to receive notifications of type `error` from
     * the Observable, with an attached {@link Error}. Notifies the Observer that
     * the Observable has experienced an error condition.
     * @param {any} [err] The `error` exception.
     * @return {void}
     */Subscriber.prototype.error=function(err){if(!this.isStopped){this.isStopped=true;this._error(err);}};/**
     * The {@link Observer} callback to receive a valueless notification of type
     * `complete` from the Observable. Notifies the Observer that the Observable
     * has finished sending push-based notifications.
     * @return {void}
     */Subscriber.prototype.complete=function(){if(!this.isStopped){this.isStopped=true;this._complete();}};Subscriber.prototype.unsubscribe=function(){if(this.closed){return;}this.isStopped=true;_super.prototype.unsubscribe.call(this);};Subscriber.prototype._next=function(value){this.destination.next(value);};Subscriber.prototype._error=function(err){this.destination.error(err);this.unsubscribe();};Subscriber.prototype._complete=function(){this.destination.complete();this.unsubscribe();};Subscriber.prototype._unsubscribeAndRecycle=function(){var _a=this,_parent=_a._parent,_parents=_a._parents;this._parent=null;this._parents=null;this.unsubscribe();this.closed=false;this.isStopped=false;this._parent=_parent;this._parents=_parents;return this;};return Subscriber;}(Subscription_1.Subscription);exports.Subscriber=Subscriber;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SafeSubscriber=function(_super){__extends(SafeSubscriber,_super);function SafeSubscriber(_parentSubscriber,observerOrNext,error,complete){_super.call(this);this._parentSubscriber=_parentSubscriber;var next;var context=this;if(isFunction_1.isFunction(observerOrNext)){next=observerOrNext;}else if(observerOrNext){next=observerOrNext.next;error=observerOrNext.error;complete=observerOrNext.complete;if(observerOrNext!==Observer_1.empty){context=Object.create(observerOrNext);if(isFunction_1.isFunction(context.unsubscribe)){this.add(context.unsubscribe.bind(context));}context.unsubscribe=this.unsubscribe.bind(this);}}this._context=context;this._next=next;this._error=error;this._complete=complete;}SafeSubscriber.prototype.next=function(value){if(!this.isStopped&&this._next){var _parentSubscriber=this._parentSubscriber;if(!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._next,value);}else if(this.__tryOrSetError(_parentSubscriber,this._next,value)){this.unsubscribe();}}};SafeSubscriber.prototype.error=function(err){if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._error){if(!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(this._error,err);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,this._error,err);this.unsubscribe();}}else if(!_parentSubscriber.syncErrorThrowable){this.unsubscribe();throw err;}else{_parentSubscriber.syncErrorValue=err;_parentSubscriber.syncErrorThrown=true;this.unsubscribe();}}};SafeSubscriber.prototype.complete=function(){var _this=this;if(!this.isStopped){var _parentSubscriber=this._parentSubscriber;if(this._complete){var wrappedComplete=function wrappedComplete(){return _this._complete.call(_this._context);};if(!_parentSubscriber.syncErrorThrowable){this.__tryOrUnsub(wrappedComplete);this.unsubscribe();}else{this.__tryOrSetError(_parentSubscriber,wrappedComplete);this.unsubscribe();}}else{this.unsubscribe();}}};SafeSubscriber.prototype.__tryOrUnsub=function(fn,value){try{fn.call(this._context,value);}catch(err){this.unsubscribe();throw err;}};SafeSubscriber.prototype.__tryOrSetError=function(parent,fn,value){try{fn.call(this._context,value);}catch(err){parent.syncErrorValue=err;parent.syncErrorThrown=true;return true;}return false;};SafeSubscriber.prototype._unsubscribe=function(){var _parentSubscriber=this._parentSubscriber;this._context=null;this._parentSubscriber=null;_parentSubscriber.unsubscribe();};return SafeSubscriber;}(Subscriber);//# sourceMappingURL=Subscriber.js.map

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _isPlaceholder=__webpack_require__(47);/**
 * Optimized internal one-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */module.exports=function _curry1(fn){return function f1(a){if(arguments.length===0||_isPlaceholder(a)){return f1;}else{return fn.apply(this,arguments);}};};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _curry2=__webpack_require__(1);var _isPlaceholder=__webpack_require__(47);/**
 * Optimized internal three-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */module.exports=function _curry3(fn){return function f3(a,b,c){switch(arguments.length){case 0:return f3;case 1:return _isPlaceholder(a)?f3:_curry2(function(_b,_c){return fn(a,_b,_c);});case 2:return _isPlaceholder(a)&&_isPlaceholder(b)?f3:_isPlaceholder(a)?_curry2(function(_a,_c){return fn(_a,b,_c);}):_isPlaceholder(b)?_curry2(function(_b,_c){return fn(a,_b,_c);}):_curry1(function(_c){return fn(a,b,_c);});default:return _isPlaceholder(a)&&_isPlaceholder(b)&&_isPlaceholder(c)?f3:_isPlaceholder(a)&&_isPlaceholder(b)?_curry2(function(_a,_b){return fn(_a,_b,c);}):_isPlaceholder(a)&&_isPlaceholder(c)?_curry2(function(_a,_c){return fn(_a,b,_c);}):_isPlaceholder(b)&&_isPlaceholder(c)?_curry2(function(_b,_c){return fn(a,_b,_c);}):_isPlaceholder(a)?_curry1(function(_a){return fn(_a,b,c);}):_isPlaceholder(b)?_curry1(function(_b){return fn(a,_b,c);}):_isPlaceholder(c)?_curry1(function(_c){return fn(a,b,_c);}):fn(a,b,c);}};};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var OuterSubscriber=function(_super){__extends(OuterSubscriber,_super);function OuterSubscriber(){_super.apply(this,arguments);}OuterSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue);};OuterSubscriber.prototype.notifyError=function(error,innerSub){this.destination.error(error);};OuterSubscriber.prototype.notifyComplete=function(innerSub){this.destination.complete();};return OuterSubscriber;}(Subscriber_1.Subscriber);exports.OuterSubscriber=OuterSubscriber;//# sourceMappingURL=OuterSubscriber.js.map

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);var isArrayLike_1=__webpack_require__(163);var isPromise_1=__webpack_require__(164);var isObject_1=__webpack_require__(159);var Observable_1=__webpack_require__(0);var iterator_1=__webpack_require__(42);var InnerSubscriber_1=__webpack_require__(400);var observable_1=__webpack_require__(66);function subscribeToResult(outerSubscriber,result,outerValue,outerIndex){var destination=new InnerSubscriber_1.InnerSubscriber(outerSubscriber,outerValue,outerIndex);if(destination.closed){return null;}if(result instanceof Observable_1.Observable){if(result._isScalar){destination.next(result.value);destination.complete();return null;}else{return result.subscribe(destination);}}else if(isArrayLike_1.isArrayLike(result)){for(var i=0,len=result.length;i<len&&!destination.closed;i++){destination.next(result[i]);}if(!destination.closed){destination.complete();}}else if(isPromise_1.isPromise(result)){result.then(function(value){if(!destination.closed){destination.next(value);destination.complete();}},function(err){return destination.error(err);}).then(null,function(err){// Escaping the Promise trap: globally throw unhandled errors
root_1.root.setTimeout(function(){throw err;});});return destination;}else if(result&&typeof result[iterator_1.iterator]==='function'){var iterator=result[iterator_1.iterator]();do{var item=iterator.next();if(item.done){destination.complete();break;}destination.next(item.value);if(destination.closed){break;}}while(true);}else if(result&&typeof result[observable_1.observable]==='function'){var obs=result[observable_1.observable]();if(typeof obs.subscribe!=='function'){destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));}else{return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber,outerValue,outerIndex));}}else{var value=isObject_1.isObject(result)?'an invalid object':"'"+result+"'";var msg="You provided "+value+" where a stream was expected."+' You can provide an Observable, Promise, Array, or Iterable.';destination.error(new TypeError(msg));}return null;}exports.subscribeToResult=subscribeToResult;//# sourceMappingURL=subscribeToResult.js.map

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _isArray=__webpack_require__(27);var _isTransformer=__webpack_require__(74);/**
 * Returns a function that dispatches with different strategies based on the
 * object in list position (last argument). If it is an array, executes [fn].
 * Otherwise, if it has a function with one of the given method names, it will
 * execute that function (functor case). Otherwise, if it is a transformer,
 * uses transducer [xf] to return a new transformer (transducer case).
 * Otherwise, it will default to executing [fn].
 *
 * @private
 * @param {Array} methodNames properties to check for a custom implementation
 * @param {Function} xf transducer to initialize if object is transformer
 * @param {Function} fn default ramda implementation
 * @return {Function} A function that dispatches on object in list position
 */module.exports=function _dispatchable(methodNames,xf,fn){return function(){if(arguments.length===0){return fn();}var args=Array.prototype.slice.call(arguments,0);var obj=args.pop();if(!_isArray(obj)){var idx=0;while(idx<methodNames.length){if(typeof obj[methodNames[idx]]==='function'){return obj[methodNames[idx]].apply(obj,args);}idx+=1;}if(_isTransformer(obj)){var transducer=xf.apply(null,args);return transducer(obj);}}return fn.apply(this,arguments);};};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports={init:function init(){return this.xf['@@transducer/init']();},result:function result(_result){return this.xf['@@transducer/result'](_result);}};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var isArray_1=__webpack_require__(24);var isObject_1=__webpack_require__(159);var isFunction_1=__webpack_require__(64);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var UnsubscriptionError_1=__webpack_require__(160);/**
 * Represents a disposable resource, such as the execution of an Observable. A
 * Subscription has one important method, `unsubscribe`, that takes no argument
 * and just disposes the resource held by the subscription.
 *
 * Additionally, subscriptions may be grouped together through the `add()`
 * method, which will attach a child Subscription to the current Subscription.
 * When a Subscription is unsubscribed, all its children (and its grandchildren)
 * will be unsubscribed as well.
 *
 * @class Subscription
 */var Subscription=function(){/**
     * @param {function(): void} [unsubscribe] A function describing how to
     * perform the disposal of resources when the `unsubscribe` method is called.
     */function Subscription(unsubscribe){/**
         * A flag to indicate whether this Subscription has already been unsubscribed.
         * @type {boolean}
         */this.closed=false;this._parent=null;this._parents=null;this._subscriptions=null;if(unsubscribe){this._unsubscribe=unsubscribe;}}/**
     * Disposes the resources held by the subscription. May, for instance, cancel
     * an ongoing Observable execution or cancel any other type of work that
     * started when the Subscription was created.
     * @return {void}
     */Subscription.prototype.unsubscribe=function(){var hasErrors=false;var errors;if(this.closed){return;}var _a=this,_parent=_a._parent,_parents=_a._parents,_unsubscribe=_a._unsubscribe,_subscriptions=_a._subscriptions;this.closed=true;this._parent=null;this._parents=null;// null out _subscriptions first so any child subscriptions that attempt
// to remove themselves from this subscription will noop
this._subscriptions=null;var index=-1;var len=_parents?_parents.length:0;// if this._parent is null, then so is this._parents, and we
// don't have to remove ourselves from any parent subscriptions.
while(_parent){_parent.remove(this);// if this._parents is null or index >= len,
// then _parent is set to null, and the loop exits
_parent=++index<len&&_parents[index]||null;}if(isFunction_1.isFunction(_unsubscribe)){var trial=tryCatch_1.tryCatch(_unsubscribe).call(this);if(trial===errorObject_1.errorObject){hasErrors=true;errors=errors||(errorObject_1.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError?flattenUnsubscriptionErrors(errorObject_1.errorObject.e.errors):[errorObject_1.errorObject.e]);}}if(isArray_1.isArray(_subscriptions)){index=-1;len=_subscriptions.length;while(++index<len){var sub=_subscriptions[index];if(isObject_1.isObject(sub)){var trial=tryCatch_1.tryCatch(sub.unsubscribe).call(sub);if(trial===errorObject_1.errorObject){hasErrors=true;errors=errors||[];var err=errorObject_1.errorObject.e;if(err instanceof UnsubscriptionError_1.UnsubscriptionError){errors=errors.concat(flattenUnsubscriptionErrors(err.errors));}else{errors.push(err);}}}}}if(hasErrors){throw new UnsubscriptionError_1.UnsubscriptionError(errors);}};/**
     * Adds a tear down to be called during the unsubscribe() of this
     * Subscription.
     *
     * If the tear down being added is a subscription that is already
     * unsubscribed, is the same reference `add` is being called on, or is
     * `Subscription.EMPTY`, it will not be added.
     *
     * If this subscription is already in an `closed` state, the passed
     * tear down logic will be executed immediately.
     *
     * @param {TeardownLogic} teardown The additional logic to execute on
     * teardown.
     * @return {Subscription} Returns the Subscription used or created to be
     * added to the inner subscriptions list. This Subscription can be used with
     * `remove()` to remove the passed teardown logic from the inner subscriptions
     * list.
     */Subscription.prototype.add=function(teardown){if(!teardown||teardown===Subscription.EMPTY){return Subscription.EMPTY;}if(teardown===this){return this;}var subscription=teardown;switch(typeof teardown==='undefined'?'undefined':_typeof(teardown)){case'function':subscription=new Subscription(teardown);case'object':if(subscription.closed||typeof subscription.unsubscribe!=='function'){return subscription;}else if(this.closed){subscription.unsubscribe();return subscription;}else if(typeof subscription._addParent!=='function'/* quack quack */){var tmp=subscription;subscription=new Subscription();subscription._subscriptions=[tmp];}break;default:throw new Error('unrecognized teardown '+teardown+' added to Subscription.');}var subscriptions=this._subscriptions||(this._subscriptions=[]);subscriptions.push(subscription);subscription._addParent(this);return subscription;};/**
     * Removes a Subscription from the internal list of subscriptions that will
     * unsubscribe during the unsubscribe process of this Subscription.
     * @param {Subscription} subscription The subscription to remove.
     * @return {void}
     */Subscription.prototype.remove=function(subscription){var subscriptions=this._subscriptions;if(subscriptions){var subscriptionIndex=subscriptions.indexOf(subscription);if(subscriptionIndex!==-1){subscriptions.splice(subscriptionIndex,1);}}};Subscription.prototype._addParent=function(parent){var _a=this,_parent=_a._parent,_parents=_a._parents;if(!_parent||_parent===parent){// If we don't have a parent, or the new parent is the same as the
// current parent, then set this._parent to the new parent.
this._parent=parent;}else if(!_parents){// If there's already one parent, but not multiple, allocate an Array to
// store the rest of the parent Subscriptions.
this._parents=[parent];}else if(_parents.indexOf(parent)===-1){// Only add the new parent to the _parents list if it's not already there.
_parents.push(parent);}};Subscription.EMPTY=function(empty){empty.closed=true;return empty;}(new Subscription());return Subscription;}();exports.Subscription=Subscription;function flattenUnsubscriptionErrors(errors){return errors.reduce(function(errs,err){return errs.concat(err instanceof UnsubscriptionError_1.UnsubscriptionError?err.errors:err);},[]);}//# sourceMappingURL=Subscription.js.map

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var Subscriber_1=__webpack_require__(2);var Subscription_1=__webpack_require__(9);var ObjectUnsubscribedError_1=__webpack_require__(67);var SubjectSubscription_1=__webpack_require__(162);var rxSubscriber_1=__webpack_require__(65);/**
 * @class SubjectSubscriber<T>
 */var SubjectSubscriber=function(_super){__extends(SubjectSubscriber,_super);function SubjectSubscriber(destination){_super.call(this,destination);this.destination=destination;}return SubjectSubscriber;}(Subscriber_1.Subscriber);exports.SubjectSubscriber=SubjectSubscriber;/**
 * @class Subject<T>
 */var Subject=function(_super){__extends(Subject,_super);function Subject(){_super.call(this);this.observers=[];this.closed=false;this.isStopped=false;this.hasError=false;this.thrownError=null;}Subject.prototype[rxSubscriber_1.rxSubscriber]=function(){return new SubjectSubscriber(this);};Subject.prototype.lift=function(operator){var subject=new AnonymousSubject(this,this);subject.operator=operator;return subject;};Subject.prototype.next=function(value){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}if(!this.isStopped){var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].next(value);}}};Subject.prototype.error=function(err){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}this.hasError=true;this.thrownError=err;this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].error(err);}this.observers.length=0;};Subject.prototype.complete=function(){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}this.isStopped=true;var observers=this.observers;var len=observers.length;var copy=observers.slice();for(var i=0;i<len;i++){copy[i].complete();}this.observers.length=0;};Subject.prototype.unsubscribe=function(){this.isStopped=true;this.closed=true;this.observers=null;};Subject.prototype._trySubscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else{return _super.prototype._trySubscribe.call(this,subscriber);}};Subject.prototype._subscribe=function(subscriber){if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else if(this.hasError){subscriber.error(this.thrownError);return Subscription_1.Subscription.EMPTY;}else if(this.isStopped){subscriber.complete();return Subscription_1.Subscription.EMPTY;}else{this.observers.push(subscriber);return new SubjectSubscription_1.SubjectSubscription(this,subscriber);}};Subject.prototype.asObservable=function(){var observable=new Observable_1.Observable();observable.source=this;return observable;};Subject.create=function(destination,source){return new AnonymousSubject(destination,source);};return Subject;}(Observable_1.Observable);exports.Subject=Subject;/**
 * @class AnonymousSubject<T>
 */var AnonymousSubject=function(_super){__extends(AnonymousSubject,_super);function AnonymousSubject(destination,source){_super.call(this);this.destination=destination;this.source=source;}AnonymousSubject.prototype.next=function(value){var destination=this.destination;if(destination&&destination.next){destination.next(value);}};AnonymousSubject.prototype.error=function(err){var destination=this.destination;if(destination&&destination.error){this.destination.error(err);}};AnonymousSubject.prototype.complete=function(){var destination=this.destination;if(destination&&destination.complete){this.destination.complete();}};AnonymousSubject.prototype._subscribe=function(subscriber){var source=this.source;if(source){return this.source.subscribe(subscriber);}else{return Subscription_1.Subscription.EMPTY;}};return AnonymousSubject;}(Subject);exports.AnonymousSubject=AnonymousSubject;//# sourceMappingURL=Subject.js.map

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// typeof any so that it we don't have to cast when comparing a result to the error object
exports.errorObject={e:{}};//# sourceMappingURL=errorObject.js.map

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {// CommonJS / Node have global context exposed as "global" variable.
// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake
// the global "global" var for now.
var __window=typeof window!=='undefined'&&window;var __self=typeof self!=='undefined'&&typeof WorkerGlobalScope!=='undefined'&&self instanceof WorkerGlobalScope&&self;var __global=typeof global!=='undefined'&&global;var _root=__window||__global||__self;exports.root=_root;// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.
// This is needed when used with angular/tsickle which inserts a goog.module statement.
// Wrap in IIFE
(function(){if(!_root){throw new Error('RxJS could not find any global context (window, self, global)');}})();//# sourceMappingURL=root.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(94)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var errorObject_1=__webpack_require__(11);var tryCatchTarget;function tryCatcher(){try{return tryCatchTarget.apply(this,arguments);}catch(e){errorObject_1.errorObject.e=e;return errorObject_1.errorObject;}}function tryCatch(fn){tryCatchTarget=fn;return tryCatcher;}exports.tryCatch=tryCatch;;//# sourceMappingURL=tryCatch.js.map

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _curry1=__webpack_require__(3);var _curry2=__webpack_require__(1);var _curryN=__webpack_require__(49);/**
 * Returns a curried equivalent of the provided function, with the specified
 * arity. The curried function has two unusual capabilities. First, its
 * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the
 * following are equivalent:
 *
 *   - `g(1)(2)(3)`
 *   - `g(1)(2, 3)`
 *   - `g(1, 2)(3)`
 *   - `g(1, 2, 3)`
 *
 * Secondly, the special placeholder value [`R.__`](#__) may be used to specify
 * "gaps", allowing partial application of any combination of arguments,
 * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),
 * the following are equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @func
 * @memberOf R
 * @since v0.5.0
 * @category Function
 * @sig Number -> (* -> a) -> (* -> a)
 * @param {Number} length The arity for the returned function.
 * @param {Function} fn The function to curry.
 * @return {Function} A new, curried function.
 * @see R.curry
 * @example
 *
 *      var sumArgs = (...args) => R.sum(args);
 *
 *      var curriedAddFourNumbers = R.curryN(4, sumArgs);
 *      var f = curriedAddFourNumbers(1, 2);
 *      var g = f(3);
 *      g(4); //=> 10
 */module.exports=_curry2(function curryN(length,fn){if(length===1){return _curry1(fn);}return _arity(length,_curryN(length,[],fn));});

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _has(prop,obj){return Object.prototype.hasOwnProperty.call(obj,prop);};

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var AsyncAction_1=__webpack_require__(44);var AsyncScheduler_1=__webpack_require__(45);/**
 *
 * Async Scheduler
 *
 * <span class="informal">Schedule task as if you used setTimeout(task, duration)</span>
 *
 * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript
 * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating
 * in intervals.
 *
 * If you just want to "defer" task, that is to perform it right after currently
 * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),
 * better choice will be the {@link asap} scheduler.
 *
 * @example <caption>Use async scheduler to delay task</caption>
 * const task = () => console.log('it works!');
 *
 * Rx.Scheduler.async.schedule(task, 2000);
 *
 * // After 2 seconds logs:
 * // "it works!"
 *
 *
 * @example <caption>Use async scheduler to repeat task in intervals</caption>
 * function task(state) {
 *   console.log(state);
 *   this.schedule(state + 1, 1000); // `this` references currently executing Action,
 *                                   // which we reschedule with new state and delay
 * }
 *
 * Rx.Scheduler.async.schedule(task, 3000, 0);
 *
 * // Logs:
 * // 0 after 3s
 * // 1 after 4s
 * // 2 after 5s
 * // 3 after 6s
 *
 * @static true
 * @name async
 * @owner Scheduler
 */exports.async=new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);//# sourceMappingURL=async.js.map

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _map=__webpack_require__(50);var _reduce=__webpack_require__(18);var _xmap=__webpack_require__(200);var curryN=__webpack_require__(14);var keys=__webpack_require__(22);/**
 * Takes a function and
 * a [functor](https://github.com/fantasyland/fantasy-land#functor),
 * applies the function to each of the functor's values, and returns
 * a functor of the same shape.
 *
 * Ramda provides suitable `map` implementations for `Array` and `Object`,
 * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.
 *
 * Dispatches to the `map` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * Also treats functions as functors and will compose them together.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Functor f => (a -> b) -> f a -> f b
 * @param {Function} fn The function to be called on every element of the input `list`.
 * @param {Array} list The list to be iterated over.
 * @return {Array} The new list.
 * @see R.transduce, R.addIndex
 * @example
 *
 *      var double = x => x * 2;
 *
 *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]
 *
 *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}
 * @symb R.map(f, [a, b]) = [f(a), f(b)]
 * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }
 * @symb R.map(f, functor_o) = functor_o.map(f)
 */module.exports=_curry2(_dispatchable(['fantasy-land/map','map'],_xmap,function map(fn,functor){switch(Object.prototype.toString.call(functor)){case'[object Function]':return curryN(functor.length,function(){return fn.call(this,functor.apply(this,arguments));});case'[object Object]':return _reduce(function(acc,key){acc[key]=fn(functor[key]);return acc;},{},keys(functor));default:return _map(fn,functor);}}));

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _isArrayLike=__webpack_require__(51);var _xwrap=__webpack_require__(104);var bind=__webpack_require__(105);module.exports=function(){function _arrayReduce(xf,acc,list){var idx=0;var len=list.length;while(idx<len){acc=xf['@@transducer/step'](acc,list[idx]);if(acc&&acc['@@transducer/reduced']){acc=acc['@@transducer/value'];break;}idx+=1;}return xf['@@transducer/result'](acc);}function _iterableReduce(xf,acc,iter){var step=iter.next();while(!step.done){acc=xf['@@transducer/step'](acc,step.value);if(acc&&acc['@@transducer/reduced']){acc=acc['@@transducer/value'];break;}step=iter.next();}return xf['@@transducer/result'](acc);}function _methodReduce(xf,acc,obj,methodName){return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'],xf),acc));}var symIterator=typeof Symbol!=='undefined'?Symbol.iterator:'@@iterator';return function _reduce(fn,acc,list){if(typeof fn==='function'){fn=_xwrap(fn);}if(_isArrayLike(list)){return _arrayReduce(fn,acc,list);}if(typeof list['fantasy-land/reduce']==='function'){return _methodReduce(fn,acc,list,'fantasy-land/reduce');}if(list[symIterator]!=null){return _iterableReduce(fn,acc,list[symIterator]());}if(typeof list.next==='function'){return _iterableReduce(fn,acc,list);}if(typeof list.reduce==='function'){return _methodReduce(fn,acc,list,'reduce');}throw new TypeError('reduce: list must be array or iterable');};}();

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _equals=__webpack_require__(222);/**
 * Returns `true` if its arguments are equivalent, `false` otherwise. Handles
 * cyclical data structures.
 *
 * Dispatches symmetrically to the `equals` methods of both arguments, if
 * present.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> b -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      R.equals(1, 1); //=> true
 *      R.equals(1, '1'); //=> false
 *      R.equals([1, 2, 3], [1, 2, 3]); //=> true
 *
 *      var a = {}; a.v = a;
 *      var b = {}; b.v = b;
 *      R.equals(a, b); //=> true
 */module.exports=_curry2(function equals(a,b){return _equals(a,b,[],[]);});

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Private `concat` function to merge two array-like objects.
 *
 * @private
 * @param {Array|Arguments} [set1=[]] An array-like object.
 * @param {Array|Arguments} [set2=[]] An array-like object.
 * @return {Array} A new, merged array.
 * @example
 *
 *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]
 */module.exports=function _concat(set1,set2){set1=set1||[];set2=set2||[];var idx;var len1=set1.length;var len2=set2.length;var result=[];idx=0;while(idx<len1){result[result.length]=set1[idx];idx+=1;}idx=0;while(idx<len2){result[result.length]=set2[idx];idx+=1;}return result;};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _arity(n,fn){/* eslint-disable no-unused-vars */switch(n){case 0:return function(){return fn.apply(this,arguments);};case 1:return function(a0){return fn.apply(this,arguments);};case 2:return function(a0,a1){return fn.apply(this,arguments);};case 3:return function(a0,a1,a2){return fn.apply(this,arguments);};case 4:return function(a0,a1,a2,a3){return fn.apply(this,arguments);};case 5:return function(a0,a1,a2,a3,a4){return fn.apply(this,arguments);};case 6:return function(a0,a1,a2,a3,a4,a5){return fn.apply(this,arguments);};case 7:return function(a0,a1,a2,a3,a4,a5,a6){return fn.apply(this,arguments);};case 8:return function(a0,a1,a2,a3,a4,a5,a6,a7){return fn.apply(this,arguments);};case 9:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return fn.apply(this,arguments);};case 10:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){return fn.apply(this,arguments);};default:throw new Error('First argument to _arity must be a non-negative integer no greater than ten');}};

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _has=__webpack_require__(15);var _isArguments=__webpack_require__(106);/**
 * Returns a list containing the names of all the enumerable own properties of
 * the supplied object.
 * Note that the order of the output array is not guaranteed to be consistent
 * across different JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {k: v} -> [k]
 * @param {Object} obj The object to extract properties from
 * @return {Array} An array of the object's own properties.
 * @see R.keysIn, R.values
 * @example
 *
 *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']
 */module.exports=function(){// cover IE < 9 keys issues
var hasEnumBug=!{toString:null}.propertyIsEnumerable('toString');var nonEnumerableProps=['constructor','valueOf','isPrototypeOf','toString','propertyIsEnumerable','hasOwnProperty','toLocaleString'];// Safari bug
var hasArgsEnumBug=function(){'use strict';return arguments.propertyIsEnumerable('length');}();var contains=function contains(list,item){var idx=0;while(idx<list.length){if(list[idx]===item){return true;}idx+=1;}return false;};return typeof Object.keys==='function'&&!hasArgsEnumBug?_curry1(function keys(obj){return Object(obj)!==obj?[]:Object.keys(obj);}):_curry1(function keys(obj){if(Object(obj)!==obj){return[];}var prop,nIdx;var ks=[];var checkArgsLength=hasArgsEnumBug&&_isArguments(obj);for(prop in obj){if(_has(prop,obj)&&(!checkArgsLength||prop!=='length')){ks[ks.length]=prop;}}if(hasEnumBug){nIdx=nonEnumerableProps.length-1;while(nIdx>=0){prop=nonEnumerableProps[nIdx];if(_has(prop,obj)&&!contains(ks,prop)){ks[ks.length]=prop;}nIdx-=1;}}return ks;});}();

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var _reduce=__webpack_require__(18);/**
 * Returns a single item by iterating through the list, successively calling
 * the iterator function and passing it an accumulator value and the current
 * value from the array, and then passing the result to the next call.
 *
 * The iterator function receives two values: *(acc, value)*. It may use
 * [`R.reduced`](#reduced) to shortcut the iteration.
 *
 * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function
 * is *(value, acc)*.
 *
 * Note: `R.reduce` does not skip deleted or unassigned indices (sparse
 * arrays), unlike the native `Array.prototype.reduce` method. For more details
 * on this behavior, see:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description
 *
 * Dispatches to the `reduce` method of the third argument, if present. When
 * doing so, it is up to the user to handle the [`R.reduced`](#reduced)
 * shortcuting, as this is not implemented by `reduce`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig ((a, b) -> a) -> a -> [b] -> a
 * @param {Function} fn The iterator function. Receives two values, the accumulator and the
 *        current element from the array.
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.reduced, R.addIndex, R.reduceRight
 * @example
 *
 *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10
 *                -               -10
 *               / \              / \
 *              -   4           -6   4
 *             / \              / \
 *            -   3   ==>     -3   3
 *           / \              / \
 *          -   2           -1   2
 *         / \              / \
 *        0   1            0   1
 *
 * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)
 */module.exports=_curry3(_reduce);

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.isArray=Array.isArray||function(x){return x&&typeof x.length==='number';};//# sourceMappingURL=isArray.js.map

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function isScheduler(value){return value&&typeof value.schedule==='function';}exports.isScheduler=isScheduler;//# sourceMappingURL=isScheduler.js.map

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var ScalarObservable_1=__webpack_require__(95);var EmptyObservable_1=__webpack_require__(29);var isScheduler_1=__webpack_require__(25);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var ArrayObservable=function(_super){__extends(ArrayObservable,_super);function ArrayObservable(array,scheduler){_super.call(this);this.array=array;this.scheduler=scheduler;if(!scheduler&&array.length===1){this._isScalar=true;this.value=array[0];}}ArrayObservable.create=function(array,scheduler){return new ArrayObservable(array,scheduler);};/**
     * Creates an Observable that emits some values you specify as arguments,
     * immediately one after the other, and then emits a complete notification.
     *
     * <span class="informal">Emits the arguments you provide, then completes.
     * </span>
     *
     * <img src="./img/of.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the arguments given, and the complete notification thereafter. It can
     * be used for composing with other Observables, such as with {@link concat}.
     * By default, it uses a `null` IScheduler, which means the `next`
     * notifications are sent synchronously, although with a different IScheduler
     * it is possible to determine when those notifications will be delivered.
     *
     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>
     * var numbers = Rx.Observable.of(10, 20, 30);
     * var letters = Rx.Observable.of('a', 'b', 'c');
     * var interval = Rx.Observable.interval(1000);
     * var result = numbers.concat(letters).concat(interval);
     * result.subscribe(x => console.log(x));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link throw}
     *
     * @param {...T} values Arguments that represent `next` values to be emitted.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the `next` notifications.
     * @return {Observable<T>} An Observable that emits each given input value.
     * @static true
     * @name of
     * @owner Observable
     */ArrayObservable.of=function(){var array=[];for(var _i=0;_i<arguments.length;_i++){array[_i-0]=arguments[_i];}var scheduler=array[array.length-1];if(isScheduler_1.isScheduler(scheduler)){array.pop();}else{scheduler=null;}var len=array.length;if(len>1){return new ArrayObservable(array,scheduler);}else if(len===1){return new ScalarObservable_1.ScalarObservable(array[0],scheduler);}else{return new EmptyObservable_1.EmptyObservable(scheduler);}};ArrayObservable.dispatch=function(state){var array=state.array,index=state.index,count=state.count,subscriber=state.subscriber;if(index>=count){subscriber.complete();return;}subscriber.next(array[index]);if(subscriber.closed){return;}state.index=index+1;this.schedule(state);};ArrayObservable.prototype._subscribe=function(subscriber){var index=0;var array=this.array;var count=array.length;var scheduler=this.scheduler;if(scheduler){return scheduler.schedule(ArrayObservable.dispatch,0,{array:array,index:index,count:count,subscriber:subscriber});}else{for(var i=0;i<count&&!subscriber.closed;i++){subscriber.next(array[i]);}subscriber.complete();}};return ArrayObservable;}(Observable_1.Observable);exports.ArrayObservable=ArrayObservable;//# sourceMappingURL=ArrayObservable.js.map

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Tests whether or not an object is an array.
 *
 * @private
 * @param {*} val The object to test.
 * @return {Boolean} `true` if `val` is an array, `false` otherwise.
 * @example
 *
 *      _isArray([]); //=> true
 *      _isArray(null); //=> false
 *      _isArray({}); //=> false
 */module.exports=Array.isArray||function _isArray(val){return val!=null&&val.length>=0&&Object.prototype.toString.call(val)==='[object Array]';};

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _reduced(x){return x&&x['@@transducer/reduced']?x:{'@@transducer/value':x,'@@transducer/reduced':true};};

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var EmptyObservable=function(_super){__extends(EmptyObservable,_super);function EmptyObservable(scheduler){_super.call(this);this.scheduler=scheduler;}/**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits a complete notification.
     *
     * <span class="informal">Just emits 'complete', and nothing else.
     * </span>
     *
     * <img src="./img/empty.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the complete notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then complete.</caption>
     * var result = Rx.Observable.empty().startWith(7);
     * result.subscribe(x => console.log(x));
     *
     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()
     * );
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following to the console:
     * // x is equal to the count on the interval eg(0,1,2,3,...)
     * // x will occur every 1000ms
     * // if x % 2 is equal to 1 print abc
     * // if x % 2 is not equal to 1 nothing will be output
     *
     * @see {@link create}
     * @see {@link never}
     * @see {@link of}
     * @see {@link throw}
     *
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the complete notification.
     * @return {Observable} An "empty" Observable: emits only the complete
     * notification.
     * @static true
     * @name empty
     * @owner Observable
     */EmptyObservable.create=function(scheduler){return new EmptyObservable(scheduler);};EmptyObservable.dispatch=function(arg){var subscriber=arg.subscriber;subscriber.complete();};EmptyObservable.prototype._subscribe=function(subscriber){var scheduler=this.scheduler;if(scheduler){return scheduler.schedule(EmptyObservable.dispatch,0,{subscriber:subscriber});}else{subscriber.complete();}};return EmptyObservable;}(Observable_1.Observable);exports.EmptyObservable=EmptyObservable;//# sourceMappingURL=EmptyObservable.js.map

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _checkForMethod=__webpack_require__(37);var _curry3=__webpack_require__(4);/**
 * Returns the elements of the given list or string (or object with a `slice`
 * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).
 *
 * Dispatches to the `slice` method of the third argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.4
 * @category List
 * @sig Number -> Number -> [a] -> [a]
 * @sig Number -> Number -> String -> String
 * @param {Number} fromIndex The start index (inclusive).
 * @param {Number} toIndex The end index (exclusive).
 * @param {*} list
 * @return {*}
 * @example
 *
 *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']
 *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']
 *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']
 *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']
 *      R.slice(0, 3, 'ramda');                     //=> 'ram'
 */module.exports=_curry3(_checkForMethod('slice',function slice(fromIndex,toIndex,list){return Array.prototype.slice.call(list,fromIndex,toIndex);}));

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _indexOf=__webpack_require__(122);module.exports=function _contains(a,list){return _indexOf(list,a,0)>=0;};

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var ConnectableObservable_1=__webpack_require__(178);/* tslint:enable:max-line-length *//**
 * Returns an Observable that emits the results of invoking a specified selector on items
 * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.
 *
 * <img src="./img/multicast.png" width="100%">
 *
 * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through
 * which the source sequence's elements will be multicast to the selector function
 * or Subject to push source elements into.
 * @param {Function} [selector] - Optional selector function that can use the multicasted source stream
 * as many times as needed, without causing multiple subscriptions to the source stream.
 * Subscribers to the given source will receive all notifications of the source from the
 * time of the subscription forward.
 * @return {Observable} An Observable that emits the results of invoking the selector
 * on the items emitted by a `ConnectableObservable` that shares a single subscription to
 * the underlying stream.
 * @method multicast
 * @owner Observable
 */function multicast(subjectOrSubjectFactory,selector){var subjectFactory;if(typeof subjectOrSubjectFactory==='function'){subjectFactory=subjectOrSubjectFactory;}else{subjectFactory=function subjectFactory(){return subjectOrSubjectFactory;};}if(typeof selector==='function'){return this.lift(new MulticastOperator(subjectFactory,selector));}var connectable=Object.create(this,ConnectableObservable_1.connectableObservableDescriptor);connectable.source=this;connectable.subjectFactory=subjectFactory;return connectable;}exports.multicast=multicast;var MulticastOperator=function(){function MulticastOperator(subjectFactory,selector){this.subjectFactory=subjectFactory;this.selector=selector;}MulticastOperator.prototype.call=function(subscriber,source){var selector=this.selector;var subject=this.subjectFactory();var subscription=selector(subject).subscribe(subscriber);subscription.add(source.subscribe(subject));return subscription;};return MulticastOperator;}();exports.MulticastOperator=MulticastOperator;//# sourceMappingURL=multicast.js.map

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Returns a function that always returns the given value. Note that for
 * non-primitives the value returned is a reference to the original value.
 *
 * This function is known as `const`, `constant`, or `K` (for K combinator) in
 * other languages and libraries.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig a -> (* -> a)
 * @param {*} val The value to wrap in a function
 * @return {Function} A Function :: * -> val.
 * @example
 *
 *      var t = R.always('Tee');
 *      t(); //=> 'Tee'
 */module.exports=_curry1(function always(val){return function(){return val;};});

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns the larger of its two arguments.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> a
 * @param {*} a
 * @param {*} b
 * @return {*}
 * @see R.maxBy, R.min
 * @example
 *
 *      R.max(789, 123); //=> 789
 *      R.max('a', 'b'); //=> 'b'
 */module.exports=_curry2(function max(a,b){return b>a?b:a;});

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var map=__webpack_require__(17);var prop=__webpack_require__(75);/**
 * Returns a new list by plucking the same named property off all objects in
 * the list supplied.
 *
 * `pluck` will work on
 * any [functor](https://github.com/fantasyland/fantasy-land#functor) in
 * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Functor f => k -> f {k: v} -> f v
 * @param {Number|String} key The key name to pluck off of each object.
 * @param {Array} f The array or functor to consider.
 * @return {Array} The list of values for the given key.
 * @see R.props
 * @example
 *
 *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]
 *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]
 *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}
 * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]
 * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]
 */module.exports=_curry2(function pluck(p,list){return map(prop(p),list);});

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _isString(x){return Object.prototype.toString.call(x)==='[object String]';};

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _isArray=__webpack_require__(27);/**
 * This checks whether a function has a [methodname] function. If it isn't an
 * array it will execute that function otherwise it will default to the ramda
 * implementation.
 *
 * @private
 * @param {Function} fn ramda implemtation
 * @param {String} methodname property to check for a custom implementation
 * @return {Object} Whatever the return value of the method is.
 */module.exports=function _checkForMethod(methodname,fn){return function(){var length=arguments.length;if(length===0){return fn();}var obj=arguments[length-1];return _isArray(obj)||typeof obj[methodname]!=='function'?fn.apply(this,arguments):obj[methodname].apply(obj,Array.prototype.slice.call(arguments,0,length-1));};};

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _toString=__webpack_require__(221);/**
 * Returns the string representation of the given value. `eval`'ing the output
 * should result in a value equivalent to the input value. Many of the built-in
 * `toString` methods do not satisfy this requirement.
 *
 * If the given value is an `[object Object]` with a `toString` method other
 * than `Object.prototype.toString`, this method is invoked with no arguments
 * to produce the return value. This means user-defined constructor functions
 * can provide a suitable `toString` method. For example:
 *
 *     function Point(x, y) {
 *       this.x = x;
 *       this.y = y;
 *     }
 *
 *     Point.prototype.toString = function() {
 *       return 'new Point(' + this.x + ', ' + this.y + ')';
 *     };
 *
 *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category String
 * @sig * -> String
 * @param {*} val
 * @return {String}
 * @example
 *
 *      R.toString(42); //=> '42'
 *      R.toString('abc'); //=> '"abc"'
 *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'
 *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{"bar": 2, "baz": 3, "foo": 1}'
 *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date("2001-02-03T04:05:06.000Z")'
 */module.exports=_curry1(function toString(val){return _toString(val,[]);});

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isString=__webpack_require__(36);/**
 * Returns the nth element of the given list or string. If n is negative the
 * element at index length + n is returned.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> a | Undefined
 * @sig Number -> String -> String
 * @param {Number} offset
 * @param {*} list
 * @return {*}
 * @example
 *
 *      var list = ['foo', 'bar', 'baz', 'quux'];
 *      R.nth(1, list); //=> 'bar'
 *      R.nth(-1, list); //=> 'quux'
 *      R.nth(-99, list); //=> undefined
 *
 *      R.nth(2, 'abc'); //=> 'c'
 *      R.nth(3, 'abc'); //=> ''
 * @symb R.nth(-1, [a, b, c]) = c
 * @symb R.nth(0, [a, b, c]) = a
 * @symb R.nth(1, [a, b, c]) = b
 */module.exports=_curry2(function nth(offset,list){var idx=offset<0?list.length+offset:offset;return _isString(list)?list.charAt(idx):list[idx];});

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isFunction=__webpack_require__(54);var curryN=__webpack_require__(14);var toString=__webpack_require__(38);/**
 * Turns a named method with a specified arity into a function that can be
 * called directly supplied with arguments and a target object.
 *
 * The returned function is curried and accepts `arity + 1` parameters where
 * the final parameter is the target object.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)
 * @param {Number} arity Number of arguments the returned function should take
 *        before the target object.
 * @param {String} method Name of the method to call.
 * @return {Function} A new curried function.
 * @see R.construct
 * @example
 *
 *      var sliceFrom = R.invoker(1, 'slice');
 *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'
 *      var sliceFrom6 = R.invoker(2, 'slice')(6);
 *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'
 * @symb R.invoker(0, 'method')(o) = o['method']()
 * @symb R.invoker(1, 'method')(a, o) = o['method'](a)
 * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)
 */module.exports=_curry2(function invoker(arity,method){return curryN(arity+1,function(){var target=arguments[arity];if(target!=null&&_isFunction(target[method])){return target[method].apply(target,Array.prototype.slice.call(arguments,0,arity));}throw new TypeError(toString(target)+' does not have a method named "'+method+'"');});});

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Retrieve the value at a given path.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category Object
 * @typedefn Idx = String | Int
 * @sig [Idx] -> {a} -> a | Undefined
 * @param {Array} path The path to use.
 * @param {Object} obj The object to retrieve the nested property from.
 * @return {*} The data at `path`.
 * @see R.prop
 * @example
 *
 *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2
 *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined
 */module.exports=_curry2(function path(paths,obj){var val=obj;var idx=0;while(idx<paths.length){if(val==null){return;}val=val[paths[idx]];idx+=1;}return val;});

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);function symbolIteratorPonyfill(root){var _Symbol=root.Symbol;if(typeof _Symbol==='function'){if(!_Symbol.iterator){_Symbol.iterator=_Symbol('iterator polyfill');}return _Symbol.iterator;}else{// [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)
var Set_1=root.Set;if(Set_1&&typeof new Set_1()['@@iterator']==='function'){return'@@iterator';}var Map_1=root.Map;// required for compatability with es6-shim
if(Map_1){var keys=Object.getOwnPropertyNames(Map_1.prototype);for(var i=0;i<keys.length;++i){var key=keys[i];// according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.
if(key!=='entries'&&key!=='size'&&Map_1.prototype[key]===Map_1.prototype['entries']){return key;}}}return'@@iterator';}}exports.symbolIteratorPonyfill=symbolIteratorPonyfill;exports.iterator=symbolIteratorPonyfill(root_1.root);/**
 * @deprecated use iterator instead
 */exports.$$iterator=exports.iterator;//# sourceMappingURL=iterator.js.map

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);/**
 * Represents a push-based event or value that an {@link Observable} can emit.
 * This class is particularly useful for operators that manage notifications,
 * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and
 * others. Besides wrapping the actual delivered value, it also annotates it
 * with metadata of, for instance, what type of push message it is (`next`,
 * `error`, or `complete`).
 *
 * @see {@link materialize}
 * @see {@link dematerialize}
 * @see {@link observeOn}
 *
 * @class Notification<T>
 */var Notification=function(){function Notification(kind,value,error){this.kind=kind;this.value=value;this.error=error;this.hasValue=kind==='N';}/**
     * Delivers to the given `observer` the value wrapped by this Notification.
     * @param {Observer} observer
     * @return
     */Notification.prototype.observe=function(observer){switch(this.kind){case'N':return observer.next&&observer.next(this.value);case'E':return observer.error&&observer.error(this.error);case'C':return observer.complete&&observer.complete();}};/**
     * Given some {@link Observer} callbacks, deliver the value represented by the
     * current Notification to the correctly corresponding callback.
     * @param {function(value: T): void} next An Observer `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */Notification.prototype.do=function(next,error,complete){var kind=this.kind;switch(kind){case'N':return next&&next(this.value);case'E':return error&&error(this.error);case'C':return complete&&complete();}};/**
     * Takes an Observer or its individual callback functions, and calls `observe`
     * or `do` methods accordingly.
     * @param {Observer|function(value: T): void} nextOrObserver An Observer or
     * the `next` callback.
     * @param {function(err: any): void} [error] An Observer `error` callback.
     * @param {function(): void} [complete] An Observer `complete` callback.
     * @return {any}
     */Notification.prototype.accept=function(nextOrObserver,error,complete){if(nextOrObserver&&typeof nextOrObserver.next==='function'){return this.observe(nextOrObserver);}else{return this.do(nextOrObserver,error,complete);}};/**
     * Returns a simple Observable that just delivers the notification represented
     * by this Notification instance.
     * @return {any}
     */Notification.prototype.toObservable=function(){var kind=this.kind;switch(kind){case'N':return Observable_1.Observable.of(this.value);case'E':return Observable_1.Observable.throw(this.error);case'C':return Observable_1.Observable.empty();}throw new Error('unexpected notification kind value');};/**
     * A shortcut to create a Notification instance of the type `next` from a
     * given value.
     * @param {T} value The `next` value.
     * @return {Notification<T>} The "next" Notification representing the
     * argument.
     */Notification.createNext=function(value){if(typeof value!=='undefined'){return new Notification('N',value);}return Notification.undefinedValueNotification;};/**
     * A shortcut to create a Notification instance of the type `error` from a
     * given error.
     * @param {any} [err] The `error` error.
     * @return {Notification<T>} The "error" Notification representing the
     * argument.
     */Notification.createError=function(err){return new Notification('E',undefined,err);};/**
     * A shortcut to create a Notification instance of the type `complete`.
     * @return {Notification<any>} The valueless "complete" Notification.
     */Notification.createComplete=function(){return Notification.completeNotification;};Notification.completeNotification=new Notification('C');Notification.undefinedValueNotification=new Notification('N',undefined);return Notification;}();exports.Notification=Notification;//# sourceMappingURL=Notification.js.map

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var root_1=__webpack_require__(12);var Action_1=__webpack_require__(432);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var AsyncAction=function(_super){__extends(AsyncAction,_super);function AsyncAction(scheduler,work){_super.call(this,scheduler,work);this.scheduler=scheduler;this.work=work;this.pending=false;}AsyncAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(this.closed){return this;}// Always replace the current state with the new state.
this.state=state;// Set the pending flag indicating that this action has been scheduled, or
// has recursively rescheduled itself.
this.pending=true;var id=this.id;var scheduler=this.scheduler;//
// Important implementation note:
//
// Actions only execute once by default, unless rescheduled from within the
// scheduled callback. This allows us to implement single and repeat
// actions via the same code path, without adding API surface area, as well
// as mimic traditional recursion but across asynchronous boundaries.
//
// However, JS runtimes and timers distinguish between intervals achieved by
// serial `setTimeout` calls vs. a single `setInterval` call. An interval of
// serial `setTimeout` calls can be individually delayed, which delays
// scheduling the next `setTimeout`, and so on. `setInterval` attempts to
// guarantee the interval callback will be invoked more precisely to the
// interval period, regardless of load.
//
// Therefore, we use `setInterval` to schedule single and repeat actions.
// If the action reschedules itself with the same delay, the interval is not
// canceled. If the action doesn't reschedule, or reschedules with a
// different delay, the interval will be canceled after scheduled callback
// execution.
//
if(id!=null){this.id=this.recycleAsyncId(scheduler,id,delay);}this.delay=delay;// If this action has already an async Id, don't request a new one.
this.id=this.id||this.requestAsyncId(scheduler,this.id,delay);return this;};AsyncAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}return root_1.root.setInterval(scheduler.flush.bind(scheduler,this),delay);};AsyncAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}// If this action is rescheduled with the same delay time, don't clear the interval id.
if(delay!==null&&this.delay===delay&&this.pending===false){return id;}// Otherwise, if the action's delay time is different from the current delay,
// or the action has been rescheduled before it's executed, clear the interval id
return root_1.root.clearInterval(id)&&undefined||undefined;};/**
     * Immediately executes this action and the `work` it contains.
     * @return {any}
     */AsyncAction.prototype.execute=function(state,delay){if(this.closed){return new Error('executing a cancelled action');}this.pending=false;var error=this._execute(state,delay);if(error){return error;}else if(this.pending===false&&this.id!=null){// Dequeue if the action didn't reschedule itself. Don't call
// unsubscribe(), because the action could reschedule later.
// For example:
// ```
// scheduler.schedule(function doWork(counter) {
//   /* ... I'm a busy worker bee ... */
//   var originalAction = this;
//   /* wait 100ms before rescheduling the action */
//   setTimeout(function () {
//     originalAction.schedule(counter + 1);
//   }, 100);
// }, 1000);
// ```
this.id=this.recycleAsyncId(this.scheduler,this.id,null);}};AsyncAction.prototype._execute=function(state,delay){var errored=false;var errorValue=undefined;try{this.work(state);}catch(e){errored=true;errorValue=!!e&&e||new Error(e);}if(errored){this.unsubscribe();return errorValue;}};AsyncAction.prototype._unsubscribe=function(){var id=this.id;var scheduler=this.scheduler;var actions=scheduler.actions;var index=actions.indexOf(this);this.work=null;this.state=null;this.pending=false;this.scheduler=null;if(index!==-1){actions.splice(index,1);}if(id!=null){this.id=this.recycleAsyncId(scheduler,id,null);}this.delay=null;};return AsyncAction;}(Action_1.Action);exports.AsyncAction=AsyncAction;//# sourceMappingURL=AsyncAction.js.map

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Scheduler_1=__webpack_require__(433);var AsyncScheduler=function(_super){__extends(AsyncScheduler,_super);function AsyncScheduler(){_super.apply(this,arguments);this.actions=[];/**
         * A flag to indicate whether the Scheduler is currently executing a batch of
         * queued actions.
         * @type {boolean}
         */this.active=false;/**
         * An internal ID used to track the latest asynchronous task such as those
         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and
         * others.
         * @type {any}
         */this.scheduled=undefined;}AsyncScheduler.prototype.flush=function(action){var actions=this.actions;if(this.active){actions.push(action);return;}var error;this.active=true;do{if(error=action.execute(action.state,action.delay)){break;}}while(action=actions.shift());// exhaust the scheduler queue
this.active=false;if(error){while(action=actions.shift()){action.unsubscribe();}throw error;}};return AsyncScheduler;}(Scheduler_1.Scheduler);exports.AsyncScheduler=AsyncScheduler;//# sourceMappingURL=AsyncScheduler.js.map

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};/**
 * An error thrown when an element was queried at a certain index of an
 * Observable, but no such index or position exists in that sequence.
 *
 * @see {@link elementAt}
 * @see {@link take}
 * @see {@link takeLast}
 *
 * @class ArgumentOutOfRangeError
 */var ArgumentOutOfRangeError=function(_super){__extends(ArgumentOutOfRangeError,_super);function ArgumentOutOfRangeError(){var err=_super.call(this,'argument out of range');this.name=err.name='ArgumentOutOfRangeError';this.stack=err.stack;this.message=err.message;}return ArgumentOutOfRangeError;}(Error);exports.ArgumentOutOfRangeError=ArgumentOutOfRangeError;//# sourceMappingURL=ArgumentOutOfRangeError.js.map

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};module.exports=function _isPlaceholder(a){return a!=null&&(typeof a==='undefined'?'undefined':_typeof(a))==='object'&&a['@@functional/placeholder']===true;};

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Adds two values.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Math
 * @sig Number -> Number -> Number
 * @param {Number} a
 * @param {Number} b
 * @return {Number}
 * @see R.subtract
 * @example
 *
 *      R.add(2, 3);       //=>  5
 *      R.add(7)(10);      //=> 17
 */module.exports=_curry2(function add(a,b){return Number(a)+Number(b);});

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _isPlaceholder=__webpack_require__(47);/**
 * Internal curryN function.
 *
 * @private
 * @category Function
 * @param {Number} length The arity of the curried function.
 * @param {Array} received An array of arguments received thus far.
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */module.exports=function _curryN(length,received,fn){return function(){var combined=[];var argsIdx=0;var left=length;var combinedIdx=0;while(combinedIdx<received.length||argsIdx<arguments.length){var result;if(combinedIdx<received.length&&(!_isPlaceholder(received[combinedIdx])||argsIdx>=arguments.length)){result=received[combinedIdx];}else{result=arguments[argsIdx];argsIdx+=1;}combined[combinedIdx]=result;if(!_isPlaceholder(result)){left-=1;}combinedIdx+=1;}return left<=0?fn.apply(this,combined):_arity(left,_curryN(length,combined,fn));};};

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _map(fn,functor){var idx=0;var len=functor.length;var result=Array(len);while(idx<len){result[idx]=fn(functor[idx]);idx+=1;}return result;};

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _curry1=__webpack_require__(3);var _isArray=__webpack_require__(27);var _isString=__webpack_require__(36);/**
 * Tests whether or not an object is similar to an array.
 *
 * @private
 * @category Type
 * @category List
 * @sig * -> Boolean
 * @param {*} x The object to test.
 * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.
 * @example
 *
 *      _isArrayLike([]); //=> true
 *      _isArrayLike(true); //=> false
 *      _isArrayLike({}); //=> false
 *      _isArrayLike({length: 10}); //=> false
 *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true
 */module.exports=_curry1(function isArrayLike(x){if(_isArray(x)){return true;}if(!x){return false;}if((typeof x==='undefined'?'undefined':_typeof(x))!=='object'){return false;}if(_isString(x)){return false;}if(x.nodeType===1){return!!x.length;}if(x.length===0){return true;}if(x.length>0){return x.hasOwnProperty(0)&&x.hasOwnProperty(x.length-1);}return false;});

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Makes a shallow clone of an object, setting or overriding the specified
 * property with the given value. Note that this copies and flattens prototype
 * properties onto the new object as well. All non-primitive properties are
 * copied by reference.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Object
 * @sig String -> a -> {k: v} -> {k: v}
 * @param {String} prop The property name to set
 * @param {*} val The new value
 * @param {Object} obj The object to clone
 * @return {Object} A new object equivalent to the original except for the changed property.
 * @see R.dissoc
 * @example
 *
 *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}
 */module.exports=_curry3(function assoc(prop,val,obj){var result={};for(var p in obj){result[p]=obj[p];}result[prop]=val;return result;});

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Wraps a function of any arity (including nullary) in a function that accepts
 * exactly `n` parameters. Any extraneous parameters will not be passed to the
 * supplied function.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig Number -> (* -> a) -> (* -> a)
 * @param {Number} n The desired arity of the new function.
 * @param {Function} fn The function to wrap.
 * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of
 *         arity `n`.
 * @see R.binary, R.unary
 * @example
 *
 *      var takesTwoArgs = (a, b) => [a, b];
 *
 *      takesTwoArgs.length; //=> 2
 *      takesTwoArgs(1, 2); //=> [1, 2]
 *
 *      var takesOneArg = R.nAry(1, takesTwoArgs);
 *      takesOneArg.length; //=> 1
 *      // Only `n` arguments are passed to the wrapped function
 *      takesOneArg(1, 2); //=> [1, undefined]
 * @symb R.nAry(0, f)(a, b) = f()
 * @symb R.nAry(1, f)(a, b) = f(a)
 * @symb R.nAry(2, f)(a, b) = f(a, b)
 */module.exports=_curry2(function nAry(n,fn){switch(n){case 0:return function(){return fn.call(this);};case 1:return function(a0){return fn.call(this,a0);};case 2:return function(a0,a1){return fn.call(this,a0,a1);};case 3:return function(a0,a1,a2){return fn.call(this,a0,a1,a2);};case 4:return function(a0,a1,a2,a3){return fn.call(this,a0,a1,a2,a3);};case 5:return function(a0,a1,a2,a3,a4){return fn.call(this,a0,a1,a2,a3,a4);};case 6:return function(a0,a1,a2,a3,a4,a5){return fn.call(this,a0,a1,a2,a3,a4,a5);};case 7:return function(a0,a1,a2,a3,a4,a5,a6){return fn.call(this,a0,a1,a2,a3,a4,a5,a6);};case 8:return function(a0,a1,a2,a3,a4,a5,a6,a7){return fn.call(this,a0,a1,a2,a3,a4,a5,a6,a7);};case 9:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8){return fn.call(this,a0,a1,a2,a3,a4,a5,a6,a7,a8);};case 10:return function(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9){return fn.call(this,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);};default:throw new Error('First argument to nAry must be a non-negative integer no greater than ten');}});

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _isFunction(x){return Object.prototype.toString.call(x)==='[object Function]';};

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var liftN=__webpack_require__(114);/**
 * "lifts" a function of arity > 1 so that it may "map over" a list, Function or other
 * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig (*... -> *) -> ([*]... -> [*])
 * @param {Function} fn The function to lift into higher context
 * @return {Function} The lifted function.
 * @see R.liftN
 * @example
 *
 *      var madd3 = R.lift((a, b, c) => a + b + c);
 *
 *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]
 *
 *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);
 *
 *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]
 */module.exports=_curry1(function lift(fn){return liftN(fn.length,fn);});

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var curryN=__webpack_require__(14);/**
 * Returns a curried equivalent of the provided function. The curried function
 * has two unusual capabilities. First, its arguments needn't be provided one
 * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the
 * following are equivalent:
 *
 *   - `g(1)(2)(3)`
 *   - `g(1)(2, 3)`
 *   - `g(1, 2)(3)`
 *   - `g(1, 2, 3)`
 *
 * Secondly, the special placeholder value [`R.__`](#__) may be used to specify
 * "gaps", allowing partial application of any combination of arguments,
 * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),
 * the following are equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (* -> a) -> (* -> a)
 * @param {Function} fn The function to curry.
 * @return {Function} A new, curried function.
 * @see R.curryN
 * @example
 *
 *      var addFourNumbers = (a, b, c, d) => a + b + c + d;
 *
 *      var curriedAddFourNumbers = R.curry(addFourNumbers);
 *      var f = curriedAddFourNumbers(1, 2);
 *      var g = f(3);
 *      g(4); //=> 10
 */module.exports=_curry1(function curry(fn){return curryN(fn.length,fn);});

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _isString=__webpack_require__(36);/**
 * Returns a new list or string with the elements or characters in reverse
 * order.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {Array|String} list
 * @return {Array|String}
 * @example
 *
 *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]
 *      R.reverse([1, 2]);     //=> [2, 1]
 *      R.reverse([1]);        //=> [1]
 *      R.reverse([]);         //=> []
 *
 *      R.reverse('abc');      //=> 'cba'
 *      R.reverse('ab');       //=> 'ba'
 *      R.reverse('a');        //=> 'a'
 *      R.reverse('');         //=> ''
 */module.exports=_curry1(function reverse(list){return _isString(list)?list.split('').reverse().join(''):Array.prototype.slice.call(list,0).reverse();});

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _complement=__webpack_require__(124);var _curry2=__webpack_require__(1);var filter=__webpack_require__(83);/**
 * The complement of [`filter`](#filter).
 *
 * Acts as a transducer if a transformer is given in list position. Filterable
 * objects include plain objects or any object that has a filter method such
 * as `Array`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> f a
 * @param {Function} pred
 * @param {Array} filterable
 * @return {Array}
 * @see R.filter, R.transduce, R.addIndex
 * @example
 *
 *      var isOdd = (n) => n % 2 === 1;
 *
 *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]
 *
 *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */module.exports=_curry2(function reject(pred,filterable){return filter(_complement(pred),filterable);});

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curryN=__webpack_require__(49);var _dispatchable=__webpack_require__(7);var _has=__webpack_require__(15);var _reduce=__webpack_require__(18);var _xreduceBy=__webpack_require__(232);/**
 * Groups the elements of the list according to the result of calling
 * the String-returning function `keyFn` on each element and reduces the elements
 * of each group to a single value via the reducer function `valueFn`.
 *
 * This function is basically a more general [`groupBy`](#groupBy) function.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.20.0
 * @category List
 * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}
 * @param {Function} valueFn The function that reduces the elements of each group to a single
 *        value. Receives two values, accumulator for a particular group and the current element.
 * @param {*} acc The (initial) accumulator value for each group.
 * @param {Function} keyFn The function that maps the list's element into a key.
 * @param {Array} list The array to group.
 * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of
 *         `valueFn` for elements which produced that key when passed to `keyFn`.
 * @see R.groupBy, R.reduce
 * @example
 *
 *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);
 *      var namesByGrade = reduceToNamesBy(function(student) {
 *        var score = student.score;
 *        return score < 65 ? 'F' :
 *               score < 70 ? 'D' :
 *               score < 80 ? 'C' :
 *               score < 90 ? 'B' : 'A';
 *      });
 *      var students = [{name: 'Lucy', score: 92},
 *                      {name: 'Drew', score: 85},
 *                      // ...
 *                      {name: 'Bart', score: 62}];
 *      namesByGrade(students);
 *      // {
 *      //   'A': ['Lucy'],
 *      //   'B': ['Drew']
 *      //   // ...,
 *      //   'F': ['Bart']
 *      // }
 */module.exports=_curryN(4,[],_dispatchable([],_xreduceBy,function reduceBy(valueFn,valueAcc,keyFn,list){return _reduce(function(acc,elt){var key=keyFn(elt);acc[key]=valueFn(_has(key,acc)?acc[key]:valueAcc,elt);return acc;},{},list);}));

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _containsWith(pred,x,list){var idx=0;var len=list.length;while(idx<len){if(pred(x,list[idx])){return true;}idx+=1;}return false;};

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var curry=__webpack_require__(56);/**
 * Returns a new function much like the supplied one, except that the first two
 * arguments' order is reversed.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)
 * @param {Function} fn The function to invoke with its first two parameters reversed.
 * @return {*} The result of invoking `fn` with its first two parameters' order reversed.
 * @example
 *
 *      var mergeThree = (a, b, c) => [].concat(a, b, c);
 *
 *      mergeThree(1, 2, 3); //=> [1, 2, 3]
 *
 *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]
 * @symb R.flip(f)(a, b, c) = f(b, a, c)
 */module.exports=_curry1(function flip(fn){return curry(function(a,b){var args=Array.prototype.slice.call(arguments,0);args[0]=b;args[1]=a;return fn.apply(this,args);});});

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var map=__webpack_require__(17);/**
 * Returns a lens for the given getter and setter functions. The getter "gets"
 * the value of the focus; the setter "sets" the value of the focus. The setter
 * should not mutate the data structure.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Object
 * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s
 * @sig (s -> a) -> ((a, s) -> s) -> Lens s a
 * @param {Function} getter
 * @param {Function} setter
 * @return {Lens}
 * @see R.view, R.set, R.over, R.lensIndex, R.lensProp
 * @example
 *
 *      var xLens = R.lens(R.prop('x'), R.assoc('x'));
 *
 *      R.view(xLens, {x: 1, y: 2});            //=> 1
 *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}
 *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}
 */module.exports=_curry2(function lens(getter,setter){return function(toFunctorFn){return function(target){return map(function(focus){return setter(focus,target);},toFunctorFn(getter(target)));};};});

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var _isObject=__webpack_require__(85);var mergeWithKey=__webpack_require__(93);/**
 * Creates a new object with the own properties of the two provided objects.
 * If a key exists in both objects:
 * - and both associated values are also objects then the values will be
 *   recursively merged.
 * - otherwise the provided function is applied to the key and associated values
 *   using the resulting value as the new value associated with the key.
 * If a key only exists in one object, the value will be associated with the key
 * of the resulting object.
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Object
 * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}
 * @param {Function} fn
 * @param {Object} lObj
 * @param {Object} rObj
 * @return {Object}
 * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith
 * @example
 *
 *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r
 *      R.mergeDeepWithKey(concatValues,
 *                         { a: true, c: { thing: 'foo', values: [10, 20] }},
 *                         { b: true, c: { thing: 'bar', values: [15, 35] }});
 *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}
 */module.exports=_curry3(function mergeDeepWithKey(fn,lObj,rObj){return mergeWithKey(function(k,lVal,rVal){if(_isObject(lVal)&&_isObject(rVal)){return mergeDeepWithKey(fn,lVal,rVal);}else{return fn(k,lVal,rVal);}},lObj,rObj);});

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function isFunction(x){return typeof x==='function';}exports.isFunction=isFunction;//# sourceMappingURL=isFunction.js.map

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);var _Symbol=root_1.root.Symbol;exports.rxSubscriber=typeof _Symbol==='function'&&typeof _Symbol.for==='function'?_Symbol.for('rxSubscriber'):'@@rxSubscriber';/**
 * @deprecated use rxSubscriber instead
 */exports.$$rxSubscriber=exports.rxSubscriber;//# sourceMappingURL=rxSubscriber.js.map

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);function getSymbolObservable(context){var $$observable;var _Symbol=context.Symbol;if(typeof _Symbol==='function'){if(_Symbol.observable){$$observable=_Symbol.observable;}else{$$observable=_Symbol('observable');_Symbol.observable=$$observable;}}else{$$observable='@@observable';}return $$observable;}exports.getSymbolObservable=getSymbolObservable;exports.observable=getSymbolObservable(root_1.root);/**
 * @deprecated use observable instead
 */exports.$$observable=exports.observable;//# sourceMappingURL=observable.js.map

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};/**
 * An error thrown when an action is invalid because the object has been
 * unsubscribed.
 *
 * @see {@link Subject}
 * @see {@link BehaviorSubject}
 *
 * @class ObjectUnsubscribedError
 */var ObjectUnsubscribedError=function(_super){__extends(ObjectUnsubscribedError,_super);function ObjectUnsubscribedError(){var err=_super.call(this,'object unsubscribed');this.name=err.name='ObjectUnsubscribedError';this.stack=err.stack;this.message=err.message;}return ObjectUnsubscribedError;}(Error);exports.ObjectUnsubscribedError=ObjectUnsubscribedError;//# sourceMappingURL=ObjectUnsubscribedError.js.map

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var Subscription_1=__webpack_require__(9);/**
 * @class AsyncSubject<T>
 */var AsyncSubject=function(_super){__extends(AsyncSubject,_super);function AsyncSubject(){_super.apply(this,arguments);this.value=null;this.hasNext=false;this.hasCompleted=false;}AsyncSubject.prototype._subscribe=function(subscriber){if(this.hasError){subscriber.error(this.thrownError);return Subscription_1.Subscription.EMPTY;}else if(this.hasCompleted&&this.hasNext){subscriber.next(this.value);subscriber.complete();return Subscription_1.Subscription.EMPTY;}return _super.prototype._subscribe.call(this,subscriber);};AsyncSubject.prototype.next=function(value){if(!this.hasCompleted){this.value=value;this.hasNext=true;}};AsyncSubject.prototype.error=function(error){if(!this.hasCompleted){_super.prototype.error.call(this,error);}};AsyncSubject.prototype.complete=function(){this.hasCompleted=true;if(this.hasNext){_super.prototype.next.call(this,this.value);}_super.prototype.complete.call(this);};return AsyncSubject;}(Subject_1.Subject);exports.AsyncSubject=AsyncSubject;//# sourceMappingURL=AsyncSubject.js.map

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Converts a higher-order Observable into a first-order Observable which
 * concurrently delivers all values that are emitted on the inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables.</span>
 *
 * <img src="./img/mergeAll.png" width="100%">
 *
 * `mergeAll` subscribes to an Observable that emits Observables, also known as
 * a higher-order Observable. Each time it observes one of these emitted inner
 * Observables, it subscribes to that and delivers all the values from the
 * inner Observable on the output Observable. The output Observable only
 * completes once all inner Observables have completed. Any error delivered by
 * a inner Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var firstOrder = higherOrder.mergeAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));
 * var firstOrder = higherOrder.mergeAll(2);
 * firstOrder.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link merge}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits values coming from all the
 * inner Observables emitted by the source Observable.
 * @method mergeAll
 * @owner Observable
 */function mergeAll(concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}return this.lift(new MergeAllOperator(concurrent));}exports.mergeAll=mergeAll;var MergeAllOperator=function(){function MergeAllOperator(concurrent){this.concurrent=concurrent;}MergeAllOperator.prototype.call=function(observer,source){return source.subscribe(new MergeAllSubscriber(observer,this.concurrent));};return MergeAllOperator;}();exports.MergeAllOperator=MergeAllOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var MergeAllSubscriber=function(_super){__extends(MergeAllSubscriber,_super);function MergeAllSubscriber(destination,concurrent){_super.call(this,destination);this.concurrent=concurrent;this.hasCompleted=false;this.buffer=[];this.active=0;}MergeAllSubscriber.prototype._next=function(observable){if(this.active<this.concurrent){this.active++;this.add(subscribeToResult_1.subscribeToResult(this,observable));}else{this.buffer.push(observable);}};MergeAllSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){this.destination.complete();}};MergeAllSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub);this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){this.destination.complete();}};return MergeAllSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.MergeAllSubscriber=MergeAllSubscriber;//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var isArray_1=__webpack_require__(24);function isNumeric(val){// parseFloat NaNs numeric-cast false positives (null|true|false|"")
// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
// subtraction forces infinities to NaN
// adding 1 corrects loss of precision from parseFloat (#15100)
return!isArray_1.isArray(val)&&val-parseFloat(val)+1>=0;}exports.isNumeric=isNumeric;;//# sourceMappingURL=isNumeric.js.map

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function isDate(value){return value instanceof Date&&!isNaN(+value);}exports.isDate=isDate;//# sourceMappingURL=isDate.js.map

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var queue_1=__webpack_require__(172);var Subscription_1=__webpack_require__(9);var observeOn_1=__webpack_require__(98);var ObjectUnsubscribedError_1=__webpack_require__(67);var SubjectSubscription_1=__webpack_require__(162);/**
 * @class ReplaySubject<T>
 */var ReplaySubject=function(_super){__extends(ReplaySubject,_super);function ReplaySubject(bufferSize,windowTime,scheduler){if(bufferSize===void 0){bufferSize=Number.POSITIVE_INFINITY;}if(windowTime===void 0){windowTime=Number.POSITIVE_INFINITY;}_super.call(this);this.scheduler=scheduler;this._events=[];this._bufferSize=bufferSize<1?1:bufferSize;this._windowTime=windowTime<1?1:windowTime;}ReplaySubject.prototype.next=function(value){var now=this._getNow();this._events.push(new ReplayEvent(now,value));this._trimBufferThenGetEvents();_super.prototype.next.call(this,value);};ReplaySubject.prototype._subscribe=function(subscriber){var _events=this._trimBufferThenGetEvents();var scheduler=this.scheduler;var subscription;if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else if(this.hasError){subscription=Subscription_1.Subscription.EMPTY;}else if(this.isStopped){subscription=Subscription_1.Subscription.EMPTY;}else{this.observers.push(subscriber);subscription=new SubjectSubscription_1.SubjectSubscription(this,subscriber);}if(scheduler){subscriber.add(subscriber=new observeOn_1.ObserveOnSubscriber(subscriber,scheduler));}var len=_events.length;for(var i=0;i<len&&!subscriber.closed;i++){subscriber.next(_events[i].value);}if(this.hasError){subscriber.error(this.thrownError);}else if(this.isStopped){subscriber.complete();}return subscription;};ReplaySubject.prototype._getNow=function(){return(this.scheduler||queue_1.queue).now();};ReplaySubject.prototype._trimBufferThenGetEvents=function(){var now=this._getNow();var _bufferSize=this._bufferSize;var _windowTime=this._windowTime;var _events=this._events;var eventsCount=_events.length;var spliceCount=0;// Trim events that fall out of the time window.
// Start at the front of the list. Break early once
// we encounter an event that falls within the window.
while(spliceCount<eventsCount){if(now-_events[spliceCount].time<_windowTime){break;}spliceCount++;}if(eventsCount>_bufferSize){spliceCount=Math.max(spliceCount,eventsCount-_bufferSize);}if(spliceCount>0){_events.splice(0,spliceCount);}return _events;};return ReplaySubject;}(Subject_1.Subject);exports.ReplaySubject=ReplaySubject;var ReplayEvent=function(){function ReplayEvent(time,value){this.time=time;this.value=value;}return ReplayEvent;}();//# sourceMappingURL=ReplaySubject.js.map

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};/**
 * An error thrown when an Observable or a sequence was queried but has no
 * elements.
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link single}
 *
 * @class EmptyError
 */var EmptyError=function(_super){__extends(EmptyError,_super);function EmptyError(){var err=_super.call(this,'no elements in sequence');this.name=err.name='EmptyError';this.stack=err.stack;this.message=err.message;}return EmptyError;}(Error);exports.EmptyError=EmptyError;//# sourceMappingURL=EmptyError.js.map

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _isTransformer(obj){return typeof obj['@@transducer/step']==='function';};

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns a function that when supplied an object returns the indicated
 * property of that object, if it exists.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig s -> {s: a} -> a | Undefined
 * @param {String} p The property name
 * @param {Object} obj The object to query
 * @return {*} The value at `obj.p`.
 * @see R.path
 * @example
 *
 *      R.prop('x', {x: 100}); //=> 100
 *      R.prop('x', {}); //=> undefined
 */module.exports=_curry2(function prop(p,obj){return obj[p];});

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry2=__webpack_require__(1);var _reduce=__webpack_require__(18);var map=__webpack_require__(17);/**
 * ap applies a list of functions to a list of values.
 *
 * Dispatches to the `ap` method of the second argument, if present. Also
 * treats curried functions as applicatives.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Function
 * @sig [a -> b] -> [a] -> [b]
 * @sig Apply f => f (a -> b) -> f a -> f b
 * @param {*} applyF
 * @param {*} applyX
 * @return {*}
 * @example
 *
 *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]
 *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> ["tasty pizza", "tasty salad", "PIZZA", "SALAD"]
 * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]
 */module.exports=_curry2(function ap(applyF,applyX){return typeof applyX['fantasy-land/ap']==='function'?applyX['fantasy-land/ap'](applyF):typeof applyF.ap==='function'?applyF.ap(applyX):typeof applyF==='function'?function(x){return applyF(x)(applyX(x));}:// else
_reduce(function(acc,f){return _concat(acc,map(f,applyX));},[],applyF);});

/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Determine if the passed argument is an integer.
 *
 * @private
 * @param {*} n
 * @category Type
 * @return {Boolean}
 */module.exports=Number.isInteger||function _isInteger(n){return n<<0===n;};

/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _makeFlat=__webpack_require__(115);var _xchain=__webpack_require__(211);var map=__webpack_require__(17);/**
 * `chain` maps a function over a list and concatenates the results. `chain`
 * is also known as `flatMap` in some libraries
 *
 * Dispatches to the `chain` method of the second argument, if present,
 * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category List
 * @sig Chain m => (a -> m b) -> m a -> m b
 * @param {Function} fn The function to map with
 * @param {Array} list The list to map over
 * @return {Array} The result of flat-mapping `list` with `fn`
 * @example
 *
 *      var duplicate = n => [n, n];
 *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]
 *
 *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]
 */module.exports=_curry2(_dispatchable(['fantasy-land/chain','chain'],_xchain,function chain(fn,monad){if(typeof monad==='function'){return function(x){return fn(monad(x))(x);};}return _makeFlat(false)(map(fn,monad));}));

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Gives a single-word string description of the (native) type of a value,
 * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not
 * attempt to distinguish user Object types any further, reporting them all as
 * 'Object'.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Type
 * @sig (* -> {*}) -> String
 * @param {*} val The value to test
 * @return {String}
 * @example
 *
 *      R.type({}); //=> "Object"
 *      R.type(1); //=> "Number"
 *      R.type(false); //=> "Boolean"
 *      R.type('s'); //=> "String"
 *      R.type(null); //=> "Null"
 *      R.type([]); //=> "Array"
 *      R.type(/[A-z]/); //=> "RegExp"
 *      R.type(() => {}); //=> "Function"
 */module.exports=_curry1(function type(val){return val===null?'Null':val===undefined?'Undefined':Object.prototype.toString.call(val).slice(8,-1);});

/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var pipe=__webpack_require__(119);var reverse=__webpack_require__(57);/**
 * Performs right-to-left function composition. The rightmost function may have
 * any arity; the remaining functions must be unary.
 *
 * **Note:** The result of compose is not automatically curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)
 * @param {...Function} ...functions The functions to compose
 * @return {Function}
 * @see R.pipe
 * @example
 *
 *      var classyGreeting = (firstName, lastName) => "The name's " + lastName + ", " + firstName + " " + lastName
 *      var yellGreeting = R.compose(R.toUpper, classyGreeting);
 *      yellGreeting('James', 'Bond'); //=> "THE NAME'S BOND, JAMES BOND"
 *
 *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7
 *
 * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))
 */module.exports=function compose(){if(arguments.length===0){throw new Error('compose requires at least one argument');}return pipe.apply(this,reverse(arguments));};

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _checkForMethod=__webpack_require__(37);var _curry1=__webpack_require__(3);var slice=__webpack_require__(30);/**
 * Returns all but the first element of the given list or string (or object
 * with a `tail` method).
 *
 * Dispatches to the `slice` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {*} list
 * @return {*}
 * @see R.head, R.init, R.last
 * @example
 *
 *      R.tail([1, 2, 3]);  //=> [2, 3]
 *      R.tail([1, 2]);     //=> [2]
 *      R.tail([1]);        //=> []
 *      R.tail([]);         //=> []
 *
 *      R.tail('abc');  //=> 'bc'
 *      R.tail('ab');   //=> 'b'
 *      R.tail('a');    //=> ''
 *      R.tail('');     //=> ''
 */module.exports=_curry1(_checkForMethod('tail',slice(1,Infinity)));

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isArray=__webpack_require__(27);var _isFunction=__webpack_require__(54);var _isString=__webpack_require__(36);var toString=__webpack_require__(38);/**
 * Returns the result of concatenating the given lists or strings.
 *
 * Note: `R.concat` expects both arguments to be of the same type,
 * unlike the native `Array.prototype.concat` method. It will throw
 * an error if you `concat` an Array with a non-Array value.
 *
 * Dispatches to the `concat` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a] -> [a]
 * @sig String -> String -> String
 * @param {Array|String} firstList The first list
 * @param {Array|String} secondList The second list
 * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of
 * `secondList`.
 *
 * @example
 *
 *      R.concat('ABC', 'DEF'); // 'ABCDEF'
 *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]
 *      R.concat([], []); //=> []
 */module.exports=_curry2(function concat(a,b){if(_isArray(a)){if(_isArray(b)){return a.concat(b);}throw new TypeError(toString(b)+' is not an array');}if(_isString(a)){if(_isString(b)){return a+b;}throw new TypeError(toString(b)+' is not a string');}if(a!=null&&_isFunction(a['fantasy-land/concat'])){return a['fantasy-land/concat'](b);}if(a!=null&&_isFunction(a.concat)){return a.concat(b);}throw new TypeError(toString(a)+' does not have a method named "concat" or "fantasy-land/concat"');});

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _filter=__webpack_require__(84);var _isObject=__webpack_require__(85);var _reduce=__webpack_require__(18);var _xfilter=__webpack_require__(227);var keys=__webpack_require__(22);/**
 * Takes a predicate and a `Filterable`, and returns a new filterable of the
 * same type containing the members of the given filterable which satisfy the
 * given predicate. Filterable objects include plain objects or any object
 * that has a filter method such as `Array`.
 *
 * Dispatches to the `filter` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> f a
 * @param {Function} pred
 * @param {Array} filterable
 * @return {Array} Filterable
 * @see R.reject, R.transduce, R.addIndex
 * @example
 *
 *      var isEven = n => n % 2 === 0;
 *
 *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]
 *
 *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */module.exports=_curry2(_dispatchable(['filter'],_xfilter,function(pred,filterable){return _isObject(filterable)?_reduce(function(acc,key){if(pred(filterable[key])){acc[key]=filterable[key];}return acc;},{},keys(filterable)):// else
_filter(pred,filterable);}));

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _filter(fn,list){var idx=0;var len=list.length;var result=[];while(idx<len){if(fn(list[idx])){result[result.length]=list[idx];}idx+=1;}return result;};

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _isObject(x){return Object.prototype.toString.call(x)==='[object Object]';};

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var adjust=__webpack_require__(103);var always=__webpack_require__(33);/**
 * Returns a new copy of the array with the element at the provided index
 * replaced with the given value.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category List
 * @sig Number -> a -> [a] -> [a]
 * @param {Number} idx The index to update.
 * @param {*} x The value to exist at the given index of the returned array.
 * @param {Array|Arguments} list The source array-like object to be updated.
 * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.
 * @see R.adjust
 * @example
 *
 *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]
 *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]
 * @symb R.update(-1, a, [b, c]) = [b, a]
 * @symb R.update(0, a, [b, c]) = [a, c]
 * @symb R.update(1, a, [b, c]) = [b, a]
 */module.exports=_curry3(function update(idx,x,list){return adjust(always(x),idx,list);});

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xtake=__webpack_require__(240);var slice=__webpack_require__(30);/**
 * Returns the first `n` elements of the given list, string, or
 * transducer/transformer (or object with a `take` method).
 *
 * Dispatches to the `take` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n
 * @param {*} list
 * @return {*}
 * @see R.drop
 * @example
 *
 *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']
 *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']
 *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.take(3, 'ramda');               //=> 'ram'
 *
 *      var personnel = [
 *        'Dave Brubeck',
 *        'Paul Desmond',
 *        'Eugene Wright',
 *        'Joe Morello',
 *        'Gerry Mulligan',
 *        'Bob Bates',
 *        'Joe Dodge',
 *        'Ron Crotty'
 *      ];
 *
 *      var takeFive = R.take(5);
 *      takeFive(personnel);
 *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']
 * @symb R.take(-1, [a, b]) = [a, b]
 * @symb R.take(0, [a, b]) = []
 * @symb R.take(1, [a, b]) = [a]
 * @symb R.take(2, [a, b]) = [a, b]
 */module.exports=_curry2(_dispatchable(['take'],_xtake,function take(n,xs){return slice(0,n<0?Infinity:n,xs);}));

/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _identity=__webpack_require__(89);/**
 * A function that does nothing but return the parameter supplied to it. Good
 * as a default or placeholder function.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig a -> a
 * @param {*} x The value to return.
 * @return {*} The input value, `x`.
 * @example
 *
 *      R.identity(1); //=> 1
 *
 *      var obj = {};
 *      R.identity(obj) === obj; //=> true
 * @symb R.identity(a) = a
 */module.exports=_curry1(_identity);

/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _identity(x){return x;};

/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var identity=__webpack_require__(88);var uniqBy=__webpack_require__(139);/**
 * Returns a new list containing only one copy of each element in the original
 * list. [`R.equals`](#equals) is used to determine equality.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @param {Array} list The array to consider.
 * @return {Array} The list of unique items.
 * @example
 *
 *      R.uniq([1, 1, 2, 1]); //=> [1, 2]
 *      R.uniq([1, '1']);     //=> [1, '1']
 *      R.uniq([[42], [42]]); //=> [[42]]
 */module.exports=uniqBy(identity);

/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _containsWith=__webpack_require__(60);var _curry2=__webpack_require__(1);/**
 * Returns a new list containing only one copy of each element in the original
 * list, based upon the value returned by applying the supplied predicate to
 * two list elements. Prefers the first item if two items compare equal based
 * on the predicate.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category List
 * @sig (a, a -> Boolean) -> [a] -> [a]
 * @param {Function} pred A predicate used to test whether two items are equal.
 * @param {Array} list The array to consider.
 * @return {Array} The list of unique items.
 * @example
 *
 *      var strEq = R.eqBy(String);
 *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]
 *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]
 *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]
 *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']
 */module.exports=_curry2(function uniqWith(pred,list){var idx=0;var len=list.length;var result=[];var item;while(idx<len){item=list[idx];if(!_containsWith(pred,item,result)){result[result.length]=item;}idx+=1;}return result;});

/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _objectAssign=__webpack_require__(286);module.exports=typeof Object.assign==='function'?Object.assign:_objectAssign;

/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var _has=__webpack_require__(15);/**
 * Creates a new object with the own properties of the two provided objects. If
 * a key exists in both objects, the provided function is applied to the key
 * and the values associated with the key in each object, with the result being
 * used as the value associated with the key in the returned object.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Object
 * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}
 * @param {Function} fn
 * @param {Object} l
 * @param {Object} r
 * @return {Object}
 * @see R.mergeDeepWithKey, R.merge, R.mergeWith
 * @example
 *
 *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r
 *      R.mergeWithKey(concatValues,
 *                     { a: true, thing: 'foo', values: [10, 20] },
 *                     { b: true, thing: 'bar', values: [15, 35] });
 *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }
 * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }
 */module.exports=_curry3(function mergeWithKey(fn,l,r){var result={};var k;for(k in l){if(_has(k,l)){result[k]=_has(k,r)?fn(k,l[k],r[k]):l[k];}}for(k in r){if(_has(k,r)&&!_has(k,result)){result[k]=r[k];}}return result;});

/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var g;// This works in non-strict mode
g=function(){return this;}();try{// This works if eval is allowed (see CSP)
g=g||Function("return this")()||(1,eval)("this");}catch(e){// This works if the window reference is available
if((typeof window==="undefined"?"undefined":_typeof(window))==="object")g=window;}// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}
module.exports=g;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var ScalarObservable=function(_super){__extends(ScalarObservable,_super);function ScalarObservable(value,scheduler){_super.call(this);this.value=value;this.scheduler=scheduler;this._isScalar=true;if(scheduler){this._isScalar=false;}}ScalarObservable.create=function(value,scheduler){return new ScalarObservable(value,scheduler);};ScalarObservable.dispatch=function(state){var done=state.done,value=state.value,subscriber=state.subscriber;if(done){subscriber.complete();return;}subscriber.next(value);if(subscriber.closed){return;}state.done=true;this.schedule(state);};ScalarObservable.prototype._subscribe=function(subscriber){var value=this.value;var scheduler=this.scheduler;if(scheduler){return scheduler.schedule(ScalarObservable.dispatch,0,{done:false,value:value,subscriber:subscriber});}else{subscriber.next(value);if(!subscriber.closed){subscriber.complete();}}};return ScalarObservable;}(Observable_1.Observable);exports.ScalarObservable=ScalarObservable;//# sourceMappingURL=ScalarObservable.js.map

/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var ArrayObservable_1=__webpack_require__(26);var isArray_1=__webpack_require__(24);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);var none={};/* tslint:enable:max-line-length *//**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from this Observable with values from
 * Observables passed as arguments. This is done by subscribing to each
 * Observable, in order, and collecting an array of each of the most recent
 * values any time any of the input Observables emits, then either taking that
 * array and passing it as arguments to an optional `project` function and
 * emitting the return value of that, or just emitting the array of recent
 * values directly if there is no `project` function.
 *
 * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method combineLatest
 * @owner Observable
 */function combineLatest(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}var project=null;if(typeof observables[observables.length-1]==='function'){project=observables.pop();}// if the first and only other argument besides the resultSelector is an array
// assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
if(observables.length===1&&isArray_1.isArray(observables[0])){observables=observables[0].slice();}observables.unshift(this);return this.lift.call(new ArrayObservable_1.ArrayObservable(observables),new CombineLatestOperator(project));}exports.combineLatest=combineLatest;var CombineLatestOperator=function(){function CombineLatestOperator(project){this.project=project;}CombineLatestOperator.prototype.call=function(subscriber,source){return source.subscribe(new CombineLatestSubscriber(subscriber,this.project));};return CombineLatestOperator;}();exports.CombineLatestOperator=CombineLatestOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var CombineLatestSubscriber=function(_super){__extends(CombineLatestSubscriber,_super);function CombineLatestSubscriber(destination,project){_super.call(this,destination);this.project=project;this.active=0;this.values=[];this.observables=[];}CombineLatestSubscriber.prototype._next=function(observable){this.values.push(none);this.observables.push(observable);};CombineLatestSubscriber.prototype._complete=function(){var observables=this.observables;var len=observables.length;if(len===0){this.destination.complete();}else{this.active=len;this.toRespond=len;for(var i=0;i<len;i++){var observable=observables[i];this.add(subscribeToResult_1.subscribeToResult(this,observable,observable,i));}}};CombineLatestSubscriber.prototype.notifyComplete=function(unused){if((this.active-=1)===0){this.destination.complete();}};CombineLatestSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var values=this.values;var oldVal=values[outerIndex];var toRespond=!this.toRespond?0:oldVal===none?--this.toRespond:this.toRespond;values[outerIndex]=innerValue;if(toRespond===0){if(this.project){this._tryProject(values);}else{this.destination.next(values.slice());}}};CombineLatestSubscriber.prototype._tryProject=function(values){var result;try{result=this.project.apply(this,values);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return CombineLatestSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.CombineLatestSubscriber=CombineLatestSubscriber;//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var isScheduler_1=__webpack_require__(25);var ArrayObservable_1=__webpack_require__(26);var mergeAll_1=__webpack_require__(69);/* tslint:enable:max-line-length *//**
 * Creates an output Observable which sequentially emits all values from every
 * given input Observable after the current Observable.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * Joins this Observable with multiple other Observables by subscribing to them
 * one at a time, starting with the source, and merging their results into the
 * output Observable. Will wait for each Observable to complete before moving
 * on to the next.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = timer.concat(sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 * @example <caption>Concatenate 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = timer1.concat(timer2, timer3);
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} other An input Observable to concatenate after the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @method concat
 * @owner Observable
 */function concat(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}return this.lift.call(concatStatic.apply(void 0,[this].concat(observables)));}exports.concat=concat;/* tslint:enable:max-line-length *//**
 * Creates an output Observable which sequentially emits all values from given
 * Observable and then moves on to the next.
 *
 * <span class="informal">Concatenates multiple Observables together by
 * sequentially emitting their values, one Observable after the other.</span>
 *
 * <img src="./img/concat.png" width="100%">
 *
 * `concat` joins multiple Observables together, by subscribing to them one at a time and
 * merging their results into the output Observable. You can pass either an array of
 * Observables, or put them directly as arguments. Passing an empty array will result
 * in Observable that completes immediately.
 *
 * `concat` will subscribe to first input Observable and emit all its values, without
 * changing or affecting them in any way. When that Observable completes, it will
 * subscribe to then next Observable passed and, again, emit its values. This will be
 * repeated, until the operator runs out of Observables. When last input Observable completes,
 * `concat` will complete as well. At any given moment only one Observable passed to operator
 * emits values. If you would like to emit values from passed Observables concurrently, check out
 * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,
 * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.
 *
 * Note that if some input Observable never completes, `concat` will also never complete
 * and Observables following the one that did not complete will never be subscribed. On the other
 * hand, if some Observable simply completes immediately after it is subscribed, it will be
 * invisible for `concat`, which will just move on to the next Observable.
 *
 * If any Observable in chain errors, instead of passing control to the next Observable,
 * `concat` will error immediately as well. Observables that would be subscribed after
 * the one that emitted error, never will.
 *
 * If you pass to `concat` the same Observable many times, its stream of values
 * will be "replayed" on every subscription, which means you can repeat given Observable
 * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,
 * you can always use {@link repeat}.
 *
 * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>
 * var timer = Rx.Observable.interval(1000).take(4);
 * var sequence = Rx.Observable.range(1, 10);
 * var result = Rx.Observable.concat(timer, sequence);
 * result.subscribe(x => console.log(x));
 *
 * // results in:
 * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10
 *
 *
 * @example <caption>Concatenate an array of 3 Observables</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed
 * result.subscribe(x => console.log(x));
 *
 * // results in the following:
 * // (Prints to console sequentially)
 * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9
 * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5
 * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9
 *
 *
 * @example <caption>Concatenate the same Observable to repeat it</caption>
 * const timer = Rx.Observable.interval(1000).take(2);
 *
 * Rx.Observable.concat(timer, timer) // concating the same Observable!
 * .subscribe(
 *   value => console.log(value),
 *   err => {},
 *   () => console.log('...and it is done!')
 * );
 *
 * // Logs:
 * // 0 after 1s
 * // 1 after 2s
 * // 0 after 3s
 * // 1 after 4s
 * // "...and it is done!" also after 4s
 *
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 *
 * @param {ObservableInput} input1 An input Observable to concatenate with others.
 * @param {ObservableInput} input2 An input Observable to concatenate with others.
 * More than one input Observables may be given as argument.
 * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each
 * Observable subscription on.
 * @return {Observable} All values of each passed Observable merged into a
 * single Observable, in order, in serial fashion.
 * @static true
 * @name concat
 * @owner Observable
 */function concatStatic(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}var scheduler=null;var args=observables;if(isScheduler_1.isScheduler(args[observables.length-1])){scheduler=args.pop();}if(scheduler===null&&observables.length===1&&observables[0]instanceof Observable_1.Observable){return observables[0];}return new ArrayObservable_1.ArrayObservable(observables,scheduler).lift(new mergeAll_1.MergeAllOperator(1));}exports.concatStatic=concatStatic;//# sourceMappingURL=concat.js.map

/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var Notification_1=__webpack_require__(43);/**
 *
 * Re-emits all notifications from source Observable with specified scheduler.
 *
 * <span class="informal">Ensure a specific scheduler is used, from outside of an Observable.</span>
 *
 * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule
 * notifications emitted by the source Observable. It might be useful, if you do not have control over
 * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.
 *
 * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,
 * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal
 * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits
 * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.
 * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split
 * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source
 * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a
 * little bit more, to ensure that they are emitted at expected moments.
 *
 * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications
 * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`
 * will delay all notifications - including error notifications - while `delay` will pass through error
 * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator
 * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used
 * for notification emissions in general.
 *
 * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>
 * const intervals = Rx.Observable.interval(10); // Intervals are scheduled
 *                                               // with async scheduler by default...
 *
 * intervals
 * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame
 * .subscribe(val => {                           // scheduler to ensure smooth animation.
 *   someDiv.style.height = val + 'px';
 * });
 *
 * @see {@link delay}
 *
 * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.
 * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.
 * @return {Observable<T>} Observable that emits the same notifications as the source Observable,
 * but with provided scheduler.
 *
 * @method observeOn
 * @owner Observable
 */function observeOn(scheduler,delay){if(delay===void 0){delay=0;}return this.lift(new ObserveOnOperator(scheduler,delay));}exports.observeOn=observeOn;var ObserveOnOperator=function(){function ObserveOnOperator(scheduler,delay){if(delay===void 0){delay=0;}this.scheduler=scheduler;this.delay=delay;}ObserveOnOperator.prototype.call=function(subscriber,source){return source.subscribe(new ObserveOnSubscriber(subscriber,this.scheduler,this.delay));};return ObserveOnOperator;}();exports.ObserveOnOperator=ObserveOnOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ObserveOnSubscriber=function(_super){__extends(ObserveOnSubscriber,_super);function ObserveOnSubscriber(destination,scheduler,delay){if(delay===void 0){delay=0;}_super.call(this,destination);this.scheduler=scheduler;this.delay=delay;}ObserveOnSubscriber.dispatch=function(arg){var notification=arg.notification,destination=arg.destination;notification.observe(destination);this.unsubscribe();};ObserveOnSubscriber.prototype.scheduleMessage=function(notification){this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch,this.delay,new ObserveOnMessage(notification,this.destination)));};ObserveOnSubscriber.prototype._next=function(value){this.scheduleMessage(Notification_1.Notification.createNext(value));};ObserveOnSubscriber.prototype._error=function(err){this.scheduleMessage(Notification_1.Notification.createError(err));};ObserveOnSubscriber.prototype._complete=function(){this.scheduleMessage(Notification_1.Notification.createComplete());};return ObserveOnSubscriber;}(Subscriber_1.Subscriber);exports.ObserveOnSubscriber=ObserveOnSubscriber;var ObserveOnMessage=function(){function ObserveOnMessage(notification,destination){this.notification=notification;this.destination=destination;}return ObserveOnMessage;}();exports.ObserveOnMessage=ObserveOnMessage;//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var ArrayObservable_1=__webpack_require__(26);var isArray_1=__webpack_require__(24);var Subscriber_1=__webpack_require__(2);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);var iterator_1=__webpack_require__(42);/* tslint:enable:max-line-length *//**
 * @param observables
 * @return {Observable<R>}
 * @method zip
 * @owner Observable
 */function zipProto(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}return this.lift.call(zipStatic.apply(void 0,[this].concat(observables)));}exports.zipProto=zipProto;/* tslint:enable:max-line-length *//**
 * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each
 * of its input Observables.
 *
 * If the latest parameter is a function, this function is used to compute the created value from the input values.
 * Otherwise, an array of the input values is returned.
 *
 * @example <caption>Combine age and name from different sources</caption>
 *
 * let age$ = Observable.of<number>(27, 25, 29);
 * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');
 * let isDev$ = Observable.of<boolean>(true, true, false);
 *
 * Observable
 *     .zip(age$,
 *          name$,
 *          isDev$,
 *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))
 *     .subscribe(x => console.log(x));
 *
 * // outputs
 * // { age: 27, name: 'Foo', isDev: true }
 * // { age: 25, name: 'Bar', isDev: true }
 * // { age: 29, name: 'Beer', isDev: false }
 *
 * @param observables
 * @return {Observable<R>}
 * @static true
 * @name zip
 * @owner Observable
 */function zipStatic(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}var project=observables[observables.length-1];if(typeof project==='function'){observables.pop();}return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));}exports.zipStatic=zipStatic;var ZipOperator=function(){function ZipOperator(project){this.project=project;}ZipOperator.prototype.call=function(subscriber,source){return source.subscribe(new ZipSubscriber(subscriber,this.project));};return ZipOperator;}();exports.ZipOperator=ZipOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ZipSubscriber=function(_super){__extends(ZipSubscriber,_super);function ZipSubscriber(destination,project,values){if(values===void 0){values=Object.create(null);}_super.call(this,destination);this.iterators=[];this.active=0;this.project=typeof project==='function'?project:null;this.values=values;}ZipSubscriber.prototype._next=function(value){var iterators=this.iterators;if(isArray_1.isArray(value)){iterators.push(new StaticArrayIterator(value));}else if(typeof value[iterator_1.iterator]==='function'){iterators.push(new StaticIterator(value[iterator_1.iterator]()));}else{iterators.push(new ZipBufferIterator(this.destination,this,value));}};ZipSubscriber.prototype._complete=function(){var iterators=this.iterators;var len=iterators.length;if(len===0){this.destination.complete();return;}this.active=len;for(var i=0;i<len;i++){var iterator=iterators[i];if(iterator.stillUnsubscribed){this.add(iterator.subscribe(iterator,i));}else{this.active--;// not an observable
}}};ZipSubscriber.prototype.notifyInactive=function(){this.active--;if(this.active===0){this.destination.complete();}};ZipSubscriber.prototype.checkIterators=function(){var iterators=this.iterators;var len=iterators.length;var destination=this.destination;// abort if not all of them have values
for(var i=0;i<len;i++){var iterator=iterators[i];if(typeof iterator.hasValue==='function'&&!iterator.hasValue()){return;}}var shouldComplete=false;var args=[];for(var i=0;i<len;i++){var iterator=iterators[i];var result=iterator.next();// check to see if it's completed now that you've gotten
// the next value.
if(iterator.hasCompleted()){shouldComplete=true;}if(result.done){destination.complete();return;}args.push(result.value);}if(this.project){this._tryProject(args);}else{destination.next(args);}if(shouldComplete){destination.complete();}};ZipSubscriber.prototype._tryProject=function(args){var result;try{result=this.project.apply(this,args);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return ZipSubscriber;}(Subscriber_1.Subscriber);exports.ZipSubscriber=ZipSubscriber;var StaticIterator=function(){function StaticIterator(iterator){this.iterator=iterator;this.nextResult=iterator.next();}StaticIterator.prototype.hasValue=function(){return true;};StaticIterator.prototype.next=function(){var result=this.nextResult;this.nextResult=this.iterator.next();return result;};StaticIterator.prototype.hasCompleted=function(){var nextResult=this.nextResult;return nextResult&&nextResult.done;};return StaticIterator;}();var StaticArrayIterator=function(){function StaticArrayIterator(array){this.array=array;this.index=0;this.length=0;this.length=array.length;}StaticArrayIterator.prototype[iterator_1.iterator]=function(){return this;};StaticArrayIterator.prototype.next=function(value){var i=this.index++;var array=this.array;return i<this.length?{value:array[i],done:false}:{value:null,done:true};};StaticArrayIterator.prototype.hasValue=function(){return this.array.length>this.index;};StaticArrayIterator.prototype.hasCompleted=function(){return this.array.length===this.index;};return StaticArrayIterator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ZipBufferIterator=function(_super){__extends(ZipBufferIterator,_super);function ZipBufferIterator(destination,parent,observable){_super.call(this,destination);this.parent=parent;this.observable=observable;this.stillUnsubscribed=true;this.buffer=[];this.isComplete=false;}ZipBufferIterator.prototype[iterator_1.iterator]=function(){return this;};// NOTE: there is actually a name collision here with Subscriber.next and Iterator.next
//    this is legit because `next()` will never be called by a subscription in this case.
ZipBufferIterator.prototype.next=function(){var buffer=this.buffer;if(buffer.length===0&&this.isComplete){return{value:null,done:true};}else{return{value:buffer.shift(),done:false};}};ZipBufferIterator.prototype.hasValue=function(){return this.buffer.length>0;};ZipBufferIterator.prototype.hasCompleted=function(){return this.buffer.length===0&&this.isComplete;};ZipBufferIterator.prototype.notifyComplete=function(){if(this.buffer.length>0){this.isComplete=true;this.parent.notifyInactive();}else{this.destination.complete();}};ZipBufferIterator.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.buffer.push(innerValue);this.parent.checkIterators();};ZipBufferIterator.prototype.subscribe=function(value,index){return subscribeToResult_1.subscribeToResult(this,this.observable,this,index);};return ZipBufferIterator;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=zip.js.map

/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Applies a given `project` function to each value emitted by the source
 * Observable, and emits the resulting values as an Observable.
 *
 * <span class="informal">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),
 * it passes each source value through a transformation function to get
 * corresponding output values.</span>
 *
 * <img src="./img/map.png" width="100%">
 *
 * Similar to the well known `Array.prototype.map` function, this operator
 * applies a projection to each value and emits that projection in the output
 * Observable.
 *
 * @example <caption>Map every click to the clientX position of that click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks.map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link mapTo}
 * @see {@link pluck}
 *
 * @param {function(value: T, index: number): R} project The function to apply
 * to each `value` emitted by the source Observable. The `index` parameter is
 * the number `i` for the i-th emission that has happened since the
 * subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to define what `this` is in the
 * `project` function.
 * @return {Observable<R>} An Observable that emits the values from the source
 * Observable transformed by the given `project` function.
 * @method map
 * @owner Observable
 */function map(project,thisArg){if(typeof project!=='function'){throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');}return this.lift(new MapOperator(project,thisArg));}exports.map=map;var MapOperator=function(){function MapOperator(project,thisArg){this.project=project;this.thisArg=thisArg;}MapOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapSubscriber(subscriber,this.project,this.thisArg));};return MapOperator;}();exports.MapOperator=MapOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var MapSubscriber=function(_super){__extends(MapSubscriber,_super);function MapSubscriber(destination,project,thisArg){_super.call(this,destination);this.project=project;this.count=0;this.thisArg=thisArg||this;}// NOTE: This looks unoptimized, but it's actually purposefully NOT
// using try/catch optimizations.
MapSubscriber.prototype._next=function(value){var result;try{result=this.project.call(this.thisArg,value,this.count++);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return MapSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=map.js.map

/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/* tslint:enable:max-line-length *//**
 * Applies an accumulator function over the source Observable, and returns the
 * accumulated result when the source completes, given an optional seed value.
 *
 * <span class="informal">Combines together all values emitted on the source,
 * using an accumulator function that knows how to join a new source value into
 * the accumulation from the past.</span>
 *
 * <img src="./img/reduce.png" width="100%">
 *
 * Like
 * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),
 * `reduce` applies an `accumulator` function against an accumulation and each
 * value of the source Observable (from the past) to reduce it to a single
 * value, emitted on the output Observable. Note that `reduce` will only emit
 * one value, only when the source Observable completes. It is equivalent to
 * applying operator {@link scan} followed by operator {@link last}.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events that happened in 5 seconds</caption>
 * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')
 *   .takeUntil(Rx.Observable.interval(5000));
 * var ones = clicksInFiveSeconds.mapTo(1);
 * var seed = 0;
 * var count = ones.reduce((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link count}
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link scan}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function
 * called on each source value.
 * @param {R} [seed] The initial accumulation value.
 * @return {Observable<R>} An Observable that emits a single value that is the
 * result of accumulating the values emitted by the source Observable.
 * @method reduce
 * @owner Observable
 */function reduce(accumulator,seed){var hasSeed=false;// providing a seed of `undefined` *should* be valid and trigger
// hasSeed! so don't use `seed !== undefined` checks!
// For this reason, we have to check it here at the original call site
// otherwise inside Operator/Subscriber we won't know if `undefined`
// means they didn't provide anything or if they literally provided `undefined`
if(arguments.length>=2){hasSeed=true;}return this.lift(new ReduceOperator(accumulator,seed,hasSeed));}exports.reduce=reduce;var ReduceOperator=function(){function ReduceOperator(accumulator,seed,hasSeed){if(hasSeed===void 0){hasSeed=false;}this.accumulator=accumulator;this.seed=seed;this.hasSeed=hasSeed;}ReduceOperator.prototype.call=function(subscriber,source){return source.subscribe(new ReduceSubscriber(subscriber,this.accumulator,this.seed,this.hasSeed));};return ReduceOperator;}();exports.ReduceOperator=ReduceOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ReduceSubscriber=function(_super){__extends(ReduceSubscriber,_super);function ReduceSubscriber(destination,accumulator,seed,hasSeed){_super.call(this,destination);this.accumulator=accumulator;this.hasSeed=hasSeed;this.index=0;this.hasValue=false;this.acc=seed;if(!this.hasSeed){this.index++;}}ReduceSubscriber.prototype._next=function(value){if(this.hasValue||(this.hasValue=this.hasSeed)){this._tryReduce(value);}else{this.acc=value;this.hasValue=true;}};ReduceSubscriber.prototype._tryReduce=function(value){var result;try{result=this.accumulator(this.acc,value,this.index++);}catch(err){this.destination.error(err);return;}this.acc=result;};ReduceSubscriber.prototype._complete=function(){if(this.hasValue||this.hasSeed){this.destination.next(this.acc);}this.destination.complete();};return ReduceSubscriber;}(Subscriber_1.Subscriber);exports.ReduceSubscriber=ReduceSubscriber;//# sourceMappingURL=reduce.js.map

/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports={F:__webpack_require__(193),T:__webpack_require__(194),__:__webpack_require__(195),add:__webpack_require__(48),addIndex:__webpack_require__(196),adjust:__webpack_require__(103),all:__webpack_require__(197),allPass:__webpack_require__(199),always:__webpack_require__(33),and:__webpack_require__(107),any:__webpack_require__(108),anyPass:__webpack_require__(201),ap:__webpack_require__(76),aperture:__webpack_require__(202),append:__webpack_require__(205),apply:__webpack_require__(110),applySpec:__webpack_require__(206),ascend:__webpack_require__(207),assoc:__webpack_require__(52),assocPath:__webpack_require__(112),binary:__webpack_require__(208),bind:__webpack_require__(105),both:__webpack_require__(209),call:__webpack_require__(210),chain:__webpack_require__(78),clamp:__webpack_require__(214),clone:__webpack_require__(215),comparator:__webpack_require__(216),complement:__webpack_require__(217),compose:__webpack_require__(80),composeK:__webpack_require__(120),composeP:__webpack_require__(219),concat:__webpack_require__(82),cond:__webpack_require__(228),construct:__webpack_require__(229),constructN:__webpack_require__(125),contains:__webpack_require__(230),converge:__webpack_require__(126),countBy:__webpack_require__(231),curry:__webpack_require__(56),curryN:__webpack_require__(14),dec:__webpack_require__(233),defaultTo:__webpack_require__(127),descend:__webpack_require__(234),difference:__webpack_require__(128),differenceWith:__webpack_require__(129),dissoc:__webpack_require__(130),dissocPath:__webpack_require__(235),divide:__webpack_require__(236),drop:__webpack_require__(132),dropLast:__webpack_require__(238),dropLastWhile:__webpack_require__(242),dropRepeats:__webpack_require__(245),dropRepeatsWith:__webpack_require__(134),dropWhile:__webpack_require__(246),either:__webpack_require__(248),empty:__webpack_require__(137),endsWith:__webpack_require__(249),eqBy:__webpack_require__(250),eqProps:__webpack_require__(251),equals:__webpack_require__(19),evolve:__webpack_require__(252),filter:__webpack_require__(83),find:__webpack_require__(253),findIndex:__webpack_require__(255),findLast:__webpack_require__(257),findLastIndex:__webpack_require__(259),flatten:__webpack_require__(261),flip:__webpack_require__(61),forEach:__webpack_require__(262),forEachObjIndexed:__webpack_require__(263),fromPairs:__webpack_require__(264),groupBy:__webpack_require__(265),groupWith:__webpack_require__(266),gt:__webpack_require__(267),gte:__webpack_require__(268),has:__webpack_require__(269),hasIn:__webpack_require__(270),head:__webpack_require__(271),identical:__webpack_require__(123),identity:__webpack_require__(88),ifElse:__webpack_require__(272),inc:__webpack_require__(273),indexBy:__webpack_require__(274),indexOf:__webpack_require__(275),init:__webpack_require__(276),innerJoin:__webpack_require__(277),insert:__webpack_require__(278),insertAll:__webpack_require__(279),intersection:__webpack_require__(280),intersectionWith:__webpack_require__(282),intersperse:__webpack_require__(283),into:__webpack_require__(284),invert:__webpack_require__(287),invertObj:__webpack_require__(288),invoker:__webpack_require__(40),is:__webpack_require__(141),isEmpty:__webpack_require__(289),isNil:__webpack_require__(113),join:__webpack_require__(290),juxt:__webpack_require__(142),keys:__webpack_require__(22),keysIn:__webpack_require__(291),last:__webpack_require__(135),lastIndexOf:__webpack_require__(292),length:__webpack_require__(143),lens:__webpack_require__(62),lensIndex:__webpack_require__(293),lensPath:__webpack_require__(294),lensProp:__webpack_require__(295),lift:__webpack_require__(55),liftN:__webpack_require__(114),lt:__webpack_require__(296),lte:__webpack_require__(297),map:__webpack_require__(17),mapAccum:__webpack_require__(298),mapAccumRight:__webpack_require__(299),mapObjIndexed:__webpack_require__(300),match:__webpack_require__(301),mathMod:__webpack_require__(302),max:__webpack_require__(34),maxBy:__webpack_require__(303),mean:__webpack_require__(145),median:__webpack_require__(304),memoize:__webpack_require__(305),memoizeWith:__webpack_require__(147),merge:__webpack_require__(306),mergeAll:__webpack_require__(307),mergeDeepLeft:__webpack_require__(308),mergeDeepRight:__webpack_require__(309),mergeDeepWith:__webpack_require__(310),mergeDeepWithKey:__webpack_require__(63),mergeWith:__webpack_require__(311),mergeWithKey:__webpack_require__(93),min:__webpack_require__(312),minBy:__webpack_require__(313),modulo:__webpack_require__(314),multiply:__webpack_require__(148),nAry:__webpack_require__(53),negate:__webpack_require__(315),none:__webpack_require__(316),not:__webpack_require__(118),nth:__webpack_require__(39),nthArg:__webpack_require__(317),o:__webpack_require__(318),objOf:__webpack_require__(140),of:__webpack_require__(319),omit:__webpack_require__(321),once:__webpack_require__(322),or:__webpack_require__(136),over:__webpack_require__(149),pair:__webpack_require__(323),partial:__webpack_require__(324),partialRight:__webpack_require__(325),partition:__webpack_require__(326),path:__webpack_require__(41),pathEq:__webpack_require__(327),pathOr:__webpack_require__(328),pathSatisfies:__webpack_require__(329),pick:__webpack_require__(330),pickAll:__webpack_require__(151),pickBy:__webpack_require__(331),pipe:__webpack_require__(119),pipeK:__webpack_require__(332),pipeP:__webpack_require__(121),pluck:__webpack_require__(35),prepend:__webpack_require__(152),product:__webpack_require__(333),project:__webpack_require__(334),prop:__webpack_require__(75),propEq:__webpack_require__(335),propIs:__webpack_require__(336),propOr:__webpack_require__(337),propSatisfies:__webpack_require__(338),props:__webpack_require__(339),range:__webpack_require__(340),reduce:__webpack_require__(23),reduceBy:__webpack_require__(59),reduceRight:__webpack_require__(154),reduceWhile:__webpack_require__(341),reduced:__webpack_require__(342),reject:__webpack_require__(58),remove:__webpack_require__(131),repeat:__webpack_require__(343),replace:__webpack_require__(344),reverse:__webpack_require__(57),scan:__webpack_require__(345),sequence:__webpack_require__(156),set:__webpack_require__(346),slice:__webpack_require__(30),sort:__webpack_require__(347),sortBy:__webpack_require__(348),sortWith:__webpack_require__(349),split:__webpack_require__(350),splitAt:__webpack_require__(351),splitEvery:__webpack_require__(352),splitWhen:__webpack_require__(353),startsWith:__webpack_require__(354),subtract:__webpack_require__(355),sum:__webpack_require__(146),symmetricDifference:__webpack_require__(356),symmetricDifferenceWith:__webpack_require__(357),tail:__webpack_require__(81),take:__webpack_require__(87),takeLast:__webpack_require__(138),takeLastWhile:__webpack_require__(358),takeWhile:__webpack_require__(359),tap:__webpack_require__(361),test:__webpack_require__(362),times:__webpack_require__(155),toLower:__webpack_require__(364),toPairs:__webpack_require__(365),toPairsIn:__webpack_require__(366),toString:__webpack_require__(38),toUpper:__webpack_require__(367),transduce:__webpack_require__(368),transpose:__webpack_require__(369),traverse:__webpack_require__(370),trim:__webpack_require__(371),tryCatch:__webpack_require__(372),type:__webpack_require__(79),unapply:__webpack_require__(373),unary:__webpack_require__(374),uncurryN:__webpack_require__(375),unfold:__webpack_require__(376),union:__webpack_require__(377),unionWith:__webpack_require__(378),uniq:__webpack_require__(90),uniqBy:__webpack_require__(139),uniqWith:__webpack_require__(91),unless:__webpack_require__(379),unnest:__webpack_require__(380),until:__webpack_require__(381),update:__webpack_require__(86),useWith:__webpack_require__(153),values:__webpack_require__(111),valuesIn:__webpack_require__(382),view:__webpack_require__(383),when:__webpack_require__(384),where:__webpack_require__(157),whereEq:__webpack_require__(385),without:__webpack_require__(386),xprod:__webpack_require__(387),zip:__webpack_require__(388),zipObj:__webpack_require__(389),zipWith:__webpack_require__(390)};

/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry3=__webpack_require__(4);/**
 * Applies a function to the value at the given index of an array, returning a
 * new copy of the array with the element at the given index replaced with the
 * result of the function application.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category List
 * @sig (a -> a) -> Number -> [a] -> [a]
 * @param {Function} fn The function to apply.
 * @param {Number} idx The index.
 * @param {Array|Arguments} list An array-like object whose value
 *        at the supplied index will be replaced.
 * @return {Array} A copy of the supplied array-like object with
 *         the element at index `idx` replaced with the value
 *         returned by applying `fn` to the existing element.
 * @see R.update
 * @example
 *
 *      R.adjust(R.add(10), 1, [1, 2, 3]);     //=> [1, 12, 3]
 *      R.adjust(R.add(10))(1)([1, 2, 3]);     //=> [1, 12, 3]
 * @symb R.adjust(f, -1, [a, b]) = [a, f(b)]
 * @symb R.adjust(f, 0, [a, b]) = [f(a), b]
 */module.exports=_curry3(function adjust(fn,idx,list){if(idx>=list.length||idx<-list.length){return list;}var start=idx<0?list.length:0;var _idx=start+idx;var _list=_concat(list);_list[_idx]=fn(list[_idx]);return _list;});

/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function(){function XWrap(fn){this.f=fn;}XWrap.prototype['@@transducer/init']=function(){throw new Error('init not implemented on XWrap');};XWrap.prototype['@@transducer/result']=function(acc){return acc;};XWrap.prototype['@@transducer/step']=function(acc,x){return this.f(acc,x);};return function _xwrap(fn){return new XWrap(fn);};}();

/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _curry2=__webpack_require__(1);/**
 * Creates a function that is bound to a context.
 * Note: `R.bind` does not provide the additional argument-binding capabilities of
 * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category Function
 * @category Object
 * @sig (* -> *) -> {*} -> (* -> *)
 * @param {Function} fn The function to bind to context
 * @param {Object} thisObj The context to bind `fn` to
 * @return {Function} A function that will execute in the context of `thisObj`.
 * @see R.partial
 * @example
 *
 *      var log = R.bind(console.log, console);
 *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}
 *      // logs {a: 2}
 * @symb R.bind(f, o)(a, b) = f.call(o, a, b)
 */module.exports=_curry2(function bind(fn,thisObj){return _arity(fn.length,function(){return fn.apply(thisObj,arguments);});});

/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _has=__webpack_require__(15);module.exports=function(){var toString=Object.prototype.toString;return toString.call(arguments)==='[object Arguments]'?function _isArguments(x){return toString.call(x)==='[object Arguments]';}:function _isArguments(x){return _has('callee',x);};}();

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns `true` if both arguments are `true`; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig a -> b -> a | b
 * @param {Any} a
 * @param {Any} b
 * @return {Any} the first argument if it is falsy, otherwise the second argument.
 * @see R.both
 * @example
 *
 *      R.and(true, true); //=> true
 *      R.and(true, false); //=> false
 *      R.and(false, true); //=> false
 *      R.and(false, false); //=> false
 */module.exports=_curry2(function and(a,b){return a&&b;});

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xany=__webpack_require__(109);/**
 * Returns `true` if at least one of elements of the list match the predicate,
 * `false` otherwise.
 *
 * Dispatches to the `any` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> Boolean
 * @param {Function} fn The predicate function.
 * @param {Array} list The array to consider.
 * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`
 *         otherwise.
 * @see R.all, R.none, R.transduce
 * @example
 *
 *      var lessThan0 = R.flip(R.lt)(0);
 *      var lessThan2 = R.flip(R.lt)(2);
 *      R.any(lessThan0)([1, 2]); //=> false
 *      R.any(lessThan2)([1, 2]); //=> true
 */module.exports=_curry2(_dispatchable(['any'],_xany,function any(fn,list){var idx=0;while(idx<list.length){if(fn(list[idx])){return true;}idx+=1;}return false;}));

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduced=__webpack_require__(28);var _xfBase=__webpack_require__(8);module.exports=function(){function XAny(f,xf){this.xf=xf;this.f=f;this.any=false;}XAny.prototype['@@transducer/init']=_xfBase.init;XAny.prototype['@@transducer/result']=function(result){if(!this.any){result=this.xf['@@transducer/step'](result,false);}return this.xf['@@transducer/result'](result);};XAny.prototype['@@transducer/step']=function(result,input){if(this.f(input)){this.any=true;result=_reduced(this.xf['@@transducer/step'](result,true));}return result;};return _curry2(function _xany(f,xf){return new XAny(f,xf);});}();

/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Applies function `fn` to the argument list `args`. This is useful for
 * creating a fixed-arity function from a variadic function. `fn` should be a
 * bound function if context is significant.
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig (*... -> a) -> [*] -> a
 * @param {Function} fn The function which will be called with `args`
 * @param {Array} args The arguments to call `fn` with
 * @return {*} result The result, equivalent to `fn(...args)`
 * @see R.call, R.unapply
 * @example
 *
 *      var nums = [1, 2, 3, -99, 42, 6, 7];
 *      R.apply(Math.max, nums); //=> 42
 * @symb R.apply(f, [a, b, c]) = f(a, b, c)
 */module.exports=_curry2(function apply(fn,args){return fn.apply(this,args);});

/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var keys=__webpack_require__(22);/**
 * Returns a list of all the enumerable own properties of the supplied object.
 * Note that the order of the output array is not guaranteed across different
 * JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {k: v} -> [v]
 * @param {Object} obj The object to extract values from
 * @return {Array} An array of the values of the object's own properties.
 * @see R.valuesIn, R.keys
 * @example
 *
 *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]
 */module.exports=_curry1(function values(obj){var props=keys(obj);var len=props.length;var vals=[];var idx=0;while(idx<len){vals[idx]=obj[props[idx]];idx+=1;}return vals;});

/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var _has=__webpack_require__(15);var _isArray=__webpack_require__(27);var _isInteger=__webpack_require__(77);var assoc=__webpack_require__(52);var isNil=__webpack_require__(113);/**
 * Makes a shallow clone of an object, setting or overriding the nodes required
 * to create the given path, and placing the specific value at the tail end of
 * that path. Note that this copies and flattens prototype properties onto the
 * new object as well. All non-primitive properties are copied by reference.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Object
 * @typedefn Idx = String | Int
 * @sig [Idx] -> a -> {a} -> {a}
 * @param {Array} path the path to set
 * @param {*} val The new value
 * @param {Object} obj The object to clone
 * @return {Object} A new object equivalent to the original except along the specified path.
 * @see R.dissocPath
 * @example
 *
 *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}
 *
 *      // Any missing or non-object keys in path will be overridden
 *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}
 */module.exports=_curry3(function assocPath(path,val,obj){if(path.length===0){return val;}var idx=path[0];if(path.length>1){var nextObj=!isNil(obj)&&_has(idx,obj)?obj[idx]:_isInteger(path[1])?[]:{};val=assocPath(Array.prototype.slice.call(path,1),val,nextObj);}if(_isInteger(idx)&&_isArray(obj)){var arr=[].concat(obj);arr[idx]=val;return arr;}else{return assoc(idx,val,obj);}});

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Checks if the input value is `null` or `undefined`.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Type
 * @sig * -> Boolean
 * @param {*} x The value to test.
 * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.
 * @example
 *
 *      R.isNil(null); //=> true
 *      R.isNil(undefined); //=> true
 *      R.isNil(0); //=> false
 *      R.isNil([]); //=> false
 */module.exports=_curry1(function isNil(x){return x==null;});

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduce=__webpack_require__(18);var ap=__webpack_require__(76);var curryN=__webpack_require__(14);var map=__webpack_require__(17);/**
 * "lifts" a function to be the specified arity, so that it may "map over" that
 * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig Number -> (*... -> *) -> ([*]... -> [*])
 * @param {Function} fn The function to lift into higher context
 * @return {Function} The lifted function.
 * @see R.lift, R.ap
 * @example
 *
 *      var madd3 = R.liftN(3, (...args) => R.sum(args));
 *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]
 */module.exports=_curry2(function liftN(arity,fn){var lifted=curryN(arity,fn);return curryN(arity,function(){return _reduce(ap,map(lifted,arguments[0]),Array.prototype.slice.call(arguments,1));});});

/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _isArrayLike=__webpack_require__(51);/**
 * `_makeFlat` is a helper function that returns a one-level or fully recursive
 * function based on the flag passed in.
 *
 * @private
 */module.exports=function _makeFlat(recursive){return function flatt(list){var value,jlen,j;var result=[];var idx=0;var ilen=list.length;while(idx<ilen){if(_isArrayLike(list[idx])){value=recursive?flatt(list[idx]):list[idx];j=0;jlen=value.length;while(j<jlen){result[result.length]=value[j];j+=1;}}else{result[result.length]=list[idx];}idx+=1;}return result;};};

/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _cloneRegExp=__webpack_require__(117);var type=__webpack_require__(79);/**
 * Copies an object.
 *
 * @private
 * @param {*} value The value to be copied
 * @param {Array} refFrom Array containing the source references
 * @param {Array} refTo Array containing the copied source references
 * @param {Boolean} deep Whether or not to perform deep cloning.
 * @return {*} The copied value.
 */module.exports=function _clone(value,refFrom,refTo,deep){var copy=function copy(copiedValue){var len=refFrom.length;var idx=0;while(idx<len){if(value===refFrom[idx]){return refTo[idx];}idx+=1;}refFrom[idx+1]=value;refTo[idx+1]=copiedValue;for(var key in value){copiedValue[key]=deep?_clone(value[key],refFrom,refTo,true):value[key];}return copiedValue;};switch(type(value)){case'Object':return copy({});case'Array':return copy([]);case'Date':return new Date(value.valueOf());case'RegExp':return _cloneRegExp(value);default:return value;}};

/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _cloneRegExp(pattern){return new RegExp(pattern.source,(pattern.global?'g':'')+(pattern.ignoreCase?'i':'')+(pattern.multiline?'m':'')+(pattern.sticky?'y':'')+(pattern.unicode?'u':''));};

/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * A function that returns the `!` of its argument. It will return `true` when
 * passed false-y value, and `false` when passed a truth-y one.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig * -> Boolean
 * @param {*} a any value
 * @return {Boolean} the logical inverse of passed argument.
 * @see R.complement
 * @example
 *
 *      R.not(true); //=> false
 *      R.not(false); //=> true
 *      R.not(0); //=> true
 *      R.not(1); //=> false
 */module.exports=_curry1(function not(a){return!a;});

/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _pipe=__webpack_require__(218);var reduce=__webpack_require__(23);var tail=__webpack_require__(81);/**
 * Performs left-to-right function composition. The leftmost function may have
 * any arity; the remaining functions must be unary.
 *
 * In some libraries this function is named `sequence`.
 *
 * **Note:** The result of pipe is not automatically curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)
 * @param {...Function} functions
 * @return {Function}
 * @see R.compose
 * @example
 *
 *      var f = R.pipe(Math.pow, R.negate, R.inc);
 *
 *      f(3, 4); // -(3^4) + 1
 * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))
 */module.exports=function pipe(){if(arguments.length===0){throw new Error('pipe requires at least one argument');}return _arity(arguments[0].length,reduce(_pipe,arguments[0],tail(arguments)));};

/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var chain=__webpack_require__(78);var compose=__webpack_require__(80);var map=__webpack_require__(17);/**
 * Returns the right-to-left Kleisli composition of the provided functions,
 * each of which must return a value of a type supported by [`chain`](#chain).
 *
 * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category Function
 * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)
 * @param {...Function} ...functions The functions to compose
 * @return {Function}
 * @see R.pipeK
 * @example
 *
 *       //  get :: String -> Object -> Maybe *
 *       var get = R.curry((propName, obj) => Maybe(obj[propName]))
 *
 *       //  getStateCode :: Maybe String -> Maybe String
 *       var getStateCode = R.composeK(
 *         R.compose(Maybe.of, R.toUpper),
 *         get('state'),
 *         get('address'),
 *         get('user'),
 *       );
 *       getStateCode({"user":{"address":{"state":"ny"}}}); //=> Maybe.Just("NY")
 *       getStateCode({}); //=> Maybe.Nothing()
 * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))
 */module.exports=function composeK(){if(arguments.length===0){throw new Error('composeK requires at least one argument');}var init=Array.prototype.slice.call(arguments);var last=init.pop();return compose(compose.apply(this,map(chain,init)),last);};

/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _pipeP=__webpack_require__(220);var reduce=__webpack_require__(23);var tail=__webpack_require__(81);/**
 * Performs left-to-right composition of one or more Promise-returning
 * functions. The leftmost function may have any arity; the remaining functions
 * must be unary.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category Function
 * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)
 * @param {...Function} functions
 * @return {Function}
 * @see R.composeP
 * @example
 *
 *      //  followersForUser :: String -> Promise [User]
 *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);
 */module.exports=function pipeP(){if(arguments.length===0){throw new Error('pipeP requires at least one argument');}return _arity(arguments[0].length,reduce(_pipeP,arguments[0],tail(arguments)));};

/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var equals=__webpack_require__(19);module.exports=function _indexOf(list,a,idx){var inf,item;// Array.prototype.indexOf doesn't exist below IE9
if(typeof list.indexOf==='function'){switch(typeof a==='undefined'?'undefined':_typeof(a)){case'number':if(a===0){// manually crawl the list to distinguish between +0 and -0
inf=1/a;while(idx<list.length){item=list[idx];if(item===0&&1/item===inf){return idx;}idx+=1;}return-1;}else if(a!==a){// NaN
while(idx<list.length){item=list[idx];if(typeof item==='number'&&item!==item){return idx;}idx+=1;}return-1;}// non-zero numbers can utilise Set
return list.indexOf(a,idx);// all these types can utilise Set
case'string':case'boolean':case'function':case'undefined':return list.indexOf(a,idx);case'object':if(a===null){// null can utilise Set
return list.indexOf(a,idx);}}}// anything else not covered above, defer to R.equals
while(idx<list.length){if(equals(list[idx],a)){return idx;}idx+=1;}return-1;};

/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns true if its arguments are identical, false otherwise. Values are
 * identical if they reference the same memory. `NaN` is identical to `NaN`;
 * `0` and `-0` are not identical.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> a -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      var o = {};
 *      R.identical(o, o); //=> true
 *      R.identical(1, 1); //=> true
 *      R.identical(1, '1'); //=> false
 *      R.identical([], []); //=> false
 *      R.identical(0, -0); //=> false
 *      R.identical(NaN, NaN); //=> true
 */module.exports=_curry2(function identical(a,b){// SameValue algorithm
if(a===b){// Steps 1-5, 7-10
// Steps 6.b-6.e: +0 != -0
return a!==0||1/a===1/b;}else{// Step 6.a: NaN == NaN
return a!==a&&b!==b;}});

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _complement(f){return function(){return!f.apply(this,arguments);};};

/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var curry=__webpack_require__(56);var nAry=__webpack_require__(53);/**
 * Wraps a constructor function inside a curried function that can be called
 * with the same arguments and returns the same type. The arity of the function
 * returned is specified to allow using variadic constructor functions.
 *
 * @func
 * @memberOf R
 * @since v0.4.0
 * @category Function
 * @sig Number -> (* -> {*}) -> (* -> {*})
 * @param {Number} n The arity of the constructor function.
 * @param {Function} Fn The constructor function to wrap.
 * @return {Function} A wrapped, curried constructor function.
 * @example
 *
 *      // Variadic Constructor function
 *      function Salad() {
 *        this.ingredients = arguments;
 *      };
 *      Salad.prototype.recipe = function() {
 *        var instructions = R.map((ingredient) => (
 *          'Add a whollop of ' + ingredient, this.ingredients)
 *        )
 *        return R.join('\n', instructions)
 *      }
 *
 *      var ThreeLayerSalad = R.constructN(3, Salad)
 *
 *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.
 *      var salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup')
 *      console.log(salad.recipe());
 *      // Add a whollop of Mayonnaise
 *      // Add a whollop of Potato Chips
 *      // Add a whollop of Potato Ketchup
 */module.exports=_curry2(function constructN(n,Fn){if(n>10){throw new Error('Constructor with greater than ten arguments');}if(n===0){return function(){return new Fn();};}return curry(nAry(n,function($0,$1,$2,$3,$4,$5,$6,$7,$8,$9){switch(arguments.length){case 1:return new Fn($0);case 2:return new Fn($0,$1);case 3:return new Fn($0,$1,$2);case 4:return new Fn($0,$1,$2,$3);case 5:return new Fn($0,$1,$2,$3,$4);case 6:return new Fn($0,$1,$2,$3,$4,$5);case 7:return new Fn($0,$1,$2,$3,$4,$5,$6);case 8:return new Fn($0,$1,$2,$3,$4,$5,$6,$7);case 9:return new Fn($0,$1,$2,$3,$4,$5,$6,$7,$8);case 10:return new Fn($0,$1,$2,$3,$4,$5,$6,$7,$8,$9);}}));});

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _map=__webpack_require__(50);var curryN=__webpack_require__(14);var max=__webpack_require__(34);var pluck=__webpack_require__(35);var reduce=__webpack_require__(23);/**
 * Accepts a converging function and a list of branching functions and returns
 * a new function. When invoked, this new function is applied to some
 * arguments, each branching function is applied to those same arguments. The
 * results of each branching function are passed as arguments to the converging
 * function to produce the return value.
 *
 * @func
 * @memberOf R
 * @since v0.4.2
 * @category Function
 * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)
 * @param {Function} after A function. `after` will be invoked with the return values of
 *        `fn1` and `fn2` as its arguments.
 * @param {Array} functions A list of functions.
 * @return {Function} A new function.
 * @see R.useWith
 * @example
 *
 *      var average = R.converge(R.divide, [R.sum, R.length])
 *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4
 *
 *      var strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])
 *      strangeConcat("Yodel") //=> "YODELyodel"
 *
 * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))
 */module.exports=_curry2(function converge(after,fns){return curryN(reduce(max,0,pluck('length',fns)),function(){var args=arguments;var context=this;return after.apply(context,_map(function(fn){return fn.apply(context,args);},fns));});});

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns the second argument if it is not `null`, `undefined` or `NaN`;
 * otherwise the first argument is returned.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category Logic
 * @sig a -> b -> a | b
 * @param {a} default The default value.
 * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.
 * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value
 * @example
 *
 *      var defaultTo42 = R.defaultTo(42);
 *
 *      defaultTo42(null);  //=> 42
 *      defaultTo42(undefined);  //=> 42
 *      defaultTo42('Ramda');  //=> 'Ramda'
 *      // parseInt('string') results in NaN
 *      defaultTo42(parseInt('string')); //=> 42
 */module.exports=_curry2(function defaultTo(d,v){return v==null||v!==v?d:v;});

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _contains=__webpack_require__(31);var _curry2=__webpack_require__(1);/**
 * Finds the set (i.e. no duplicates) of all elements in the first list not
 * contained in the second list. Objects and Arrays are compared in terms of
 * value equality, not reference equality.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig [*] -> [*] -> [*]
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The elements in `list1` that are not in `list2`.
 * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without
 * @example
 *
 *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]
 *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]
 *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]
 */module.exports=_curry2(function difference(first,second){var out=[];var idx=0;var firstLen=first.length;while(idx<firstLen){if(!_contains(first[idx],second)&&!_contains(first[idx],out)){out[out.length]=first[idx];}idx+=1;}return out;});

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _containsWith=__webpack_require__(60);var _curry3=__webpack_require__(4);/**
 * Finds the set (i.e. no duplicates) of all elements in the first list not
 * contained in the second list. Duplication is determined according to the
 * value returned by applying the supplied predicate to two list elements.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]
 * @param {Function} pred A predicate used to test whether two items are equal.
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The elements in `list1` that are not in `list2`.
 * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith
 * @example
 *
 *      var cmp = (x, y) => x.a === y.a;
 *      var l1 = [{a: 1}, {a: 2}, {a: 3}];
 *      var l2 = [{a: 3}, {a: 4}];
 *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]
 */module.exports=_curry3(function differenceWith(pred,first,second){var out=[];var idx=0;var firstLen=first.length;while(idx<firstLen){if(!_containsWith(pred,first[idx],second)&&!_containsWith(pred,first[idx],out)){out.push(first[idx]);}idx+=1;}return out;});

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns a new object that does not contain a `prop` property.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category Object
 * @sig String -> {k: v} -> {k: v}
 * @param {String} prop The name of the property to dissociate
 * @param {Object} obj The object to clone
 * @return {Object} A new object equivalent to the original but without the specified property
 * @see R.assoc
 * @example
 *
 *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}
 */module.exports=_curry2(function dissoc(prop,obj){var result={};for(var p in obj){result[p]=obj[p];}delete result[prop];return result;});

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Removes the sub-list of `list` starting at index `start` and containing
 * `count` elements. _Note that this is not destructive_: it returns a copy of
 * the list with the changes.
 * <small>No lists have been harmed in the application of this function.</small>
 *
 * @func
 * @memberOf R
 * @since v0.2.2
 * @category List
 * @sig Number -> Number -> [a] -> [a]
 * @param {Number} start The position to start removing elements
 * @param {Number} count The number of elements to remove
 * @param {Array} list The list to remove from
 * @return {Array} A new Array with `count` elements from `start` removed.
 * @example
 *
 *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]
 */module.exports=_curry3(function remove(start,count,list){var result=Array.prototype.slice.call(list,0);result.splice(start,count);return result;});

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xdrop=__webpack_require__(237);var slice=__webpack_require__(30);/**
 * Returns all but the first `n` elements of the given list, string, or
 * transducer/transformer (or object with a `drop` method).
 *
 * Dispatches to the `drop` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n
 * @param {*} list
 * @return {*} A copy of list without the first `n` elements
 * @see R.take, R.transduce, R.dropLast, R.dropWhile
 * @example
 *
 *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']
 *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']
 *      R.drop(3, ['foo', 'bar', 'baz']); //=> []
 *      R.drop(4, ['foo', 'bar', 'baz']); //=> []
 *      R.drop(3, 'ramda');               //=> 'da'
 */module.exports=_curry2(_dispatchable(['drop'],_xdrop,function drop(n,xs){return slice(Math.max(0,n),Infinity,xs);}));

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XDropRepeatsWith(pred,xf){this.xf=xf;this.pred=pred;this.lastValue=undefined;this.seenFirstValue=false;}XDropRepeatsWith.prototype['@@transducer/init']=_xfBase.init;XDropRepeatsWith.prototype['@@transducer/result']=_xfBase.result;XDropRepeatsWith.prototype['@@transducer/step']=function(result,input){var sameAsLast=false;if(!this.seenFirstValue){this.seenFirstValue=true;}else if(this.pred(this.lastValue,input)){sameAsLast=true;}this.lastValue=input;return sameAsLast?result:this.xf['@@transducer/step'](result,input);};return _curry2(function _xdropRepeatsWith(pred,xf){return new XDropRepeatsWith(pred,xf);});}();

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xdropRepeatsWith=__webpack_require__(133);var last=__webpack_require__(135);/**
 * Returns a new list without any consecutively repeating elements. Equality is
 * determined by applying the supplied predicate to each pair of consecutive elements. The
 * first element in a series of equal elements will be preserved.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category List
 * @sig (a, a -> Boolean) -> [a] -> [a]
 * @param {Function} pred A predicate used to test whether two items are equal.
 * @param {Array} list The array to consider.
 * @return {Array} `list` without repeating elements.
 * @see R.transduce
 * @example
 *
 *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];
 *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]
 */module.exports=_curry2(_dispatchable([],_xdropRepeatsWith,function dropRepeatsWith(pred,list){var result=[];var idx=1;var len=list.length;if(len!==0){result[0]=list[0];while(idx<len){if(!pred(last(result),list[idx])){result[result.length]=list[idx];}idx+=1;}}return result;}));

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var nth=__webpack_require__(39);/**
 * Returns the last element of the given list or string.
 *
 * @func
 * @memberOf R
 * @since v0.1.4
 * @category List
 * @sig [a] -> a | Undefined
 * @sig String -> String
 * @param {*} list
 * @return {*}
 * @see R.init, R.head, R.tail
 * @example
 *
 *      R.last(['fi', 'fo', 'fum']); //=> 'fum'
 *      R.last([]); //=> undefined
 *
 *      R.last('abc'); //=> 'c'
 *      R.last(''); //=> ''
 */module.exports=nth(-1);

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns `true` if one or both of its arguments are `true`. Returns `false`
 * if both arguments are `false`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig a -> b -> a | b
 * @param {Any} a
 * @param {Any} b
 * @return {Any} the first argument if truthy, otherwise the second argument.
 * @see R.either
 * @example
 *
 *      R.or(true, true); //=> true
 *      R.or(true, false); //=> true
 *      R.or(false, true); //=> true
 *      R.or(false, false); //=> false
 */module.exports=_curry2(function or(a,b){return a||b;});

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _isArguments=__webpack_require__(106);var _isArray=__webpack_require__(27);var _isObject=__webpack_require__(85);var _isString=__webpack_require__(36);/**
 * Returns the empty value of its argument's type. Ramda defines the empty
 * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other
 * types are supported if they define `<Type>.empty` and/or
 * `<Type>.prototype.empty`.
 *
 * Dispatches to the `empty` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Function
 * @sig a -> a
 * @param {*} x
 * @return {*}
 * @example
 *
 *      R.empty(Just(42));      //=> Nothing()
 *      R.empty([1, 2, 3]);     //=> []
 *      R.empty('unicorns');    //=> ''
 *      R.empty({x: 1, y: 2});  //=> {}
 */module.exports=_curry1(function empty(x){return x!=null&&typeof x['fantasy-land/empty']==='function'?x['fantasy-land/empty']():x!=null&&x.constructor!=null&&typeof x.constructor['fantasy-land/empty']==='function'?x.constructor['fantasy-land/empty']():x!=null&&typeof x.empty==='function'?x.empty():x!=null&&x.constructor!=null&&typeof x.constructor.empty==='function'?x.constructor.empty():_isArray(x)?[]:_isString(x)?'':_isObject(x)?{}:_isArguments(x)?function(){return arguments;}():// else
void 0;});

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var drop=__webpack_require__(132);/**
 * Returns a new list containing the last `n` elements of the given list.
 * If `n > list.length`, returns a list of `list.length` elements.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n The number of elements to return.
 * @param {Array} xs The collection to consider.
 * @return {Array}
 * @see R.dropLast
 * @example
 *
 *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']
 *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']
 *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']
 *      R.takeLast(3, 'ramda');               //=> 'mda'
 */module.exports=_curry2(function takeLast(n,xs){return drop(n>=0?xs.length-n:0,xs);});

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _Set=__webpack_require__(281);var _curry2=__webpack_require__(1);/**
 * Returns a new list containing only one copy of each element in the original
 * list, based upon the value returned by applying the supplied function to
 * each list element. Prefers the first item if the supplied function produces
 * the same value on two items. [`R.equals`](#equals) is used for comparison.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig (a -> b) -> [a] -> [a]
 * @param {Function} fn A function used to produce a value to use during comparisons.
 * @param {Array} list The array to consider.
 * @return {Array} The list of unique items.
 * @example
 *
 *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]
 */module.exports=_curry2(function uniqBy(fn,list){var set=new _Set();var result=[];var idx=0;var appliedItem,item;while(idx<list.length){item=list[idx];appliedItem=fn(item);if(set.add(appliedItem)){result.push(item);}idx+=1;}return result;});

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Creates an object containing a single key:value pair.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category Object
 * @sig String -> a -> {String:a}
 * @param {String} key
 * @param {*} val
 * @return {Object}
 * @see R.pair
 * @example
 *
 *      var matchPhrases = R.compose(
 *        R.objOf('must'),
 *        R.map(R.objOf('match_phrase'))
 *      );
 *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}
 */module.exports=_curry2(function objOf(key,val){var obj={};obj[key]=val;return obj;});

/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * See if an object (`val`) is an instance of the supplied constructor. This
 * function will check up the inheritance chain, if any.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Type
 * @sig (* -> {*}) -> a -> Boolean
 * @param {Object} ctor A constructor
 * @param {*} val The value to test
 * @return {Boolean}
 * @example
 *
 *      R.is(Object, {}); //=> true
 *      R.is(Number, 1); //=> true
 *      R.is(Object, 1); //=> false
 *      R.is(String, 's'); //=> true
 *      R.is(String, new String('')); //=> true
 *      R.is(Object, new String('')); //=> true
 *      R.is(Object, 's'); //=> false
 *      R.is(Number, {}); //=> false
 */module.exports=_curry2(function is(Ctor,val){return val!=null&&val.constructor===Ctor||val instanceof Ctor;});

/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var converge=__webpack_require__(126);/**
 * juxt applies a list of functions to a list of values.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Function
 * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])
 * @param {Array} fns An array of functions
 * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.
 * @see R.applySpec
 * @example
 *
 *      var getRange = R.juxt([Math.min, Math.max]);
 *      getRange(3, 4, 9, -3); //=> [-3, 9]
 * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]
 */module.exports=_curry1(function juxt(fns){return converge(function(){return Array.prototype.slice.call(arguments,0);},fns);});

/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _isNumber=__webpack_require__(144);/**
 * Returns the number of elements in the array by returning `list.length`.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category List
 * @sig [a] -> Number
 * @param {Array} list The array to inspect.
 * @return {Number} The length of the array.
 * @example
 *
 *      R.length([]); //=> 0
 *      R.length([1, 2, 3]); //=> 3
 */module.exports=_curry1(function length(list){return list!=null&&_isNumber(list.length)?list.length:NaN;});

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _isNumber(x){return Object.prototype.toString.call(x)==='[object Number]';};

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var sum=__webpack_require__(146);/**
 * Returns the mean of the given list of numbers.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category Math
 * @sig [Number] -> Number
 * @param {Array} list
 * @return {Number}
 * @see R.median
 * @example
 *
 *      R.mean([2, 7, 9]); //=> 6
 *      R.mean([]); //=> NaN
 */module.exports=_curry1(function mean(list){return sum(list)/list.length;});

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var add=__webpack_require__(48);var reduce=__webpack_require__(23);/**
 * Adds together all the elements of a list.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Math
 * @sig [Number] -> Number
 * @param {Array} list An array of numbers
 * @return {Number} The sum of all the numbers in the list.
 * @see R.reduce
 * @example
 *
 *      R.sum([2,4,6,8,100,1]); //=> 121
 */module.exports=reduce(add,0);

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _curry2=__webpack_require__(1);var _has=__webpack_require__(15);/**
 * A customisable version of [`R.memoize`](#memoize). `memoizeWith` takes an
 * additional function that will be applied to a given argument set and used to
 * create the cache key under which the results of the function to be memoized
 * will be stored. Care must be taken when implementing key generation to avoid
 * clashes that may overwrite previous entries erroneously.
 *
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Function
 * @sig (*... -> String) -> (*... -> a) -> (*... -> a)
 * @param {Function} fn The function to generate the cache key.
 * @param {Function} fn The function to memoize.
 * @return {Function} Memoized version of `fn`.
 * @see R.memoize
 * @example
 *
 *      let count = 0;
 *      const factorial = R.memoizeWith(R.identity, n => {
 *        count += 1;
 *        return R.product(R.range(1, n + 1));
 *      });
 *      factorial(5); //=> 120
 *      factorial(5); //=> 120
 *      factorial(5); //=> 120
 *      count; //=> 1
 */module.exports=_curry2(function memoizeWith(mFn,fn){var cache={};return _arity(fn.length,function(){var key=mFn.apply(this,arguments);if(!_has(key,cache)){cache[key]=fn.apply(this,arguments);}return cache[key];});});

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Multiplies two numbers. Equivalent to `a * b` but curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Math
 * @sig Number -> Number -> Number
 * @param {Number} a The first value.
 * @param {Number} b The second value.
 * @return {Number} The result of `a * b`.
 * @see R.divide
 * @example
 *
 *      var double = R.multiply(2);
 *      var triple = R.multiply(3);
 *      double(3);       //=>  6
 *      triple(4);       //=> 12
 *      R.multiply(2, 5);  //=> 10
 */module.exports=_curry2(function multiply(a,b){return a*b;});

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Returns the result of "setting" the portion of the given data structure
 * focused by the given lens to the result of applying the given function to
 * the focused value.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category Object
 * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s
 * @sig Lens s a -> (a -> a) -> s -> s
 * @param {Lens} lens
 * @param {*} v
 * @param {*} x
 * @return {*}
 * @see R.prop, R.lensIndex, R.lensProp
 * @example
 *
 *      var headLens = R.lensIndex(0);
 *
 *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']
 */module.exports=function(){// `Identity` is a functor that holds a single value, where `map` simply
// transforms the held value with the provided function.
var Identity=function Identity(x){return{value:x,map:function map(f){return Identity(f(x));}};};return _curry3(function over(lens,f,x){// The value returned by the getter function is first transformed with `f`,
// then set as the value of an `Identity`. This is then mapped over with the
// setter function of the lens.
return lens(function(y){return Identity(f(y));})(x).value;});}();

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _curry2=__webpack_require__(1);module.exports=function _createPartialApplicator(concat){return _curry2(function(fn,args){return _arity(Math.max(0,fn.length-args.length),function(){return fn.apply(this,concat(args,arguments));});});};

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Similar to `pick` except that this one includes a `key: undefined` pair for
 * properties that don't exist.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig [k] -> {k: v} -> {k: v}
 * @param {Array} names an array of String property names to copy onto a new object
 * @param {Object} obj The object to copy from
 * @return {Object} A new object with only properties from `names` on it.
 * @see R.pick
 * @example
 *
 *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}
 *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}
 */module.exports=_curry2(function pickAll(names,obj){var result={};var idx=0;var len=names.length;while(idx<len){var name=names[idx];result[name]=obj[name];idx+=1;}return result;});

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry2=__webpack_require__(1);/**
 * Returns a new list with the given element at the front, followed by the
 * contents of the list.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig a -> [a] -> [a]
 * @param {*} el The item to add to the head of the output list.
 * @param {Array} list The array to add to the tail of the output list.
 * @return {Array} A new array.
 * @see R.append
 * @example
 *
 *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']
 */module.exports=_curry2(function prepend(el,list){return _concat([el],list);});

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var curryN=__webpack_require__(14);/**
 * Accepts a function `fn` and a list of transformer functions and returns a
 * new curried function. When the new function is invoked, it calls the
 * function `fn` with parameters consisting of the result of calling each
 * supplied handler on successive arguments to the new function.
 *
 * If more arguments are passed to the returned function than transformer
 * functions, those arguments are passed directly to `fn` as additional
 * parameters. If you expect additional arguments that don't need to be
 * transformed, although you can ignore them, it's best to pass an identity
 * function so that the new function reports the correct arity.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)
 * @param {Function} fn The function to wrap.
 * @param {Array} transformers A list of transformer functions
 * @return {Function} The wrapped function.
 * @see R.converge
 * @example
 *
 *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81
 *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81
 *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32
 *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32
 * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))
 */module.exports=_curry2(function useWith(fn,transformers){return curryN(transformers.length,function(){var args=[];var idx=0;while(idx<transformers.length){args.push(transformers[idx].call(this,arguments[idx]));idx+=1;}return fn.apply(this,args.concat(Array.prototype.slice.call(arguments,transformers.length)));});});

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Returns a single item by iterating through the list, successively calling
 * the iterator function and passing it an accumulator value and the current
 * value from the array, and then passing the result to the next call.
 *
 * Similar to [`reduce`](#reduce), except moves through the input list from the
 * right to the left.
 *
 * The iterator function receives two values: *(value, acc)*, while the arguments'
 * order of `reduce`'s iterator function is *(acc, value)*.
 *
 * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse
 * arrays), unlike the native `Array.prototype.reduceRight` method. For more details
 * on this behavior, see:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a, b -> b) -> b -> [a] -> b
 * @param {Function} fn The iterator function. Receives two values, the current element from the array
 *        and the accumulator.
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.reduce, R.addIndex
 * @example
 *
 *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2
 *          -               -2
 *         / \              / \
 *        1   -            1   3
 *           / \              / \
 *          2   -     ==>    2  -1
 *             / \              / \
 *            3   -            3   4
 *               / \              / \
 *              4   0            4   0
 *
 * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))
 */module.exports=_curry3(function reduceRight(fn,acc,list){var idx=list.length-1;while(idx>=0){acc=fn(list[idx],acc);idx-=1;}return acc;});

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Calls an input function `n` times, returning an array containing the results
 * of those function calls.
 *
 * `fn` is passed one argument: The current value of `n`, which begins at `0`
 * and is gradually incremented to `n - 1`.
 *
 * @func
 * @memberOf R
 * @since v0.2.3
 * @category List
 * @sig (Number -> a) -> Number -> [a]
 * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.
 * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.
 * @return {Array} An array containing the return values of all calls to `fn`.
 * @see R.repeat
 * @example
 *
 *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]
 * @symb R.times(f, 0) = []
 * @symb R.times(f, 1) = [f(0)]
 * @symb R.times(f, 2) = [f(0), f(1)]
 */module.exports=_curry2(function times(fn,n){var len=Number(n);var idx=0;var list;if(len<0||isNaN(len)){throw new RangeError('n must be a non-negative number');}list=new Array(len);while(idx<len){list[idx]=fn(idx);idx+=1;}return list;});

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var ap=__webpack_require__(76);var map=__webpack_require__(17);var prepend=__webpack_require__(152);var reduceRight=__webpack_require__(154);/**
 * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)
 * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an
 * Applicative of Traversable.
 *
 * Dispatches to the `sequence` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category List
 * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)
 * @param {Function} of
 * @param {*} traversable
 * @return {*}
 * @see R.traverse
 * @example
 *
 *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])
 *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()
 *
 *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]
 *      R.sequence(R.of, Nothing());       //=> [Nothing()]
 */module.exports=_curry2(function sequence(of,traversable){return typeof traversable.sequence==='function'?traversable.sequence(of):reduceRight(function(x,acc){return ap(map(prepend,x),acc);},of([]),traversable);});

/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _has=__webpack_require__(15);/**
 * Takes a spec object and a test object; returns true if the test satisfies
 * the spec. Each of the spec's own properties must be a predicate function.
 * Each predicate is applied to the value of the corresponding property of the
 * test object. `where` returns true if all the predicates return true, false
 * otherwise.
 *
 * `where` is well suited to declaratively expressing constraints for other
 * functions such as [`filter`](#filter) and [`find`](#find).
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category Object
 * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean
 * @param {Object} spec
 * @param {Object} testObj
 * @return {Boolean}
 * @example
 *
 *      // pred :: Object -> Boolean
 *      var pred = R.where({
 *        a: R.equals('foo'),
 *        b: R.complement(R.equals('bar')),
 *        x: R.gt(R.__, 10),
 *        y: R.lt(R.__, 20)
 *      });
 *
 *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true
 *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false
 *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false
 *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false
 *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false
 */module.exports=_curry2(function where(spec,testObj){for(var prop in spec){if(_has(prop,spec)&&!spec[prop](testObj[prop])){return false;}}return true;});

/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* tslint:disable:no-unused-variable */// Subject imported before Observable to bypass circular dependency issue since
// Subject extends Observable and Observable references Subject in it's
// definition
var Subject_1=__webpack_require__(10);exports.Subject=Subject_1.Subject;exports.AnonymousSubject=Subject_1.AnonymousSubject;/* tslint:enable:no-unused-variable */var Observable_1=__webpack_require__(0);exports.Observable=Observable_1.Observable;// statics
/* tslint:disable:no-use-before-declare */__webpack_require__(392);__webpack_require__(395);__webpack_require__(398);__webpack_require__(401);__webpack_require__(403);__webpack_require__(406);__webpack_require__(408);__webpack_require__(411);__webpack_require__(415);__webpack_require__(418);__webpack_require__(421);__webpack_require__(423);__webpack_require__(426);__webpack_require__(429);__webpack_require__(434);__webpack_require__(436);__webpack_require__(438);__webpack_require__(441);__webpack_require__(443);__webpack_require__(445);__webpack_require__(448);__webpack_require__(451);__webpack_require__(454);__webpack_require__(457);__webpack_require__(460);//dom
__webpack_require__(462);__webpack_require__(464);//operators
__webpack_require__(470);__webpack_require__(472);__webpack_require__(474);__webpack_require__(476);__webpack_require__(478);__webpack_require__(480);__webpack_require__(482);__webpack_require__(484);__webpack_require__(485);__webpack_require__(486);__webpack_require__(488);__webpack_require__(490);__webpack_require__(492);__webpack_require__(494);__webpack_require__(496);__webpack_require__(498);__webpack_require__(500);__webpack_require__(502);__webpack_require__(504);__webpack_require__(506);__webpack_require__(509);__webpack_require__(510);__webpack_require__(512);__webpack_require__(514);__webpack_require__(516);__webpack_require__(518);__webpack_require__(520);__webpack_require__(522);__webpack_require__(523);__webpack_require__(525);__webpack_require__(526);__webpack_require__(528);__webpack_require__(530);__webpack_require__(535);__webpack_require__(537);__webpack_require__(539);__webpack_require__(541);__webpack_require__(543);__webpack_require__(545);__webpack_require__(547);__webpack_require__(549);__webpack_require__(550);__webpack_require__(552);__webpack_require__(554);__webpack_require__(556);__webpack_require__(557);__webpack_require__(558);__webpack_require__(559);__webpack_require__(560);__webpack_require__(562);__webpack_require__(564);__webpack_require__(565);__webpack_require__(566);__webpack_require__(567);__webpack_require__(569);__webpack_require__(572);__webpack_require__(574);__webpack_require__(576);__webpack_require__(578);__webpack_require__(580);__webpack_require__(582);__webpack_require__(583);__webpack_require__(584);__webpack_require__(586);__webpack_require__(588);__webpack_require__(590);__webpack_require__(592);__webpack_require__(594);__webpack_require__(596);__webpack_require__(598);__webpack_require__(600);__webpack_require__(602);__webpack_require__(604);__webpack_require__(606);__webpack_require__(608);__webpack_require__(610);__webpack_require__(612);__webpack_require__(614);__webpack_require__(616);__webpack_require__(624);__webpack_require__(626);__webpack_require__(628);__webpack_require__(630);__webpack_require__(632);__webpack_require__(634);__webpack_require__(636);__webpack_require__(638);__webpack_require__(639);__webpack_require__(641);__webpack_require__(642);__webpack_require__(644);__webpack_require__(646);__webpack_require__(647);__webpack_require__(649);__webpack_require__(651);__webpack_require__(653);__webpack_require__(655);__webpack_require__(657);__webpack_require__(659);__webpack_require__(661);__webpack_require__(663);__webpack_require__(664);/* tslint:disable:no-unused-variable */var Subscription_1=__webpack_require__(9);exports.Subscription=Subscription_1.Subscription;var Subscriber_1=__webpack_require__(2);exports.Subscriber=Subscriber_1.Subscriber;var AsyncSubject_1=__webpack_require__(68);exports.AsyncSubject=AsyncSubject_1.AsyncSubject;var ReplaySubject_1=__webpack_require__(72);exports.ReplaySubject=ReplaySubject_1.ReplaySubject;var BehaviorSubject_1=__webpack_require__(179);exports.BehaviorSubject=BehaviorSubject_1.BehaviorSubject;var ConnectableObservable_1=__webpack_require__(178);exports.ConnectableObservable=ConnectableObservable_1.ConnectableObservable;var Notification_1=__webpack_require__(43);exports.Notification=Notification_1.Notification;var EmptyError_1=__webpack_require__(73);exports.EmptyError=EmptyError_1.EmptyError;var ArgumentOutOfRangeError_1=__webpack_require__(46);exports.ArgumentOutOfRangeError=ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;var ObjectUnsubscribedError_1=__webpack_require__(67);exports.ObjectUnsubscribedError=ObjectUnsubscribedError_1.ObjectUnsubscribedError;var TimeoutError_1=__webpack_require__(184);exports.TimeoutError=TimeoutError_1.TimeoutError;var UnsubscriptionError_1=__webpack_require__(160);exports.UnsubscriptionError=UnsubscriptionError_1.UnsubscriptionError;var timeInterval_1=__webpack_require__(183);exports.TimeInterval=timeInterval_1.TimeInterval;var timestamp_1=__webpack_require__(185);exports.Timestamp=timestamp_1.Timestamp;var TestScheduler_1=__webpack_require__(666);exports.TestScheduler=TestScheduler_1.TestScheduler;var VirtualTimeScheduler_1=__webpack_require__(189);exports.VirtualTimeScheduler=VirtualTimeScheduler_1.VirtualTimeScheduler;var AjaxObservable_1=__webpack_require__(171);exports.AjaxResponse=AjaxObservable_1.AjaxResponse;exports.AjaxError=AjaxObservable_1.AjaxError;exports.AjaxTimeoutError=AjaxObservable_1.AjaxTimeoutError;var asap_1=__webpack_require__(180);var async_1=__webpack_require__(16);var queue_1=__webpack_require__(172);var animationFrame_1=__webpack_require__(669);var rxSubscriber_1=__webpack_require__(65);var iterator_1=__webpack_require__(42);var observable_1=__webpack_require__(66);/* tslint:enable:no-unused-variable *//**
 * @typedef {Object} Rx.Scheduler
 * @property {Scheduler} queue Schedules on a queue in the current event frame
 * (trampoline scheduler). Use this for iteration operations.
 * @property {Scheduler} asap Schedules on the micro task queue, which uses the
 * fastest transport mechanism available, either Node.js' `process.nextTick()`
 * or Web Worker MessageChannel or setTimeout or others. Use this for
 * asynchronous conversions.
 * @property {Scheduler} async Schedules work with `setInterval`. Use this for
 * time-based operations.
 * @property {Scheduler} animationFrame Schedules work with `requestAnimationFrame`.
 * Use this for synchronizing with the platform's painting
 */var Scheduler={asap:asap_1.asap,queue:queue_1.queue,animationFrame:animationFrame_1.animationFrame,async:async_1.async};exports.Scheduler=Scheduler;/**
 * @typedef {Object} Rx.Symbol
 * @property {Symbol|string} rxSubscriber A symbol to use as a property name to
 * retrieve an "Rx safe" Observer from an object. "Rx safety" can be defined as
 * an object that has all of the traits of an Rx Subscriber, including the
 * ability to add and remove subscriptions to the subscription chain and
 * guarantees involving event triggering (can't "next" after unsubscription,
 * etc).
 * @property {Symbol|string} observable A symbol to use as a property name to
 * retrieve an Observable as defined by the [ECMAScript "Observable" spec](https://github.com/zenparsing/es-observable).
 * @property {Symbol|string} iterator The ES6 symbol to use as a property name
 * to retrieve an iterator from an object.
 */var _Symbol={rxSubscriber:rxSubscriber_1.rxSubscriber,observable:observable_1.observable,iterator:iterator_1.iterator};exports.Symbol=_Symbol;//# sourceMappingURL=Rx.js.map

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};function isObject(x){return x!=null&&(typeof x==="undefined"?"undefined":_typeof(x))==='object';}exports.isObject=isObject;//# sourceMappingURL=isObject.js.map

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};/**
 * An error thrown when one or more errors have occurred during the
 * `unsubscribe` of a {@link Subscription}.
 */var UnsubscriptionError=function(_super){__extends(UnsubscriptionError,_super);function UnsubscriptionError(errors){_super.call(this);this.errors=errors;var err=Error.call(this,errors?errors.length+" errors occurred during unsubscription:\n  "+errors.map(function(err,i){return i+1+") "+err.toString();}).join('\n  '):'');this.name=err.name='UnsubscriptionError';this.stack=err.stack;this.message=err.message;}return UnsubscriptionError;}(Error);exports.UnsubscriptionError=UnsubscriptionError;//# sourceMappingURL=UnsubscriptionError.js.map

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.empty={closed:true,next:function next(value){},error:function error(err){throw err;},complete:function complete(){}};//# sourceMappingURL=Observer.js.map

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscription_1=__webpack_require__(9);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SubjectSubscription=function(_super){__extends(SubjectSubscription,_super);function SubjectSubscription(subject,subscriber){_super.call(this);this.subject=subject;this.subscriber=subscriber;this.closed=false;}SubjectSubscription.prototype.unsubscribe=function(){if(this.closed){return;}this.closed=true;var subject=this.subject;var observers=subject.observers;this.subject=null;if(!observers||observers.length===0||subject.isStopped||subject.closed){return;}var subscriberIndex=observers.indexOf(this.subscriber);if(subscriberIndex!==-1){observers.splice(subscriberIndex,1);}};return SubjectSubscription;}(Subscription_1.Subscription);exports.SubjectSubscription=SubjectSubscription;//# sourceMappingURL=SubjectSubscription.js.map

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.isArrayLike=function(x){return x&&typeof x.length==='number';};//# sourceMappingURL=isArrayLike.js.map

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function isPromise(value){return value&&typeof value.subscribe!=='function'&&typeof value.then==='function';}exports.isPromise=isPromise;//# sourceMappingURL=isPromise.js.map

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var isArray_1=__webpack_require__(24);var isArrayLike_1=__webpack_require__(163);var isPromise_1=__webpack_require__(164);var PromiseObservable_1=__webpack_require__(166);var IteratorObservable_1=__webpack_require__(413);var ArrayObservable_1=__webpack_require__(26);var ArrayLikeObservable_1=__webpack_require__(414);var iterator_1=__webpack_require__(42);var Observable_1=__webpack_require__(0);var observeOn_1=__webpack_require__(98);var observable_1=__webpack_require__(66);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var FromObservable=function(_super){__extends(FromObservable,_super);function FromObservable(ish,scheduler){_super.call(this,null);this.ish=ish;this.scheduler=scheduler;}/**
     * Creates an Observable from an Array, an array-like object, a Promise, an
     * iterable object, or an Observable-like object.
     *
     * <span class="informal">Converts almost anything to an Observable.</span>
     *
     * <img src="./img/from.png" width="100%">
     *
     * Convert various other objects and data types into Observables. `from`
     * converts a Promise or an array-like or an
     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)
     * object into an Observable that emits the items in that promise or array or
     * iterable. A String, in this context, is treated as an array of characters.
     * Observable-like objects (contains a function named with the ES2015 Symbol
     * for Observable) can also be converted through this operator.
     *
     * @example <caption>Converts an array to an Observable</caption>
     * var array = [10, 20, 30];
     * var result = Rx.Observable.from(array);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 10 20 30
     *
     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>
     * function* generateDoubles(seed) {
     *   var i = seed;
     *   while (true) {
     *     yield i;
     *     i = 2 * i; // double it
     *   }
     * }
     *
     * var iterator = generateDoubles(3);
     * var result = Rx.Observable.from(iterator).take(10);
     * result.subscribe(x => console.log(x));
     *
     * // Results in the following:
     * // 3 6 12 24 48 96 192 384 768 1536
     *
     * @see {@link create}
     * @see {@link fromEvent}
     * @see {@link fromEventPattern}
     * @see {@link fromPromise}
     *
     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an
     * Observable-like, an Array, an iterable or an array-like object to be
     * converted.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * emissions of values.
     * @return {Observable<T>} The Observable whose values are originally from the
     * input object that was converted.
     * @static true
     * @name from
     * @owner Observable
     */FromObservable.create=function(ish,scheduler){if(ish!=null){if(typeof ish[observable_1.observable]==='function'){if(ish instanceof Observable_1.Observable&&!scheduler){return ish;}return new FromObservable(ish,scheduler);}else if(isArray_1.isArray(ish)){return new ArrayObservable_1.ArrayObservable(ish,scheduler);}else if(isPromise_1.isPromise(ish)){return new PromiseObservable_1.PromiseObservable(ish,scheduler);}else if(typeof ish[iterator_1.iterator]==='function'||typeof ish==='string'){return new IteratorObservable_1.IteratorObservable(ish,scheduler);}else if(isArrayLike_1.isArrayLike(ish)){return new ArrayLikeObservable_1.ArrayLikeObservable(ish,scheduler);}}throw new TypeError((ish!==null&&(typeof ish==='undefined'?'undefined':_typeof(ish))||ish)+' is not observable');};FromObservable.prototype._subscribe=function(subscriber){var ish=this.ish;var scheduler=this.scheduler;if(scheduler==null){return ish[observable_1.observable]().subscribe(subscriber);}else{return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber,scheduler,0));}};return FromObservable;}(Observable_1.Observable);exports.FromObservable=FromObservable;//# sourceMappingURL=FromObservable.js.map

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var root_1=__webpack_require__(12);var Observable_1=__webpack_require__(0);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var PromiseObservable=function(_super){__extends(PromiseObservable,_super);function PromiseObservable(promise,scheduler){_super.call(this);this.promise=promise;this.scheduler=scheduler;}/**
     * Converts a Promise to an Observable.
     *
     * <span class="informal">Returns an Observable that just emits the Promise's
     * resolved value, then completes.</span>
     *
     * Converts an ES2015 Promise or a Promises/A+ spec compliant Promise to an
     * Observable. If the Promise resolves with a value, the output Observable
     * emits that resolved value as a `next`, and then completes. If the Promise
     * is rejected, then the output Observable emits the corresponding Error.
     *
     * @example <caption>Convert the Promise returned by Fetch to an Observable</caption>
     * var result = Rx.Observable.fromPromise(fetch('http://myserver.com/'));
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link bindCallback}
     * @see {@link from}
     *
     * @param {PromiseLike<T>} promise The promise to be converted.
     * @param {Scheduler} [scheduler] An optional IScheduler to use for scheduling
     * the delivery of the resolved value (or the rejection).
     * @return {Observable<T>} An Observable which wraps the Promise.
     * @static true
     * @name fromPromise
     * @owner Observable
     */PromiseObservable.create=function(promise,scheduler){return new PromiseObservable(promise,scheduler);};PromiseObservable.prototype._subscribe=function(subscriber){var _this=this;var promise=this.promise;var scheduler=this.scheduler;if(scheduler==null){if(this._isScalar){if(!subscriber.closed){subscriber.next(this.value);subscriber.complete();}}else{promise.then(function(value){_this.value=value;_this._isScalar=true;if(!subscriber.closed){subscriber.next(value);subscriber.complete();}},function(err){if(!subscriber.closed){subscriber.error(err);}}).then(null,function(err){// escape the promise trap, throw unhandled errors
root_1.root.setTimeout(function(){throw err;});});}}else{if(this._isScalar){if(!subscriber.closed){return scheduler.schedule(dispatchNext,0,{value:this.value,subscriber:subscriber});}}else{promise.then(function(value){_this.value=value;_this._isScalar=true;if(!subscriber.closed){subscriber.add(scheduler.schedule(dispatchNext,0,{value:value,subscriber:subscriber}));}},function(err){if(!subscriber.closed){subscriber.add(scheduler.schedule(dispatchError,0,{err:err,subscriber:subscriber}));}}).then(null,function(err){// escape the promise trap, throw unhandled errors
root_1.root.setTimeout(function(){throw err;});});}}};return PromiseObservable;}(Observable_1.Observable);exports.PromiseObservable=PromiseObservable;function dispatchNext(arg){var value=arg.value,subscriber=arg.subscriber;if(!subscriber.closed){subscriber.next(value);subscriber.complete();}}function dispatchError(arg){var err=arg.err,subscriber=arg.subscriber;if(!subscriber.closed){subscriber.error(err);}}//# sourceMappingURL=PromiseObservable.js.map

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var ArrayObservable_1=__webpack_require__(26);var mergeAll_1=__webpack_require__(69);var isScheduler_1=__webpack_require__(25);/* tslint:enable:max-line-length *//**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (either the source or an
 * Observable given as argument), and simply forwards (without doing any
 * transformation) all the values from all the input Observables to the output
 * Observable. The output Observable only completes once all input Observables
 * have completed. Any error delivered by an input Observable will be immediately
 * emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = clicks.merge(timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = timer1.merge(timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {ObservableInput} other An input Observable to merge with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} An Observable that emits items that are the result of
 * every input Observable.
 * @method merge
 * @owner Observable
 */function merge(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}return this.lift.call(mergeStatic.apply(void 0,[this].concat(observables)));}exports.merge=merge;/* tslint:enable:max-line-length *//**
 * Creates an output Observable which concurrently emits all values from every
 * given input Observable.
 *
 * <span class="informal">Flattens multiple Observables together by blending
 * their values into one Observable.</span>
 *
 * <img src="./img/merge.png" width="100%">
 *
 * `merge` subscribes to each given input Observable (as arguments), and simply
 * forwards (without doing any transformation) all the values from all the input
 * Observables to the output Observable. The output Observable only completes
 * once all input Observables have completed. Any error delivered by an input
 * Observable will be immediately emitted on the output Observable.
 *
 * @example <caption>Merge together two Observables: 1s interval and clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var clicksOrTimer = Rx.Observable.merge(clicks, timer);
 * clicksOrTimer.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // timer will emit ascending values, one every second(1000ms) to console
 * // clicks logs MouseEvents to console everytime the "document" is clicked
 * // Since the two streams are merged you see these happening
 * // as they occur.
 *
 * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>
 * var timer1 = Rx.Observable.interval(1000).take(10);
 * var timer2 = Rx.Observable.interval(2000).take(6);
 * var timer3 = Rx.Observable.interval(500).take(10);
 * var concurrent = 2; // the argument
 * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);
 * merged.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - First timer1 and timer2 will run concurrently
 * // - timer1 will emit a value every 1000ms for 10 iterations
 * // - timer2 will emit a value every 2000ms for 6 iterations
 * // - after timer1 hits it's max iteration, timer2 will
 * //   continue, and timer3 will start to run concurrently with timer2
 * // - when timer2 hits it's max iteration it terminates, and
 * //   timer3 will continue to emit a value every 500ms until it is complete
 *
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 *
 * @param {...ObservableInput} observables Input Observables to merge together.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for managing
 * concurrency of input Observables.
 * @return {Observable} an Observable that emits items that are the result of
 * every input Observable.
 * @static true
 * @name merge
 * @owner Observable
 */function mergeStatic(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}var concurrent=Number.POSITIVE_INFINITY;var scheduler=null;var last=observables[observables.length-1];if(isScheduler_1.isScheduler(last)){scheduler=observables.pop();if(observables.length>1&&typeof observables[observables.length-1]==='number'){concurrent=observables.pop();}}else if(typeof last==='number'){concurrent=observables.pop();}if(scheduler===null&&observables.length===1&&observables[0]instanceof Observable_1.Observable){return observables[0];}return new ArrayObservable_1.ArrayObservable(observables,scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));}exports.mergeStatic=mergeStatic;//# sourceMappingURL=merge.js.map

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var isArray_1=__webpack_require__(24);var ArrayObservable_1=__webpack_require__(26);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * Returns an Observable that mirrors the first source Observable to emit an item
 * from the combination of this Observable and supplied Observables.
 * @param {...Observables} ...observables Sources used to race for which Observable emits first.
 * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.
 * @method race
 * @owner Observable
 */function race(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}// if the only argument is an array, it was most likely called with
// `pair([obs1, obs2, ...])`
if(observables.length===1&&isArray_1.isArray(observables[0])){observables=observables[0];}return this.lift.call(raceStatic.apply(void 0,[this].concat(observables)));}exports.race=race;function raceStatic(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}// if the only argument is an array, it was most likely called with
// `race([obs1, obs2, ...])`
if(observables.length===1){if(isArray_1.isArray(observables[0])){observables=observables[0];}else{return observables[0];}}return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());}exports.raceStatic=raceStatic;var RaceOperator=function(){function RaceOperator(){}RaceOperator.prototype.call=function(subscriber,source){return source.subscribe(new RaceSubscriber(subscriber));};return RaceOperator;}();exports.RaceOperator=RaceOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var RaceSubscriber=function(_super){__extends(RaceSubscriber,_super);function RaceSubscriber(destination){_super.call(this,destination);this.hasFirst=false;this.observables=[];this.subscriptions=[];}RaceSubscriber.prototype._next=function(observable){this.observables.push(observable);};RaceSubscriber.prototype._complete=function(){var observables=this.observables;var len=observables.length;if(len===0){this.destination.complete();}else{for(var i=0;i<len&&!this.hasFirst;i++){var observable=observables[i];var subscription=subscribeToResult_1.subscribeToResult(this,observable,observable,i);if(this.subscriptions){this.subscriptions.push(subscription);}this.add(subscription);}this.observables=null;}};RaceSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(!this.hasFirst){this.hasFirst=true;for(var i=0;i<this.subscriptions.length;i++){if(i!==outerIndex){var subscription=this.subscriptions[i];subscription.unsubscribe();this.remove(subscription);}}this.subscriptions=null;}this.destination.next(innerValue);};return RaceSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.RaceSubscriber=RaceSubscriber;//# sourceMappingURL=race.js.map

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* tslint:disable:no-empty */function noop(){}exports.noop=noop;//# sourceMappingURL=noop.js.map

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var FromObservable_1=__webpack_require__(165);var isArray_1=__webpack_require__(24);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one
 * that was passed.
 *
 * <span class="informal">Execute series of Observables no matter what, even if it means swallowing errors.</span>
 *
 * <img src="./img/onErrorResumeNext.png" width="100%">
 *
 * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as
 * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same
 * as the source.
 *
 * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.
 * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`
 * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting
 * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another
 * Observable in provided series, no matter if previous Observable completed or ended with an error. This will
 * be happening until there is no more Observables left in the series, at which point returned Observable will
 * complete - even if the last subscribed stream ended with an error.
 *
 * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive
 * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable
 * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with
 * an error.
 *
 * Note that you do not get any access to errors emitted by the Observables. In particular do not
 * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take
 * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.
 *
 *
 * @example <caption>Subscribe to the next Observable after map fails</caption>
 * Rx.Observable.of(1, 2, 3, 0)
 *   .map(x => {
 *       if (x === 0) { throw Error(); }
         return 10 / x;
 *   })
 *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))
 *   .subscribe(
 *     val => console.log(val),
 *     err => console.log(err),          // Will never be called.
 *     () => console.log('that\'s it!')
 *   );
 *
 * // Logs:
 * // 10
 * // 5
 * // 3.3333333333333335
 * // 1
 * // 2
 * // 3
 * // "that's it!"
 *
 * @see {@link concat}
 * @see {@link catch}
 *
 * @param {...ObservableInput} observables Observables passed either directly or as an array.
 * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes
 * to the next passed Observable and so on, until it completes or runs out of Observables.
 * @method onErrorResumeNext
 * @owner Observable
 */function onErrorResumeNext(){var nextSources=[];for(var _i=0;_i<arguments.length;_i++){nextSources[_i-0]=arguments[_i];}if(nextSources.length===1&&isArray_1.isArray(nextSources[0])){nextSources=nextSources[0];}return this.lift(new OnErrorResumeNextOperator(nextSources));}exports.onErrorResumeNext=onErrorResumeNext;/* tslint:enable:max-line-length */function onErrorResumeNextStatic(){var nextSources=[];for(var _i=0;_i<arguments.length;_i++){nextSources[_i-0]=arguments[_i];}var source=null;if(nextSources.length===1&&isArray_1.isArray(nextSources[0])){nextSources=nextSources[0];}source=nextSources.shift();return new FromObservable_1.FromObservable(source,null).lift(new OnErrorResumeNextOperator(nextSources));}exports.onErrorResumeNextStatic=onErrorResumeNextStatic;var OnErrorResumeNextOperator=function(){function OnErrorResumeNextOperator(nextSources){this.nextSources=nextSources;}OnErrorResumeNextOperator.prototype.call=function(subscriber,source){return source.subscribe(new OnErrorResumeNextSubscriber(subscriber,this.nextSources));};return OnErrorResumeNextOperator;}();var OnErrorResumeNextSubscriber=function(_super){__extends(OnErrorResumeNextSubscriber,_super);function OnErrorResumeNextSubscriber(destination,nextSources){_super.call(this,destination);this.destination=destination;this.nextSources=nextSources;}OnErrorResumeNextSubscriber.prototype.notifyError=function(error,innerSub){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype.notifyComplete=function(innerSub){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype._error=function(err){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype._complete=function(){this.subscribeToNextSource();};OnErrorResumeNextSubscriber.prototype.subscribeToNextSource=function(){var next=this.nextSources.shift();if(next){this.add(subscribeToResult_1.subscribeToResult(this,next));}else{this.destination.complete();}};return OnErrorResumeNextSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var root_1=__webpack_require__(12);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var Observable_1=__webpack_require__(0);var Subscriber_1=__webpack_require__(2);var map_1=__webpack_require__(100);function getCORSRequest(){if(root_1.root.XMLHttpRequest){return new root_1.root.XMLHttpRequest();}else if(!!root_1.root.XDomainRequest){return new root_1.root.XDomainRequest();}else{throw new Error('CORS is not supported by your browser');}}function getXMLHttpRequest(){if(root_1.root.XMLHttpRequest){return new root_1.root.XMLHttpRequest();}else{var progId=void 0;try{var progIds=['Msxml2.XMLHTTP','Microsoft.XMLHTTP','Msxml2.XMLHTTP.4.0'];for(var i=0;i<3;i++){try{progId=progIds[i];if(new root_1.root.ActiveXObject(progId)){break;}}catch(e){}}return new root_1.root.ActiveXObject(progId);}catch(e){throw new Error('XMLHttpRequest is not supported by your browser');}}}function ajaxGet(url,headers){if(headers===void 0){headers=null;}return new AjaxObservable({method:'GET',url:url,headers:headers});}exports.ajaxGet=ajaxGet;;function ajaxPost(url,body,headers){return new AjaxObservable({method:'POST',url:url,body:body,headers:headers});}exports.ajaxPost=ajaxPost;;function ajaxDelete(url,headers){return new AjaxObservable({method:'DELETE',url:url,headers:headers});}exports.ajaxDelete=ajaxDelete;;function ajaxPut(url,body,headers){return new AjaxObservable({method:'PUT',url:url,body:body,headers:headers});}exports.ajaxPut=ajaxPut;;function ajaxPatch(url,body,headers){return new AjaxObservable({method:'PATCH',url:url,body:body,headers:headers});}exports.ajaxPatch=ajaxPatch;;function ajaxGetJSON(url,headers){return new AjaxObservable({method:'GET',url:url,responseType:'json',headers:headers}).lift(new map_1.MapOperator(function(x,index){return x.response;},null));}exports.ajaxGetJSON=ajaxGetJSON;;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var AjaxObservable=function(_super){__extends(AjaxObservable,_super);function AjaxObservable(urlOrRequest){_super.call(this);var request={async:true,createXHR:function createXHR(){return this.crossDomain?getCORSRequest.call(this):getXMLHttpRequest();},crossDomain:false,withCredentials:false,headers:{},method:'GET',responseType:'json',timeout:0};if(typeof urlOrRequest==='string'){request.url=urlOrRequest;}else{for(var prop in urlOrRequest){if(urlOrRequest.hasOwnProperty(prop)){request[prop]=urlOrRequest[prop];}}}this.request=request;}AjaxObservable.prototype._subscribe=function(subscriber){return new AjaxSubscriber(subscriber,this.request);};/**
     * Creates an observable for an Ajax request with either a request object with
     * url, headers, etc or a string for a URL.
     *
     * @example
     * source = Rx.Observable.ajax('/products');
     * source = Rx.Observable.ajax({ url: 'products', method: 'GET' });
     *
     * @param {string|Object} request Can be one of the following:
     *   A string of the URL to make the Ajax call.
     *   An object with the following properties
     *   - url: URL of the request
     *   - body: The body of the request
     *   - method: Method of the request, such as GET, POST, PUT, PATCH, DELETE
     *   - async: Whether the request is async
     *   - headers: Optional headers
     *   - crossDomain: true if a cross domain request, else false
     *   - createXHR: a function to override if you need to use an alternate
     *   XMLHttpRequest implementation.
     *   - resultSelector: a function to use to alter the output value type of
     *   the Observable. Gets {@link AjaxResponse} as an argument.
     * @return {Observable} An observable sequence containing the XMLHttpRequest.
     * @static true
     * @name ajax
     * @owner Observable
    */AjaxObservable.create=function(){var create=function create(urlOrRequest){return new AjaxObservable(urlOrRequest);};create.get=ajaxGet;create.post=ajaxPost;create.delete=ajaxDelete;create.put=ajaxPut;create.patch=ajaxPatch;create.getJSON=ajaxGetJSON;return create;}();return AjaxObservable;}(Observable_1.Observable);exports.AjaxObservable=AjaxObservable;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var AjaxSubscriber=function(_super){__extends(AjaxSubscriber,_super);function AjaxSubscriber(destination,request){_super.call(this,destination);this.request=request;this.done=false;var headers=request.headers=request.headers||{};// force CORS if requested
if(!request.crossDomain&&!headers['X-Requested-With']){headers['X-Requested-With']='XMLHttpRequest';}// ensure content type is set
if(!('Content-Type'in headers)&&!(root_1.root.FormData&&request.body instanceof root_1.root.FormData)&&typeof request.body!=='undefined'){headers['Content-Type']='application/x-www-form-urlencoded; charset=UTF-8';}// properly serialize body
request.body=this.serializeBody(request.body,request.headers['Content-Type']);this.send();}AjaxSubscriber.prototype.next=function(e){this.done=true;var _a=this,xhr=_a.xhr,request=_a.request,destination=_a.destination;var response=new AjaxResponse(e,xhr,request);destination.next(response);};AjaxSubscriber.prototype.send=function(){var _a=this,request=_a.request,_b=_a.request,user=_b.user,method=_b.method,url=_b.url,async=_b.async,password=_b.password,headers=_b.headers,body=_b.body;var createXHR=request.createXHR;var xhr=tryCatch_1.tryCatch(createXHR).call(request);if(xhr===errorObject_1.errorObject){this.error(errorObject_1.errorObject.e);}else{this.xhr=xhr;// set up the events before open XHR
// https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest
// You need to add the event listeners before calling open() on the request.
// Otherwise the progress events will not fire.
this.setupEvents(xhr,request);// open XHR
var result=void 0;if(user){result=tryCatch_1.tryCatch(xhr.open).call(xhr,method,url,async,user,password);}else{result=tryCatch_1.tryCatch(xhr.open).call(xhr,method,url,async);}if(result===errorObject_1.errorObject){this.error(errorObject_1.errorObject.e);return null;}// timeout, responseType and withCredentials can be set once the XHR is open
if(async){xhr.timeout=request.timeout;xhr.responseType=request.responseType;}if('withCredentials'in xhr){xhr.withCredentials=!!request.withCredentials;}// set headers
this.setHeaders(xhr,headers);// finally send the request
result=body?tryCatch_1.tryCatch(xhr.send).call(xhr,body):tryCatch_1.tryCatch(xhr.send).call(xhr);if(result===errorObject_1.errorObject){this.error(errorObject_1.errorObject.e);return null;}}return xhr;};AjaxSubscriber.prototype.serializeBody=function(body,contentType){if(!body||typeof body==='string'){return body;}else if(root_1.root.FormData&&body instanceof root_1.root.FormData){return body;}if(contentType){var splitIndex=contentType.indexOf(';');if(splitIndex!==-1){contentType=contentType.substring(0,splitIndex);}}switch(contentType){case'application/x-www-form-urlencoded':return Object.keys(body).map(function(key){return encodeURI(key)+"="+encodeURI(body[key]);}).join('&');case'application/json':return JSON.stringify(body);default:return body;}};AjaxSubscriber.prototype.setHeaders=function(xhr,headers){for(var key in headers){if(headers.hasOwnProperty(key)){xhr.setRequestHeader(key,headers[key]);}}};AjaxSubscriber.prototype.setupEvents=function(xhr,request){var progressSubscriber=request.progressSubscriber;function xhrTimeout(e){var _a=xhrTimeout,subscriber=_a.subscriber,progressSubscriber=_a.progressSubscriber,request=_a.request;if(progressSubscriber){progressSubscriber.error(e);}subscriber.error(new AjaxTimeoutError(this,request));//TODO: Make betterer.
};xhr.ontimeout=xhrTimeout;xhrTimeout.request=request;xhrTimeout.subscriber=this;xhrTimeout.progressSubscriber=progressSubscriber;if(xhr.upload&&'withCredentials'in xhr){if(progressSubscriber){var _xhrProgress_;_xhrProgress_=function xhrProgress_1(e){var progressSubscriber=_xhrProgress_.progressSubscriber;progressSubscriber.next(e);};if(root_1.root.XDomainRequest){xhr.onprogress=_xhrProgress_;}else{xhr.upload.onprogress=_xhrProgress_;}_xhrProgress_.progressSubscriber=progressSubscriber;}var _xhrError_;_xhrError_=function xhrError_1(e){var _a=_xhrError_,progressSubscriber=_a.progressSubscriber,subscriber=_a.subscriber,request=_a.request;if(progressSubscriber){progressSubscriber.error(e);}subscriber.error(new AjaxError('ajax error',this,request));};xhr.onerror=_xhrError_;_xhrError_.request=request;_xhrError_.subscriber=this;_xhrError_.progressSubscriber=progressSubscriber;}function xhrReadyStateChange(e){var _a=xhrReadyStateChange,subscriber=_a.subscriber,progressSubscriber=_a.progressSubscriber,request=_a.request;if(this.readyState===4){// normalize IE9 bug (http://bugs.jquery.com/ticket/1450)
var status_1=this.status===1223?204:this.status;var response=this.responseType==='text'?this.response||this.responseText:this.response;// fix status code when it is 0 (0 status is undocumented).
// Occurs when accessing file resources or on Android 4.1 stock browser
// while retrieving files from application cache.
if(status_1===0){status_1=response?200:0;}if(200<=status_1&&status_1<300){if(progressSubscriber){progressSubscriber.complete();}subscriber.next(e);subscriber.complete();}else{if(progressSubscriber){progressSubscriber.error(e);}subscriber.error(new AjaxError('ajax error '+status_1,this,request));}}};xhr.onreadystatechange=xhrReadyStateChange;xhrReadyStateChange.subscriber=this;xhrReadyStateChange.progressSubscriber=progressSubscriber;xhrReadyStateChange.request=request;};AjaxSubscriber.prototype.unsubscribe=function(){var _a=this,done=_a.done,xhr=_a.xhr;if(!done&&xhr&&xhr.readyState!==4&&typeof xhr.abort==='function'){xhr.abort();}_super.prototype.unsubscribe.call(this);};return AjaxSubscriber;}(Subscriber_1.Subscriber);exports.AjaxSubscriber=AjaxSubscriber;/**
 * A normalized AJAX response.
 *
 * @see {@link ajax}
 *
 * @class AjaxResponse
 */var AjaxResponse=function(){function AjaxResponse(originalEvent,xhr,request){this.originalEvent=originalEvent;this.xhr=xhr;this.request=request;this.status=xhr.status;this.responseType=xhr.responseType||request.responseType;switch(this.responseType){case'json':if('response'in xhr){//IE does not support json as responseType, parse it internally
this.response=xhr.responseType?xhr.response:JSON.parse(xhr.response||xhr.responseText||'null');}else{this.response=JSON.parse(xhr.responseText||'null');}break;case'xml':this.response=xhr.responseXML;break;case'text':default:this.response='response'in xhr?xhr.response:xhr.responseText;break;}}return AjaxResponse;}();exports.AjaxResponse=AjaxResponse;/**
 * A normalized AJAX error.
 *
 * @see {@link ajax}
 *
 * @class AjaxError
 */var AjaxError=function(_super){__extends(AjaxError,_super);function AjaxError(message,xhr,request){_super.call(this,message);this.message=message;this.xhr=xhr;this.request=request;this.status=xhr.status;}return AjaxError;}(Error);exports.AjaxError=AjaxError;/**
 * @see {@link ajax}
 *
 * @class AjaxTimeoutError
 */var AjaxTimeoutError=function(_super){__extends(AjaxTimeoutError,_super);function AjaxTimeoutError(xhr,request){_super.call(this,'ajax timeout',xhr,request);}return AjaxTimeoutError;}(AjaxError);exports.AjaxTimeoutError=AjaxTimeoutError;//# sourceMappingURL=AjaxObservable.js.map

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var QueueAction_1=__webpack_require__(467);var QueueScheduler_1=__webpack_require__(468);/**
 *
 * Queue Scheduler
 *
 * <span class="informal">Put every next task on a queue, instead of executing it immediately</span>
 *
 * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.
 *
 * When used without delay, it schedules given task synchronously - executes it right when
 * it is scheduled. However when called recursively, that is when inside the scheduled task,
 * another task is scheduled with queue scheduler, instead of executing immediately as well,
 * that task will be put on a queue and wait for current one to finish.
 *
 * This means that when you execute task with `queue` scheduler, you are sure it will end
 * before any other task scheduled with that scheduler will start.
 *
 * @examples <caption>Schedule recursively first, then do something</caption>
 *
 * Rx.Scheduler.queue.schedule(() => {
 *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue
 *
 *   console.log('first');
 * });
 *
 * // Logs:
 * // "first"
 * // "second"
 *
 *
 * @example <caption>Reschedule itself recursively</caption>
 *
 * Rx.Scheduler.queue.schedule(function(state) {
 *   if (state !== 0) {
 *     console.log('before', state);
 *     this.schedule(state - 1); // `this` references currently executing Action,
 *                               // which we reschedule with new state
 *     console.log('after', state);
 *   }
 * }, 0, 3);
 *
 * // In scheduler that runs recursively, you would expect:
 * // "before", 3
 * // "before", 2
 * // "before", 1
 * // "after", 1
 * // "after", 2
 * // "after", 3
 *
 * // But with queue it logs:
 * // "before", 3
 * // "after", 3
 * // "before", 2
 * // "after", 2
 * // "before", 1
 * // "after", 1
 *
 *
 * @static true
 * @name queue
 * @owner Scheduler
 */exports.queue=new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);//# sourceMappingURL=queue.js.map

/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var subscribeToResult_1=__webpack_require__(6);var OuterSubscriber_1=__webpack_require__(5);/* tslint:enable:max-line-length *//**
 * Projects each source value to an Observable which is merged in the output
 * Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link mergeAll}.</span>
 *
 * <img src="./img/mergeMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger.
 *
 * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>
 * var letters = Rx.Observable.of('a', 'b', 'c');
 * var result = letters.mergeMap(x =>
 *   Rx.Observable.interval(1000).map(i => x+i)
 * );
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // a0
 * // b0
 * // c0
 * // a1
 * // b1
 * // c1
 * // continues to list a,b,c with respective ascending integers
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMapTo}
 * @see {@link mergeScan}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and merging the results of the Observables obtained
 * from this transformation.
 * @method mergeMap
 * @owner Observable
 */function mergeMap(project,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(typeof resultSelector==='number'){concurrent=resultSelector;resultSelector=null;}return this.lift(new MergeMapOperator(project,resultSelector,concurrent));}exports.mergeMap=mergeMap;var MergeMapOperator=function(){function MergeMapOperator(project,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}this.project=project;this.resultSelector=resultSelector;this.concurrent=concurrent;}MergeMapOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapSubscriber(observer,this.project,this.resultSelector,this.concurrent));};return MergeMapOperator;}();exports.MergeMapOperator=MergeMapOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var MergeMapSubscriber=function(_super){__extends(MergeMapSubscriber,_super);function MergeMapSubscriber(destination,project,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}_super.call(this,destination);this.project=project;this.resultSelector=resultSelector;this.concurrent=concurrent;this.hasCompleted=false;this.buffer=[];this.active=0;this.index=0;}MergeMapSubscriber.prototype._next=function(value){if(this.active<this.concurrent){this._tryNext(value);}else{this.buffer.push(value);}};MergeMapSubscriber.prototype._tryNext=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(err){this.destination.error(err);return;}this.active++;this._innerSub(result,value,index);};MergeMapSubscriber.prototype._innerSub=function(ish,value,index){this.add(subscribeToResult_1.subscribeToResult(this,ish,value,index));};MergeMapSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){this.destination.complete();}};MergeMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(this.resultSelector){this._notifyResultSelector(outerValue,innerValue,outerIndex,innerIndex);}else{this.destination.next(innerValue);}};MergeMapSubscriber.prototype._notifyResultSelector=function(outerValue,innerValue,outerIndex,innerIndex){var result;try{result=this.resultSelector(outerValue,innerValue,outerIndex,innerIndex);}catch(err){this.destination.error(err);return;}this.destination.next(result);};MergeMapSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub);this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){this.destination.complete();}};return MergeMapSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.MergeMapSubscriber=MergeMapSubscriber;//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * Projects each source value to the same Observable which is merged multiple
 * times in the output Observable.
 *
 * <span class="informal">It's like {@link mergeMap}, but maps each value always
 * to the same inner Observable.</span>
 *
 * <img src="./img/mergeMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then merges those resulting Observables into one
 * single Observable, which is the output Observable.
 *
 * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link merge}
 * @see {@link mergeAll}
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable.
 * @method mergeMapTo
 * @owner Observable
 */function mergeMapTo(innerObservable,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(typeof resultSelector==='number'){concurrent=resultSelector;resultSelector=null;}return this.lift(new MergeMapToOperator(innerObservable,resultSelector,concurrent));}exports.mergeMapTo=mergeMapTo;// TODO: Figure out correct signature here: an Operator<Observable<T>, R>
//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>
var MergeMapToOperator=function(){function MergeMapToOperator(ish,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}this.ish=ish;this.resultSelector=resultSelector;this.concurrent=concurrent;}MergeMapToOperator.prototype.call=function(observer,source){return source.subscribe(new MergeMapToSubscriber(observer,this.ish,this.resultSelector,this.concurrent));};return MergeMapToOperator;}();exports.MergeMapToOperator=MergeMapToOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var MergeMapToSubscriber=function(_super){__extends(MergeMapToSubscriber,_super);function MergeMapToSubscriber(destination,ish,resultSelector,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}_super.call(this,destination);this.ish=ish;this.resultSelector=resultSelector;this.concurrent=concurrent;this.hasCompleted=false;this.buffer=[];this.active=0;this.index=0;}MergeMapToSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var resultSelector=this.resultSelector;var index=this.index++;var ish=this.ish;var destination=this.destination;this.active++;this._innerSub(ish,destination,resultSelector,value,index);}else{this.buffer.push(value);}};MergeMapToSubscriber.prototype._innerSub=function(ish,destination,resultSelector,value,index){this.add(subscribeToResult_1.subscribeToResult(this,ish,value,index));};MergeMapToSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){this.destination.complete();}};MergeMapToSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;if(resultSelector){this.trySelectResult(outerValue,innerValue,outerIndex,innerIndex);}else{destination.next(innerValue);}};MergeMapToSubscriber.prototype.trySelectResult=function(outerValue,innerValue,outerIndex,innerIndex){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;var result;try{result=resultSelector(outerValue,innerValue,outerIndex,innerIndex);}catch(err){destination.error(err);return;}destination.next(result);};MergeMapToSubscriber.prototype.notifyError=function(err){this.destination.error(err);};MergeMapToSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub);this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){this.destination.complete();}};return MergeMapToSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.MergeMapToSubscriber=MergeMapToSubscriber;//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);/* tslint:enable:max-line-length *//**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)
 *   .distinctUntilChanged()
 *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4
 *
 * @example <caption>An example using a compare function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinctUntilChanged
 * @owner Observable
 */function distinctUntilChanged(compare,keySelector){return this.lift(new DistinctUntilChangedOperator(compare,keySelector));}exports.distinctUntilChanged=distinctUntilChanged;var DistinctUntilChangedOperator=function(){function DistinctUntilChangedOperator(compare,keySelector){this.compare=compare;this.keySelector=keySelector;}DistinctUntilChangedOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctUntilChangedSubscriber(subscriber,this.compare,this.keySelector));};return DistinctUntilChangedOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DistinctUntilChangedSubscriber=function(_super){__extends(DistinctUntilChangedSubscriber,_super);function DistinctUntilChangedSubscriber(destination,compare,keySelector){_super.call(this,destination);this.keySelector=keySelector;this.hasKey=false;if(typeof compare==='function'){this.compare=compare;}}DistinctUntilChangedSubscriber.prototype.compare=function(x,y){return x===y;};DistinctUntilChangedSubscriber.prototype._next=function(value){var keySelector=this.keySelector;var key=value;if(keySelector){key=tryCatch_1.tryCatch(this.keySelector)(value);if(key===errorObject_1.errorObject){return this.destination.error(errorObject_1.errorObject.e);}}var result=false;if(this.hasKey){result=tryCatch_1.tryCatch(this.compare)(this.key,key);if(result===errorObject_1.errorObject){return this.destination.error(errorObject_1.errorObject.e);}}else{this.hasKey=true;}if(Boolean(result)===false){this.key=key;this.destination.next(value);}};return DistinctUntilChangedSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/* tslint:enable:max-line-length *//**
 * Filter items emitted by the source Observable by only emitting those that
 * satisfy a specified predicate.
 *
 * <span class="informal">Like
 * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),
 * it only emits a value from the source if it passes a criterion function.</span>
 *
 * <img src="./img/filter.png" width="100%">
 *
 * Similar to the well-known `Array.prototype.filter` method, this operator
 * takes values from the source Observable, passes them through a `predicate`
 * function and only emits those values that yielded `true`.
 *
 * @example <caption>Emit only click events whose target was a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');
 * clicksOnDivs.subscribe(x => console.log(x));
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 * @see {@link ignoreElements}
 * @see {@link partition}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted, if `false` the value is not passed to the output
 * Observable. The `index` parameter is the number `i` for the i-th source
 * emission that has happened since the subscription, starting from the number
 * `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of values from the source that were
 * allowed by the `predicate` function.
 * @method filter
 * @owner Observable
 */function filter(predicate,thisArg){return this.lift(new FilterOperator(predicate,thisArg));}exports.filter=filter;var FilterOperator=function(){function FilterOperator(predicate,thisArg){this.predicate=predicate;this.thisArg=thisArg;}FilterOperator.prototype.call=function(subscriber,source){return source.subscribe(new FilterSubscriber(subscriber,this.predicate,this.thisArg));};return FilterOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var FilterSubscriber=function(_super){__extends(FilterSubscriber,_super);function FilterSubscriber(destination,predicate,thisArg){_super.call(this,destination);this.predicate=predicate;this.thisArg=thisArg;this.count=0;}// the try catch block below is left specifically for
// optimization and perf reasons. a tryCatcher is not necessary here.
FilterSubscriber.prototype._next=function(value){var result;try{result=this.predicate.call(this.thisArg,value,this.count++);}catch(err){this.destination.error(err);return;}if(result){this.destination.next(value);}};return FilterSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=filter.js.map

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/* tslint:enable:max-line-length *//**
 * Emits only the first value emitted by the source Observable that meets some
 * condition.
 *
 * <span class="informal">Finds the first value that passes some test and emits
 * that.</span>
 *
 * <img src="./img/find.png" width="100%">
 *
 * `find` searches for the first item in the source Observable that matches the
 * specified condition embodied by the `predicate`, and returns the first
 * occurrence in the source. Unlike {@link first}, the `predicate` is required
 * in `find`, and does not emit an error if a valid value is not found.
 *
 * @example <caption>Find and emit the first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.find(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link first}
 * @see {@link findIndex}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable<T>} An Observable of the first item that matches the
 * condition.
 * @method find
 * @owner Observable
 */function find(predicate,thisArg){if(typeof predicate!=='function'){throw new TypeError('predicate is not a function');}return this.lift(new FindValueOperator(predicate,this,false,thisArg));}exports.find=find;var FindValueOperator=function(){function FindValueOperator(predicate,source,yieldIndex,thisArg){this.predicate=predicate;this.source=source;this.yieldIndex=yieldIndex;this.thisArg=thisArg;}FindValueOperator.prototype.call=function(observer,source){return source.subscribe(new FindValueSubscriber(observer,this.predicate,this.source,this.yieldIndex,this.thisArg));};return FindValueOperator;}();exports.FindValueOperator=FindValueOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var FindValueSubscriber=function(_super){__extends(FindValueSubscriber,_super);function FindValueSubscriber(destination,predicate,source,yieldIndex,thisArg){_super.call(this,destination);this.predicate=predicate;this.source=source;this.yieldIndex=yieldIndex;this.thisArg=thisArg;this.index=0;}FindValueSubscriber.prototype.notifyComplete=function(value){var destination=this.destination;destination.next(value);destination.complete();};FindValueSubscriber.prototype._next=function(value){var _a=this,predicate=_a.predicate,thisArg=_a.thisArg;var index=this.index++;try{var result=predicate.call(thisArg||this,value,index,this.source);if(result){this.notifyComplete(this.yieldIndex?index:value);}}catch(err){this.destination.error(err);}};FindValueSubscriber.prototype._complete=function(){this.notifyComplete(this.yieldIndex?-1:undefined);};return FindValueSubscriber;}(Subscriber_1.Subscriber);exports.FindValueSubscriber=FindValueSubscriber;//# sourceMappingURL=find.js.map

/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var Observable_1=__webpack_require__(0);var Subscriber_1=__webpack_require__(2);var Subscription_1=__webpack_require__(9);/**
 * @class ConnectableObservable<T>
 */var ConnectableObservable=function(_super){__extends(ConnectableObservable,_super);function ConnectableObservable(source,subjectFactory){_super.call(this);this.source=source;this.subjectFactory=subjectFactory;this._refCount=0;this._isComplete=false;}ConnectableObservable.prototype._subscribe=function(subscriber){return this.getSubject().subscribe(subscriber);};ConnectableObservable.prototype.getSubject=function(){var subject=this._subject;if(!subject||subject.isStopped){this._subject=this.subjectFactory();}return this._subject;};ConnectableObservable.prototype.connect=function(){var connection=this._connection;if(!connection){this._isComplete=false;connection=this._connection=new Subscription_1.Subscription();connection.add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(),this)));if(connection.closed){this._connection=null;connection=Subscription_1.Subscription.EMPTY;}else{this._connection=connection;}}return connection;};ConnectableObservable.prototype.refCount=function(){return this.lift(new RefCountOperator(this));};return ConnectableObservable;}(Observable_1.Observable);exports.ConnectableObservable=ConnectableObservable;var connectableProto=ConnectableObservable.prototype;exports.connectableObservableDescriptor={operator:{value:null},_refCount:{value:0,writable:true},_subject:{value:null,writable:true},_connection:{value:null,writable:true},_subscribe:{value:connectableProto._subscribe},_isComplete:{value:connectableProto._isComplete,writable:true},getSubject:{value:connectableProto.getSubject},connect:{value:connectableProto.connect},refCount:{value:connectableProto.refCount}};var ConnectableSubscriber=function(_super){__extends(ConnectableSubscriber,_super);function ConnectableSubscriber(destination,connectable){_super.call(this,destination);this.connectable=connectable;}ConnectableSubscriber.prototype._error=function(err){this._unsubscribe();_super.prototype._error.call(this,err);};ConnectableSubscriber.prototype._complete=function(){this.connectable._isComplete=true;this._unsubscribe();_super.prototype._complete.call(this);};ConnectableSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(connectable){this.connectable=null;var connection=connectable._connection;connectable._refCount=0;connectable._subject=null;connectable._connection=null;if(connection){connection.unsubscribe();}}};return ConnectableSubscriber;}(Subject_1.SubjectSubscriber);var RefCountOperator=function(){function RefCountOperator(connectable){this.connectable=connectable;}RefCountOperator.prototype.call=function(subscriber,source){var connectable=this.connectable;connectable._refCount++;var refCounter=new RefCountSubscriber(subscriber,connectable);var subscription=source.subscribe(refCounter);if(!refCounter.closed){refCounter.connection=connectable.connect();}return subscription;};return RefCountOperator;}();var RefCountSubscriber=function(_super){__extends(RefCountSubscriber,_super);function RefCountSubscriber(destination,connectable){_super.call(this,destination);this.connectable=connectable;}RefCountSubscriber.prototype._unsubscribe=function(){var connectable=this.connectable;if(!connectable){this.connection=null;return;}this.connectable=null;var refCount=connectable._refCount;if(refCount<=0){this.connection=null;return;}connectable._refCount=refCount-1;if(refCount>1){this.connection=null;return;}///
// Compare the local RefCountSubscriber's connection Subscription to the
// connection Subscription on the shared ConnectableObservable. In cases
// where the ConnectableObservable source synchronously emits values, and
// the RefCountSubscriber's downstream Observers synchronously unsubscribe,
// execution continues to here before the RefCountOperator has a chance to
// supply the RefCountSubscriber with the shared connection Subscription.
// For example:
// ```
// Observable.range(0, 10)
//   .publish()
//   .refCount()
//   .take(5)
//   .subscribe();
// ```
// In order to account for this case, RefCountSubscriber should only dispose
// the ConnectableObservable's shared connection Subscription if the
// connection Subscription exists, *and* either:
//   a. RefCountSubscriber doesn't have a reference to the shared connection
//      Subscription yet, or,
//   b. RefCountSubscriber's connection Subscription reference is identical
//      to the shared connection Subscription
///
var connection=this.connection;var sharedConnection=connectable._connection;this.connection=null;if(sharedConnection&&(!connection||sharedConnection===connection)){sharedConnection.unsubscribe();}};return RefCountSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=ConnectableObservable.js.map

/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var ObjectUnsubscribedError_1=__webpack_require__(67);/**
 * @class BehaviorSubject<T>
 */var BehaviorSubject=function(_super){__extends(BehaviorSubject,_super);function BehaviorSubject(_value){_super.call(this);this._value=_value;}Object.defineProperty(BehaviorSubject.prototype,"value",{get:function get(){return this.getValue();},enumerable:true,configurable:true});BehaviorSubject.prototype._subscribe=function(subscriber){var subscription=_super.prototype._subscribe.call(this,subscriber);if(subscription&&!subscription.closed){subscriber.next(this._value);}return subscription;};BehaviorSubject.prototype.getValue=function(){if(this.hasError){throw this.thrownError;}else if(this.closed){throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();}else{return this._value;}};BehaviorSubject.prototype.next=function(value){_super.prototype.next.call(this,this._value=value);};return BehaviorSubject;}(Subject_1.Subject);exports.BehaviorSubject=BehaviorSubject;//# sourceMappingURL=BehaviorSubject.js.map

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var AsapAction_1=__webpack_require__(619);var AsapScheduler_1=__webpack_require__(623);/**
 *
 * Asap Scheduler
 *
 * <span class="informal">Perform task as fast as it can be performed asynchronously</span>
 *
 * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task
 * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing
 * code to end and then it will try to execute given task as fast as possible.
 *
 * `asap` scheduler will do its best to minimize time between end of currently executing code
 * and start of scheduled task. This makes it best candidate for performing so called "deferring".
 * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves
 * some (although minimal) unwanted delay.
 *
 * Note that using `asap` scheduler does not necessarily mean that your task will be first to process
 * after currently executing code. In particular, if some task was also scheduled with `asap` before,
 * that task will execute first. That being said, if you need to schedule task asynchronously, but
 * as soon as possible, `asap` scheduler is your best bet.
 *
 * @example <caption>Compare async and asap scheduler</caption>
 *
 * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...
 * Rx.Scheduler.asap.schedule(() => console.log('asap'));
 *
 * // Logs:
 * // "asap"
 * // "async"
 * // ... but 'asap' goes first!
 *
 * @static true
 * @name asap
 * @owner Scheduler
 */exports.asap=new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);//# sourceMappingURL=asap.js.map

/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var apply=Function.prototype.apply;// DOM APIs, for completeness
exports.setTimeout=function(){return new Timeout(apply.call(setTimeout,window,arguments),clearTimeout);};exports.setInterval=function(){return new Timeout(apply.call(setInterval,window,arguments),clearInterval);};exports.clearTimeout=exports.clearInterval=function(timeout){if(timeout){timeout.close();}};function Timeout(id,clearFn){this._id=id;this._clearFn=clearFn;}Timeout.prototype.unref=Timeout.prototype.ref=function(){};Timeout.prototype.close=function(){this._clearFn.call(window,this._id);};// Does not start the time, just sets up the members needed.
exports.enroll=function(item,msecs){clearTimeout(item._idleTimeoutId);item._idleTimeout=msecs;};exports.unenroll=function(item){clearTimeout(item._idleTimeoutId);item._idleTimeout=-1;};exports._unrefActive=exports.active=function(item){clearTimeout(item._idleTimeoutId);var msecs=item._idleTimeout;if(msecs>=0){item._idleTimeoutId=setTimeout(function onTimeout(){if(item._onTimeout)item._onTimeout();},msecs);}};// setimmediate attaches itself to the global object
__webpack_require__(621);exports.setImmediate=setImmediate;exports.clearImmediate=clearImmediate;

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);exports.defaultThrottleConfig={leading:true,trailing:false};/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for a duration determined by another Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link throttleTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/throttle.png" width="100%">
 *
 * `throttle` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled by calling the `durationSelector` function with the source value,
 * which returns the "duration" Observable. When the duration Observable emits a
 * value or completes, the timer is disabled, and this process repeats for the
 * next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttle(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration for each source value, returned as an Observable or a Promise.
 * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults
 * to `{ leading: true, trailing: false }`.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttle
 * @owner Observable
 */function throttle(durationSelector,config){if(config===void 0){config=exports.defaultThrottleConfig;}return this.lift(new ThrottleOperator(durationSelector,config.leading,config.trailing));}exports.throttle=throttle;var ThrottleOperator=function(){function ThrottleOperator(durationSelector,leading,trailing){this.durationSelector=durationSelector;this.leading=leading;this.trailing=trailing;}ThrottleOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleSubscriber(subscriber,this.durationSelector,this.leading,this.trailing));};return ThrottleOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc
 * @ignore
 * @extends {Ignored}
 */var ThrottleSubscriber=function(_super){__extends(ThrottleSubscriber,_super);function ThrottleSubscriber(destination,durationSelector,_leading,_trailing){_super.call(this,destination);this.destination=destination;this.durationSelector=durationSelector;this._leading=_leading;this._trailing=_trailing;this._hasTrailingValue=false;}ThrottleSubscriber.prototype._next=function(value){if(this.throttled){if(this._trailing){this._hasTrailingValue=true;this._trailingValue=value;}}else{var duration=this.tryDurationSelector(value);if(duration){this.add(this.throttled=subscribeToResult_1.subscribeToResult(this,duration));}if(this._leading){this.destination.next(value);if(this._trailing){this._hasTrailingValue=true;this._trailingValue=value;}}}};ThrottleSubscriber.prototype.tryDurationSelector=function(value){try{return this.durationSelector(value);}catch(err){this.destination.error(err);return null;}};ThrottleSubscriber.prototype._unsubscribe=function(){var _a=this,throttled=_a.throttled,_trailingValue=_a._trailingValue,_hasTrailingValue=_a._hasTrailingValue,_trailing=_a._trailing;this._trailingValue=null;this._hasTrailingValue=false;if(throttled){this.remove(throttled);this.throttled=null;throttled.unsubscribe();}};ThrottleSubscriber.prototype._sendTrailing=function(){var _a=this,destination=_a.destination,throttled=_a.throttled,_trailing=_a._trailing,_trailingValue=_a._trailingValue,_hasTrailingValue=_a._hasTrailingValue;if(throttled&&_trailing&&_hasTrailingValue){destination.next(_trailingValue);this._trailingValue=null;this._hasTrailingValue=false;}};ThrottleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this._sendTrailing();this._unsubscribe();};ThrottleSubscriber.prototype.notifyComplete=function(){this._sendTrailing();this._unsubscribe();};return ThrottleSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=throttle.js.map

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var async_1=__webpack_require__(16);/**
 * @param scheduler
 * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timeInterval
 * @owner Observable
 */function timeInterval(scheduler){if(scheduler===void 0){scheduler=async_1.async;}return this.lift(new TimeIntervalOperator(scheduler));}exports.timeInterval=timeInterval;var TimeInterval=function(){function TimeInterval(value,interval){this.value=value;this.interval=interval;}return TimeInterval;}();exports.TimeInterval=TimeInterval;;var TimeIntervalOperator=function(){function TimeIntervalOperator(scheduler){this.scheduler=scheduler;}TimeIntervalOperator.prototype.call=function(observer,source){return source.subscribe(new TimeIntervalSubscriber(observer,this.scheduler));};return TimeIntervalOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var TimeIntervalSubscriber=function(_super){__extends(TimeIntervalSubscriber,_super);function TimeIntervalSubscriber(destination,scheduler){_super.call(this,destination);this.scheduler=scheduler;this.lastTime=0;this.lastTime=scheduler.now();}TimeIntervalSubscriber.prototype._next=function(value){var now=this.scheduler.now();var span=now-this.lastTime;this.lastTime=now;this.destination.next(new TimeInterval(value,span));};return TimeIntervalSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};/**
 * An error thrown when duetime elapses.
 *
 * @see {@link timeout}
 *
 * @class TimeoutError
 */var TimeoutError=function(_super){__extends(TimeoutError,_super);function TimeoutError(){var err=_super.call(this,'Timeout has occurred');this.name=err.name='TimeoutError';this.stack=err.stack;this.message=err.message;}return TimeoutError;}(Error);exports.TimeoutError=TimeoutError;//# sourceMappingURL=TimeoutError.js.map

/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var async_1=__webpack_require__(16);/**
 * @param scheduler
 * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}
 * @method timestamp
 * @owner Observable
 */function timestamp(scheduler){if(scheduler===void 0){scheduler=async_1.async;}return this.lift(new TimestampOperator(scheduler));}exports.timestamp=timestamp;var Timestamp=function(){function Timestamp(value,timestamp){this.value=value;this.timestamp=timestamp;}return Timestamp;}();exports.Timestamp=Timestamp;;var TimestampOperator=function(){function TimestampOperator(scheduler){this.scheduler=scheduler;}TimestampOperator.prototype.call=function(observer,source){return source.subscribe(new TimestampSubscriber(observer,this.scheduler));};return TimestampOperator;}();var TimestampSubscriber=function(_super){__extends(TimestampSubscriber,_super);function TimestampSubscriber(destination,scheduler){_super.call(this,destination);this.scheduler=scheduler;}TimestampSubscriber.prototype._next=function(value){var now=this.scheduler.now();this.destination.next(new Timestamp(value,now));};return TimestampSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var SubscriptionLog_1=__webpack_require__(187);var SubscriptionLoggable=function(){function SubscriptionLoggable(){this.subscriptions=[];}SubscriptionLoggable.prototype.logSubscribedFrame=function(){this.subscriptions.push(new SubscriptionLog_1.SubscriptionLog(this.scheduler.now()));return this.subscriptions.length-1;};SubscriptionLoggable.prototype.logUnsubscribedFrame=function(index){var subscriptionLogs=this.subscriptions;var oldSubscriptionLog=subscriptionLogs[index];subscriptionLogs[index]=new SubscriptionLog_1.SubscriptionLog(oldSubscriptionLog.subscribedFrame,this.scheduler.now());};return SubscriptionLoggable;}();exports.SubscriptionLoggable=SubscriptionLoggable;//# sourceMappingURL=SubscriptionLoggable.js.map

/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var SubscriptionLog=function(){function SubscriptionLog(subscribedFrame,unsubscribedFrame){if(unsubscribedFrame===void 0){unsubscribedFrame=Number.POSITIVE_INFINITY;}this.subscribedFrame=subscribedFrame;this.unsubscribedFrame=unsubscribedFrame;}return SubscriptionLog;}();exports.SubscriptionLog=SubscriptionLog;//# sourceMappingURL=SubscriptionLog.js.map

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function applyMixins(derivedCtor,baseCtors){for(var i=0,len=baseCtors.length;i<len;i++){var baseCtor=baseCtors[i];var propertyKeys=Object.getOwnPropertyNames(baseCtor.prototype);for(var j=0,len2=propertyKeys.length;j<len2;j++){var name_1=propertyKeys[j];derivedCtor.prototype[name_1]=baseCtor.prototype[name_1];}}}exports.applyMixins=applyMixins;//# sourceMappingURL=applyMixins.js.map

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var AsyncAction_1=__webpack_require__(44);var AsyncScheduler_1=__webpack_require__(45);var VirtualTimeScheduler=function(_super){__extends(VirtualTimeScheduler,_super);function VirtualTimeScheduler(SchedulerAction,maxFrames){var _this=this;if(SchedulerAction===void 0){SchedulerAction=VirtualAction;}if(maxFrames===void 0){maxFrames=Number.POSITIVE_INFINITY;}_super.call(this,SchedulerAction,function(){return _this.frame;});this.maxFrames=maxFrames;this.frame=0;this.index=-1;}/**
     * Prompt the Scheduler to execute all of its queued actions, therefore
     * clearing its queue.
     * @return {void}
     */VirtualTimeScheduler.prototype.flush=function(){var _a=this,actions=_a.actions,maxFrames=_a.maxFrames;var error,action;while((action=actions.shift())&&(this.frame=action.delay)<=maxFrames){if(error=action.execute(action.state,action.delay)){break;}}if(error){while(action=actions.shift()){action.unsubscribe();}throw error;}};VirtualTimeScheduler.frameTimeFactor=10;return VirtualTimeScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.VirtualTimeScheduler=VirtualTimeScheduler;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var VirtualAction=function(_super){__extends(VirtualAction,_super);function VirtualAction(scheduler,work,index){if(index===void 0){index=scheduler.index+=1;}_super.call(this,scheduler,work);this.scheduler=scheduler;this.work=work;this.index=index;this.active=true;this.index=scheduler.index=index;}VirtualAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(!this.id){return _super.prototype.schedule.call(this,state,delay);}this.active=false;// If an action is rescheduled, we save allocations by mutating its state,
// pushing it to the end of the scheduler queue, and recycling the action.
// But since the VirtualTimeScheduler is used for testing, VirtualActions
// must be immutable so they can be inspected later.
var action=new VirtualAction(this.scheduler,this.work);this.add(action);return action.schedule(state,delay);};VirtualAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}this.delay=scheduler.frame+delay;var actions=scheduler.actions;actions.push(this);actions.sort(VirtualAction.sortActions);return true;};VirtualAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}return undefined;};VirtualAction.prototype._execute=function(state,delay){if(this.active===true){return _super.prototype._execute.call(this,state,delay);}};VirtualAction.sortActions=function(a,b){if(a.delay===b.delay){if(a.index===b.index){return 0;}else if(a.index>b.index){return 1;}else{return-1;}}else if(a.delay>b.delay){return 1;}else{return-1;}};return VirtualAction;}(AsyncAction_1.AsyncAction);exports.VirtualAction=VirtualAction;//# sourceMappingURL=VirtualTimeScheduler.js.map

/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();// import R from 'ramda';
// import Rx from 'rxjs/Rx';
var _tingle=__webpack_require__(676);var _tingle2=_interopRequireDefault(_tingle);__webpack_require__(682);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Popup=function(){function Popup(params){_classCallCheck(this,Popup);var defaultParams={onClose:null,onOpen:null,beforeClose:null,stickyFooter:false,footer:false,cssClass:[],closeLabel:'Close',closeMethods:['overlay','button','escape'],modalContent:''};this.popupParams=Object.assign({},defaultParams,params);this.modal=new _tingle2.default.modal(this.popupParams);}/**
     * @method getParams
     *
     * Возвращает объект параметров
     * @returns {object} объект параметров попапа
     */_createClass(Popup,[{key:'getParams',value:function getParams(){return this.popupParams;}/**
     * @method open
     *
     * Показывает попап
     */},{key:'open',value:function open(){this.modal.open();return this;}/**
     * @method close
     *
     * Скрывает попап
     */},{key:'close',value:function close(){this.modal.close();return this;}/**
     * @method setContent
     *
     * Добавляет контент в popup-блок
     *
     * @param content {String} - контент, который мы хотим показать в попапе
     */},{key:'setContent',value:function setContent(content){this.modal.setContent(content);return this;}/**
     * @method init
     *
     * Инициализация попапа.
     * Добавляем содержимое попапа, показываем его
     *
     */},{key:'init',value:function init(){var popupParams=this.getParams();// Добавляем контент
this.setContent(popupParams.modalContent);// Показываем попап
this.open();return this;}}]);return Popup;}();exports.default=Popup;

/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(192);
module.exports = __webpack_require__(190);


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _ramda=__webpack_require__(102);var _ramda2=_interopRequireDefault(_ramda);var _Rx=__webpack_require__(158);var _Rx2=_interopRequireDefault(_Rx);var _Observable=__webpack_require__(0);var _vue=__webpack_require__(673);var _vue2=_interopRequireDefault(_vue);var _vueRouter=__webpack_require__(674);var _vueRouter2=_interopRequireDefault(_vueRouter);var _A=__webpack_require__(675);var _popup=__webpack_require__(190);var _popup2=_interopRequireDefault(_popup);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// import App from './App.vue';
var b=function b(value){return value+'!';};var Component,Component2,firstPopup,secondPopup;console.log(undefined);console.log(_vueRouter2.default);console.log(_A.A.add(1));console.log(b('1'));_Rx2.default.Observable.of(1,2,3).subscribe(console.log);_Observable.Observable.of(1,2,3).subscribe(console.log);console.log(_ramda2.default.add(2)(4));_vue2.default.use(_vueRouter2.default);Component=_vue2.default.extend({template:'<div class="popup__one">{{ firstContent }}, {{ secondContent }} <input type="text" value="123123"> <button class="tingle-btn tingle-btn--primary" v-on:click="openSecond">Открой второй попап</button></div>',data:function data(){return{firstContent:'My first content',secondContent:'My second content',openSecond:function openSecond(){firstPopup.close();secondPopup.init();}};}});Component2=_vue2.default.component('my-component',{data:function data(){return{name:'Имя компонента: my-component'};},template:'<div>Пользовательский компонент! {{ name }}</div>'});// Создаем экземпляр первого попапа
firstPopup=new _popup2.default({modalContent:new Component().$mount().$el,footer:true});// Создаем эксемпляр второго попапа
secondPopup=new _popup2.default({modalContent:new Component2().$mount().$el});new _vue2.default({el:'#app',methods:{openFirst:function openFirst(){firstPopup.init();},openSecond:function openSecond(){secondPopup.init();}}});

/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var always=__webpack_require__(33);/**
 * A function that always returns `false`. Any passed in parameters are ignored.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Function
 * @sig * -> Boolean
 * @param {*}
 * @return {Boolean}
 * @see R.always, R.T
 * @example
 *
 *      R.F(); //=> false
 */module.exports=always(false);

/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var always=__webpack_require__(33);/**
 * A function that always returns `true`. Any passed in parameters are ignored.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Function
 * @sig * -> Boolean
 * @param {*}
 * @return {Boolean}
 * @see R.always, R.F
 * @example
 *
 *      R.T(); //=> true
 */module.exports=always(true);

/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * A special placeholder value used to specify "gaps" within curried functions,
 * allowing partial application of any combination of arguments, regardless of
 * their positions.
 *
 * If `g` is a curried ternary function and `_` is `R.__`, the following are
 * equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2, _)(1, 3)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @constant
 * @memberOf R
 * @since v0.6.0
 * @category Function
 * @example
 *
 *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');
 *      greet('Alice'); //=> 'Hello, Alice!'
 */module.exports={'@@functional/placeholder':true};

/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry1=__webpack_require__(3);var curryN=__webpack_require__(14);/**
 * Creates a new list iteration function from an existing one by adding two new
 * parameters to its callback function: the current index, and the entire list.
 *
 * This would turn, for instance, [`R.map`](#map) function into one that
 * more closely resembles `Array.prototype.map`. Note that this will only work
 * for functions in which the iteration callback function is the first
 * parameter, and where the list is the last parameter. (This latter might be
 * unimportant if the list parameter is not used.)
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Function
 * @category List
 * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)
 * @param {Function} fn A list iteration function that does not pass index or list to its callback
 * @return {Function} An altered list iteration function that passes (item, index, list) to its callback
 * @example
 *
 *      var mapIndexed = R.addIndex(R.map);
 *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);
 *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']
 */module.exports=_curry1(function addIndex(fn){return curryN(fn.length,function(){var idx=0;var origFn=arguments[0];var list=arguments[arguments.length-1];var args=Array.prototype.slice.call(arguments,0);args[0]=function(){var result=origFn.apply(this,_concat(arguments,[idx,list]));idx+=1;return result;};return fn.apply(this,args);});});

/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xall=__webpack_require__(198);/**
 * Returns `true` if all elements of the list match the predicate, `false` if
 * there are any that don't.
 *
 * Dispatches to the `all` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> Boolean
 * @param {Function} fn The predicate function.
 * @param {Array} list The array to consider.
 * @return {Boolean} `true` if the predicate is satisfied by every element, `false`
 *         otherwise.
 * @see R.any, R.none, R.transduce
 * @example
 *
 *      var equals3 = R.equals(3);
 *      R.all(equals3)([3, 3, 3, 3]); //=> true
 *      R.all(equals3)([3, 3, 1, 3]); //=> false
 */module.exports=_curry2(_dispatchable(['all'],_xall,function all(fn,list){var idx=0;while(idx<list.length){if(!fn(list[idx])){return false;}idx+=1;}return true;}));

/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduced=__webpack_require__(28);var _xfBase=__webpack_require__(8);module.exports=function(){function XAll(f,xf){this.xf=xf;this.f=f;this.all=true;}XAll.prototype['@@transducer/init']=_xfBase.init;XAll.prototype['@@transducer/result']=function(result){if(this.all){result=this.xf['@@transducer/step'](result,true);}return this.xf['@@transducer/result'](result);};XAll.prototype['@@transducer/step']=function(result,input){if(!this.f(input)){this.all=false;result=_reduced(this.xf['@@transducer/step'](result,false));}return result;};return _curry2(function _xall(f,xf){return new XAll(f,xf);});}();

/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var curryN=__webpack_require__(14);var max=__webpack_require__(34);var pluck=__webpack_require__(35);var reduce=__webpack_require__(23);/**
 * Takes a list of predicates and returns a predicate that returns true for a
 * given list of arguments if every one of the provided predicates is satisfied
 * by those arguments.
 *
 * The function returned is a curried function whose arity matches that of the
 * highest-arity predicate.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Logic
 * @sig [(*... -> Boolean)] -> (*... -> Boolean)
 * @param {Array} predicates An array of predicates to check
 * @return {Function} The combined predicate
 * @see R.anyPass
 * @example
 *
 *      var isQueen = R.propEq('rank', 'Q');
 *      var isSpade = R.propEq('suit', '♠︎');
 *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);
 *
 *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false
 *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true
 */module.exports=_curry1(function allPass(preds){return curryN(reduce(max,0,pluck('length',preds)),function(){var idx=0;var len=preds.length;while(idx<len){if(!preds[idx].apply(this,arguments)){return false;}idx+=1;}return true;});});

/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XMap(f,xf){this.xf=xf;this.f=f;}XMap.prototype['@@transducer/init']=_xfBase.init;XMap.prototype['@@transducer/result']=_xfBase.result;XMap.prototype['@@transducer/step']=function(result,input){return this.xf['@@transducer/step'](result,this.f(input));};return _curry2(function _xmap(f,xf){return new XMap(f,xf);});}();

/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var curryN=__webpack_require__(14);var max=__webpack_require__(34);var pluck=__webpack_require__(35);var reduce=__webpack_require__(23);/**
 * Takes a list of predicates and returns a predicate that returns true for a
 * given list of arguments if at least one of the provided predicates is
 * satisfied by those arguments.
 *
 * The function returned is a curried function whose arity matches that of the
 * highest-arity predicate.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Logic
 * @sig [(*... -> Boolean)] -> (*... -> Boolean)
 * @param {Array} predicates An array of predicates to check
 * @return {Function} The combined predicate
 * @see R.allPass
 * @example
 *
 *      var isClub = R.propEq('suit', '♣');
 *      var isSpade = R.propEq('suit', '♠');
 *      var isBlackCard = R.anyPass([isClub, isSpade]);
 *
 *      isBlackCard({rank: '10', suit: '♣'}); //=> true
 *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true
 *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false
 */module.exports=_curry1(function anyPass(preds){return curryN(reduce(max,0,pluck('length',preds)),function(){var idx=0;var len=preds.length;while(idx<len){if(preds[idx].apply(this,arguments)){return true;}idx+=1;}return false;});});

/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _aperture=__webpack_require__(203);var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xaperture=__webpack_require__(204);/**
 * Returns a new list, composed of n-tuples of consecutive elements. If `n` is
 * greater than the length of the list, an empty list is returned.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category List
 * @sig Number -> [a] -> [[a]]
 * @param {Number} n The size of the tuples to create
 * @param {Array} list The list to split into `n`-length tuples
 * @return {Array} The resulting list of `n`-length tuples
 * @see R.transduce
 * @example
 *
 *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]
 *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]
 *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []
 */module.exports=_curry2(_dispatchable([],_xaperture,_aperture));

/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _aperture(n,list){var idx=0;var limit=list.length-(n-1);var acc=new Array(limit>=0?limit:0);while(idx<limit){acc[idx]=Array.prototype.slice.call(list,idx,idx+n);idx+=1;}return acc;};

/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XAperture(n,xf){this.xf=xf;this.pos=0;this.full=false;this.acc=new Array(n);}XAperture.prototype['@@transducer/init']=_xfBase.init;XAperture.prototype['@@transducer/result']=function(result){this.acc=null;return this.xf['@@transducer/result'](result);};XAperture.prototype['@@transducer/step']=function(result,input){this.store(input);return this.full?this.xf['@@transducer/step'](result,this.getCopy()):result;};XAperture.prototype.store=function(input){this.acc[this.pos]=input;this.pos+=1;if(this.pos===this.acc.length){this.pos=0;this.full=true;}};XAperture.prototype.getCopy=function(){return _concat(Array.prototype.slice.call(this.acc,this.pos),Array.prototype.slice.call(this.acc,0,this.pos));};return _curry2(function _xaperture(n,xf){return new XAperture(n,xf);});}();

/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry2=__webpack_require__(1);/**
 * Returns a new list containing the contents of the given list, followed by
 * the given element.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig a -> [a] -> [a]
 * @param {*} el The element to add to the end of the new list.
 * @param {Array} list The list of elements to add a new item to.
 *        list.
 * @return {Array} A new list containing the elements of the old list followed by `el`.
 * @see R.prepend
 * @example
 *
 *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']
 *      R.append('tests', []); //=> ['tests']
 *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]
 */module.exports=_curry2(function append(el,list){return _concat(list,[el]);});

/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var apply=__webpack_require__(110);var curryN=__webpack_require__(14);var map=__webpack_require__(17);var max=__webpack_require__(34);var pluck=__webpack_require__(35);var reduce=__webpack_require__(23);var values=__webpack_require__(111);/**
 * Given a spec object recursively mapping properties to functions, creates a
 * function producing an object of the same structure, by mapping each property
 * to the result of calling its associated function with the supplied arguments.
 *
 * @func
 * @memberOf R
 * @since v0.20.0
 * @category Function
 * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})
 * @param {Object} spec an object recursively mapping properties to functions for
 *        producing the values for these properties.
 * @return {Function} A function that returns an object of the same structure
 * as `spec', with each property set to the value returned by calling its
 * associated function with the supplied arguments.
 * @see R.converge, R.juxt
 * @example
 *
 *      var getMetrics = R.applySpec({
 *                                      sum: R.add,
 *                                      nested: { mul: R.multiply }
 *                                   });
 *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }
 * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }
 */module.exports=_curry1(function applySpec(spec){spec=map(function(v){return typeof v=='function'?v:applySpec(v);},spec);return curryN(reduce(max,0,pluck('length',values(spec))),function(){var args=arguments;return map(function(f){return apply(f,args);},spec);});});

/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Makes an ascending comparator function out of a function that returns a value
 * that can be compared with `<` and `>`.
 *
 * @func
 * @memberOf R
 * @since v0.23.0
 * @category Function
 * @sig Ord b => (a -> b) -> a -> a -> Number
 * @param {Function} fn A function of arity one that returns a value that can be compared
 * @param {*} a The first item to be compared.
 * @param {*} b The second item to be compared.
 * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`
 * @see R.descend
 * @example
 *
 *      var byAge = R.ascend(R.prop('age'));
 *      var people = [
 *        // ...
 *      ];
 *      var peopleByYoungestFirst = R.sort(byAge, people);
 */module.exports=_curry3(function ascend(fn,a,b){var aa=fn(a);var bb=fn(b);return aa<bb?-1:aa>bb?1:0;});

/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var nAry=__webpack_require__(53);/**
 * Wraps a function of any arity (including nullary) in a function that accepts
 * exactly 2 parameters. Any extraneous parameters will not be passed to the
 * supplied function.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category Function
 * @sig (* -> c) -> (a, b -> c)
 * @param {Function} fn The function to wrap.
 * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of
 *         arity 2.
 * @see R.nAry, R.unary
 * @example
 *
 *      var takesThreeArgs = function(a, b, c) {
 *        return [a, b, c];
 *      };
 *      takesThreeArgs.length; //=> 3
 *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]
 *
 *      var takesTwoArgs = R.binary(takesThreeArgs);
 *      takesTwoArgs.length; //=> 2
 *      // Only 2 arguments are passed to the wrapped function
 *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]
 * @symb R.binary(f)(a, b, c) = f(a, b)
 */module.exports=_curry1(function binary(fn){return nAry(2,fn);});

/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isFunction=__webpack_require__(54);var and=__webpack_require__(107);var lift=__webpack_require__(55);/**
 * A function which calls the two provided functions and returns the `&&`
 * of the results.
 * It returns the result of the first function if it is false-y and the result
 * of the second function otherwise. Note that this is short-circuited,
 * meaning that the second function will not be invoked if the first returns a
 * false-y value.
 *
 * In addition to functions, `R.both` also accepts any fantasy-land compatible
 * applicative functor.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category Logic
 * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)
 * @param {Function} f A predicate
 * @param {Function} g Another predicate
 * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.
 * @see R.and
 * @example
 *
 *      var gt10 = R.gt(R.__, 10)
 *      var lt20 = R.lt(R.__, 20)
 *      var f = R.both(gt10, lt20);
 *      f(15); //=> true
 *      f(30); //=> false
 */module.exports=_curry2(function both(f,g){return _isFunction(f)?function _both(){return f.apply(this,arguments)&&g.apply(this,arguments);}:lift(and)(f,g);});

/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var curry=__webpack_require__(56);/**
 * Returns the result of calling its first argument with the remaining
 * arguments. This is occasionally useful as a converging function for
 * [`R.converge`](#converge): the first branch can produce a function while the
 * remaining branches produce values to be passed to that function as its
 * arguments.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Function
 * @sig (*... -> a),*... -> a
 * @param {Function} fn The function to apply to the remaining arguments.
 * @param {...*} args Any number of positional arguments.
 * @return {*}
 * @see R.apply
 * @example
 *
 *      R.call(R.add, 1, 2); //=> 3
 *
 *      var indentN = R.pipe(R.times(R.always(' ')),
 *                           R.join(''),
 *                           R.replace(/^(?!$)/gm));
 *
 *      var format = R.converge(R.call, [
 *                                  R.pipe(R.prop('indent'), indentN),
 *                                  R.prop('value')
 *                              ]);
 *
 *      format({indent: 2, value: 'foo\nbar\nbaz\n'}); //=> '  foo\n  bar\n  baz\n'
 * @symb R.call(f, a, b) = f(a, b)
 */module.exports=curry(function call(fn){return fn.apply(this,Array.prototype.slice.call(arguments,1));});

/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _flatCat=__webpack_require__(212);var map=__webpack_require__(17);module.exports=_curry2(function _xchain(f,xf){return map(f,_flatCat(xf));});

/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _forceReduced=__webpack_require__(213);var _isArrayLike=__webpack_require__(51);var _reduce=__webpack_require__(18);var _xfBase=__webpack_require__(8);module.exports=function(){var preservingReduced=function preservingReduced(xf){return{'@@transducer/init':_xfBase.init,'@@transducer/result':function transducerResult(result){return xf['@@transducer/result'](result);},'@@transducer/step':function transducerStep(result,input){var ret=xf['@@transducer/step'](result,input);return ret['@@transducer/reduced']?_forceReduced(ret):ret;}};};return function _xcat(xf){var rxf=preservingReduced(xf);return{'@@transducer/init':_xfBase.init,'@@transducer/result':function transducerResult(result){return rxf['@@transducer/result'](result);},'@@transducer/step':function transducerStep(result,input){return!_isArrayLike(input)?_reduce(rxf,result,[input]):_reduce(rxf,result,input);}};};}();

/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _forceReduced(x){return{'@@transducer/value':x,'@@transducer/reduced':true};};

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Restricts a number to be within a range.
 *
 * Also works for other ordered types such as Strings and Dates.
 *
 * @func
 * @memberOf R
 * @since v0.20.0
 * @category Relation
 * @sig Ord a => a -> a -> a -> a
 * @param {Number} minimum The lower limit of the clamp (inclusive)
 * @param {Number} maximum The upper limit of the clamp (inclusive)
 * @param {Number} value Value to be clamped
 * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise
 * @example
 *
 *      R.clamp(1, 10, -5) // => 1
 *      R.clamp(1, 10, 15) // => 10
 *      R.clamp(1, 10, 4)  // => 4
 */module.exports=_curry3(function clamp(min,max,value){if(min>max){throw new Error('min must not be greater than max in clamp(min, max, value)');}return value<min?min:value>max?max:value;});

/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _clone=__webpack_require__(116);var _curry1=__webpack_require__(3);/**
 * Creates a deep copy of the value which may contain (nested) `Array`s and
 * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are
 * assigned by reference rather than copied
 *
 * Dispatches to a `clone` method if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {*} -> {*}
 * @param {*} value The object or array to clone
 * @return {*} A deeply cloned copy of `val`
 * @example
 *
 *      var objects = [{}, {}, {}];
 *      var objectsClone = R.clone(objects);
 *      objects === objectsClone; //=> false
 *      objects[0] === objectsClone[0]; //=> false
 */module.exports=_curry1(function clone(value){return value!=null&&typeof value.clone==='function'?value.clone():_clone(value,[],[],true);});

/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Makes a comparator function out of a function that reports whether the first
 * element is less than the second.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (a, b -> Boolean) -> (a, b -> Number)
 * @param {Function} pred A predicate function of arity two which will return `true` if the first argument
 * is less than the second, `false` otherwise
 * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`
 * @example
 *
 *      var byAge = R.comparator((a, b) => a.age < b.age);
 *      var people = [
 *        // ...
 *      ];
 *      var peopleByIncreasingAge = R.sort(byAge, people);
 */module.exports=_curry1(function comparator(pred){return function(a,b){return pred(a,b)?-1:pred(b,a)?1:0;};});

/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var lift=__webpack_require__(55);var not=__webpack_require__(118);/**
 * Takes a function `f` and returns a function `g` such that if called with the same arguments
 * when `f` returns a "truthy" value, `g` returns `false` and when `f` returns a "falsy" value `g` returns `true`.
 *
 * `R.complement` may be applied to any functor
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category Logic
 * @sig (*... -> *) -> (*... -> Boolean)
 * @param {Function} f
 * @return {Function}
 * @see R.not
 * @example
 *
 *      var isNotNil = R.complement(R.isNil);
 *      isNil(null); //=> true
 *      isNotNil(null); //=> false
 *      isNil(7); //=> false
 *      isNotNil(7); //=> true
 */module.exports=lift(not);

/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _pipe(f,g){return function(){return g.call(this,f.apply(this,arguments));};};

/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var pipeP=__webpack_require__(121);var reverse=__webpack_require__(57);/**
 * Performs right-to-left composition of one or more Promise-returning
 * functions. The rightmost function may have any arity; the remaining
 * functions must be unary.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category Function
 * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)
 * @param {...Function} functions The functions to compose
 * @return {Function}
 * @see R.pipeP
 * @example
 *
 *      var db = {
 *        users: {
 *          JOE: {
 *            name: 'Joe',
 *            followers: ['STEVE', 'SUZY']
 *          }
 *        }
 *      }
 *
 *      // We'll pretend to do a db lookup which returns a promise
 *      var lookupUser = (userId) => Promise.resolve(db.users[userId])
 *      var lookupFollowers = (user) => Promise.resolve(user.followers)
 *      lookupUser('JOE').then(lookupFollowers)
 *
 *      //  followersForUser :: String -> Promise [UserId]
 *      var followersForUser = R.composeP(lookupFollowers, lookupUser);
 *      followersForUser('JOE').then(followers => console.log('Followers:', followers))
 *      // Followers: ["STEVE","SUZY"]
 */module.exports=function composeP(){if(arguments.length===0){throw new Error('composeP requires at least one argument');}return pipeP.apply(this,reverse(arguments));};

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _pipeP(f,g){return function(){var ctx=this;return f.apply(ctx,arguments).then(function(x){return g.call(ctx,x);});};};

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _contains=__webpack_require__(31);var _map=__webpack_require__(50);var _quote=__webpack_require__(225);var _toISOString=__webpack_require__(226);var keys=__webpack_require__(22);var reject=__webpack_require__(58);module.exports=function _toString(x,seen){var recur=function recur(y){var xs=seen.concat([x]);return _contains(y,xs)?'<Circular>':_toString(y,xs);};//  mapPairs :: (Object, [String]) -> [String]
var mapPairs=function mapPairs(obj,keys){return _map(function(k){return _quote(k)+': '+recur(obj[k]);},keys.slice().sort());};switch(Object.prototype.toString.call(x)){case'[object Arguments]':return'(function() { return arguments; }('+_map(recur,x).join(', ')+'))';case'[object Array]':return'['+_map(recur,x).concat(mapPairs(x,reject(function(k){return /^\d+$/.test(k);},keys(x)))).join(', ')+']';case'[object Boolean]':return(typeof x==='undefined'?'undefined':_typeof(x))==='object'?'new Boolean('+recur(x.valueOf())+')':x.toString();case'[object Date]':return'new Date('+(isNaN(x.valueOf())?recur(NaN):_quote(_toISOString(x)))+')';case'[object Null]':return'null';case'[object Number]':return(typeof x==='undefined'?'undefined':_typeof(x))==='object'?'new Number('+recur(x.valueOf())+')':1/x===-Infinity?'-0':x.toString(10);case'[object String]':return(typeof x==='undefined'?'undefined':_typeof(x))==='object'?'new String('+recur(x.valueOf())+')':_quote(x);case'[object Undefined]':return'undefined';default:if(typeof x.toString==='function'){var repr=x.toString();if(repr!=='[object Object]'){return repr;}}return'{'+mapPairs(x,keys(x)).join(', ')+'}';}};

/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _arrayFromIterator=__webpack_require__(223);var _functionName=__webpack_require__(224);var _has=__webpack_require__(15);var identical=__webpack_require__(123);var keys=__webpack_require__(22);var type=__webpack_require__(79);module.exports=function _equals(a,b,stackA,stackB){if(identical(a,b)){return true;}if(type(a)!==type(b)){return false;}if(a==null||b==null){return false;}if(typeof a['fantasy-land/equals']==='function'||typeof b['fantasy-land/equals']==='function'){return typeof a['fantasy-land/equals']==='function'&&a['fantasy-land/equals'](b)&&typeof b['fantasy-land/equals']==='function'&&b['fantasy-land/equals'](a);}if(typeof a.equals==='function'||typeof b.equals==='function'){return typeof a.equals==='function'&&a.equals(b)&&typeof b.equals==='function'&&b.equals(a);}switch(type(a)){case'Arguments':case'Array':case'Object':if(typeof a.constructor==='function'&&_functionName(a.constructor)==='Promise'){return a===b;}break;case'Boolean':case'Number':case'String':if(!((typeof a==='undefined'?'undefined':_typeof(a))===(typeof b==='undefined'?'undefined':_typeof(b))&&identical(a.valueOf(),b.valueOf()))){return false;}break;case'Date':if(!identical(a.valueOf(),b.valueOf())){return false;}break;case'Error':return a.name===b.name&&a.message===b.message;case'RegExp':if(!(a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline&&a.sticky===b.sticky&&a.unicode===b.unicode)){return false;}break;case'Map':case'Set':if(!_equals(_arrayFromIterator(a.entries()),_arrayFromIterator(b.entries()),stackA,stackB)){return false;}break;case'Int8Array':case'Uint8Array':case'Uint8ClampedArray':case'Int16Array':case'Uint16Array':case'Int32Array':case'Uint32Array':case'Float32Array':case'Float64Array':break;case'ArrayBuffer':break;default:// Values of other types are only equal if identical.
return false;}var keysA=keys(a);if(keysA.length!==keys(b).length){return false;}var idx=stackA.length-1;while(idx>=0){if(stackA[idx]===a){return stackB[idx]===b;}idx-=1;}stackA.push(a);stackB.push(b);idx=keysA.length-1;while(idx>=0){var key=keysA[idx];if(!(_has(key,b)&&_equals(b[key],a[key],stackA,stackB))){return false;}idx-=1;}stackA.pop();stackB.pop();return true;};

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _arrayFromIterator(iter){var list=[];var next;while(!(next=iter.next()).done){list.push(next.value);}return list;};

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _functionName(f){// String(x => x) evaluates to "x => x", so the pattern may not match.
var match=String(f).match(/^function (\w*)/);return match==null?'':match[1];};

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _quote(s){var escaped=s.replace(/\\/g,'\\\\').replace(/[\b]/g,'\\b')// \b matches word boundary; [\b] matches backspace
.replace(/\f/g,'\\f').replace(/\n/g,'\\n').replace(/\r/g,'\\r').replace(/\t/g,'\\t').replace(/\v/g,'\\v').replace(/\0/g,'\\0');return'"'+escaped.replace(/"/g,'\\"')+'"';};

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.
 */module.exports=function(){var pad=function pad(n){return(n<10?'0':'')+n;};return typeof Date.prototype.toISOString==='function'?function _toISOString(d){return d.toISOString();}:function _toISOString(d){return d.getUTCFullYear()+'-'+pad(d.getUTCMonth()+1)+'-'+pad(d.getUTCDate())+'T'+pad(d.getUTCHours())+':'+pad(d.getUTCMinutes())+':'+pad(d.getUTCSeconds())+'.'+(d.getUTCMilliseconds()/1000).toFixed(3).slice(2,5)+'Z';};}();

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XFilter(f,xf){this.xf=xf;this.f=f;}XFilter.prototype['@@transducer/init']=_xfBase.init;XFilter.prototype['@@transducer/result']=_xfBase.result;XFilter.prototype['@@transducer/step']=function(result,input){return this.f(input)?this.xf['@@transducer/step'](result,input):result;};return _curry2(function _xfilter(f,xf){return new XFilter(f,xf);});}();

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _curry1=__webpack_require__(3);var map=__webpack_require__(17);var max=__webpack_require__(34);var reduce=__webpack_require__(23);/**
 * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.
 * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments
 * to `fn` are applied to each of the predicates in turn until one returns a
 * "truthy" value, at which point `fn` returns the result of applying its
 * arguments to the corresponding transformer. If none of the predicates
 * matches, `fn` returns undefined.
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category Logic
 * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)
 * @param {Array} pairs A list of [predicate, transformer]
 * @return {Function}
 * @example
 *
 *      var fn = R.cond([
 *        [R.equals(0),   R.always('water freezes at 0°C')],
 *        [R.equals(100), R.always('water boils at 100°C')],
 *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']
 *      ]);
 *      fn(0); //=> 'water freezes at 0°C'
 *      fn(50); //=> 'nothing special happens at 50°C'
 *      fn(100); //=> 'water boils at 100°C'
 */module.exports=_curry1(function cond(pairs){var arity=reduce(max,0,map(function(pair){return pair[0].length;},pairs));return _arity(arity,function(){var idx=0;while(idx<pairs.length){if(pairs[idx][0].apply(this,arguments)){return pairs[idx][1].apply(this,arguments);}idx+=1;}});});

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var constructN=__webpack_require__(125);/**
 * Wraps a constructor function inside a curried function that can be called
 * with the same arguments and returns the same type.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (* -> {*}) -> (* -> {*})
 * @param {Function} fn The constructor function to wrap.
 * @return {Function} A wrapped, curried constructor function.
 * @see R.invoker
 * @example
 *
 *      // Constructor function
 *      function Animal(kind) {
 *        this.kind = kind;
 *      };
 *      Animal.prototype.sighting = function() {
 *        return "It's a " + this.kind + "!";
 *      }
 *
 *      var AnimalConstructor = R.construct(Animal)
 *
 *      // Notice we no longer need the 'new' keyword:
 *      AnimalConstructor('Pig'); //=> {"kind": "Pig", "sighting": function (){...}};
 *
 *      var animalTypes = ["Lion", "Tiger", "Bear"];
 *      var animalSighting = R.invoker(0, 'sighting');
 *      var sightNewAnimal = R.compose(animalSighting, AnimalConstructor);
 *      R.map(sightNewAnimal, animalTypes); //=> ["It's a Lion!", "It's a Tiger!", "It's a Bear!"]
 */module.exports=_curry1(function construct(Fn){return constructN(Fn.length,Fn);});

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _contains=__webpack_require__(31);var _curry2=__webpack_require__(1);/**
 * Returns `true` if the specified value is equal, in [`R.equals`](#equals)
 * terms, to at least one element of the given list; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig a -> [a] -> Boolean
 * @param {Object} a The item to compare against.
 * @param {Array} list The array to consider.
 * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.
 * @see R.any
 * @example
 *
 *      R.contains(3, [1, 2, 3]); //=> true
 *      R.contains(4, [1, 2, 3]); //=> false
 *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true
 *      R.contains([42], [[42]]); //=> true
 */module.exports=_curry2(_contains);

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var reduceBy=__webpack_require__(59);/**
 * Counts the elements of a list according to how many match each value of a
 * key generated by the supplied function. Returns an object mapping the keys
 * produced by `fn` to the number of occurrences in the list. Note that all
 * keys are coerced to strings because of how JavaScript objects work.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig (a -> String) -> [a] -> {*}
 * @param {Function} fn The function used to map values to keys.
 * @param {Array} list The list to count elements from.
 * @return {Object} An object mapping keys to number of occurrences in the list.
 * @example
 *
 *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];
 *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}
 *
 *      var letters = ['a', 'b', 'A', 'a', 'B', 'c'];
 *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}
 */module.exports=reduceBy(function(acc,elem){return acc+1;},0);

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curryN=__webpack_require__(49);var _has=__webpack_require__(15);var _xfBase=__webpack_require__(8);module.exports=function(){function XReduceBy(valueFn,valueAcc,keyFn,xf){this.valueFn=valueFn;this.valueAcc=valueAcc;this.keyFn=keyFn;this.xf=xf;this.inputs={};}XReduceBy.prototype['@@transducer/init']=_xfBase.init;XReduceBy.prototype['@@transducer/result']=function(result){var key;for(key in this.inputs){if(_has(key,this.inputs)){result=this.xf['@@transducer/step'](result,this.inputs[key]);if(result['@@transducer/reduced']){result=result['@@transducer/value'];break;}}}this.inputs=null;return this.xf['@@transducer/result'](result);};XReduceBy.prototype['@@transducer/step']=function(result,input){var key=this.keyFn(input);this.inputs[key]=this.inputs[key]||[key,this.valueAcc];this.inputs[key][1]=this.valueFn(this.inputs[key][1],input);return result;};return _curryN(4,[],function _xreduceBy(valueFn,valueAcc,keyFn,xf){return new XReduceBy(valueFn,valueAcc,keyFn,xf);});}();

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var add=__webpack_require__(48);/**
 * Decrements its argument.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Math
 * @sig Number -> Number
 * @param {Number} n
 * @return {Number} n - 1
 * @see R.inc
 * @example
 *
 *      R.dec(42); //=> 41
 */module.exports=add(-1);

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Makes a descending comparator function out of a function that returns a value
 * that can be compared with `<` and `>`.
 *
 * @func
 * @memberOf R
 * @since v0.23.0
 * @category Function
 * @sig Ord b => (a -> b) -> a -> a -> Number
 * @param {Function} fn A function of arity one that returns a value that can be compared
 * @param {*} a The first item to be compared.
 * @param {*} b The second item to be compared.
 * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`
 * @see R.ascend
 * @example
 *
 *      var byAge = R.descend(R.prop('age'));
 *      var people = [
 *        // ...
 *      ];
 *      var peopleByOldestFirst = R.sort(byAge, people);
 */module.exports=_curry3(function descend(fn,a,b){var aa=fn(a);var bb=fn(b);return aa>bb?-1:aa<bb?1:0;});

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isInteger=__webpack_require__(77);var assoc=__webpack_require__(52);var dissoc=__webpack_require__(130);var remove=__webpack_require__(131);var update=__webpack_require__(86);/**
 * Makes a shallow clone of an object, omitting the property at the given path.
 * Note that this copies and flattens prototype properties onto the new object
 * as well. All non-primitive properties are copied by reference.
 *
 * @func
 * @memberOf R
 * @since v0.11.0
 * @category Object
 * @typedefn Idx = String | Int
 * @sig [Idx] -> {k: v} -> {k: v}
 * @param {Array} path The path to the value to omit
 * @param {Object} obj The object to clone
 * @return {Object} A new object without the property at path
 * @see R.assocPath
 * @example
 *
 *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}
 */module.exports=_curry2(function dissocPath(path,obj){switch(path.length){case 0:return obj;case 1:return _isInteger(path[0])?remove(path[0],1,obj):dissoc(path[0],obj);default:var head=path[0];var tail=Array.prototype.slice.call(path,1);if(obj[head]==null){return obj;}else if(_isInteger(path[0])){return update(head,dissocPath(tail,obj[head]),obj);}else{return assoc(head,dissocPath(tail,obj[head]),obj);}}});

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Divides two numbers. Equivalent to `a / b`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Math
 * @sig Number -> Number -> Number
 * @param {Number} a The first value.
 * @param {Number} b The second value.
 * @return {Number} The result of `a / b`.
 * @see R.multiply
 * @example
 *
 *      R.divide(71, 100); //=> 0.71
 *
 *      var half = R.divide(R.__, 2);
 *      half(42); //=> 21
 *
 *      var reciprocal = R.divide(1);
 *      reciprocal(4);   //=> 0.25
 */module.exports=_curry2(function divide(a,b){return a/b;});

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XDrop(n,xf){this.xf=xf;this.n=n;}XDrop.prototype['@@transducer/init']=_xfBase.init;XDrop.prototype['@@transducer/result']=_xfBase.result;XDrop.prototype['@@transducer/step']=function(result,input){if(this.n>0){this.n-=1;return result;}return this.xf['@@transducer/step'](result,input);};return _curry2(function _xdrop(n,xf){return new XDrop(n,xf);});}();

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _dropLast=__webpack_require__(239);var _xdropLast=__webpack_require__(241);/**
 * Returns a list containing all but the last `n` elements of the given `list`.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig Number -> [a] -> [a]
 * @sig Number -> String -> String
 * @param {Number} n The number of elements of `list` to skip.
 * @param {Array} list The list of elements to consider.
 * @return {Array} A copy of the list with only the first `list.length - n` elements
 * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile
 * @example
 *
 *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']
 *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']
 *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []
 *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []
 *      R.dropLast(3, 'ramda');               //=> 'ra'
 */module.exports=_curry2(_dispatchable([],_xdropLast,_dropLast));

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var take=__webpack_require__(87);module.exports=function dropLast(n,xs){return take(n<xs.length?xs.length-n:0,xs);};

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduced=__webpack_require__(28);var _xfBase=__webpack_require__(8);module.exports=function(){function XTake(n,xf){this.xf=xf;this.n=n;this.i=0;}XTake.prototype['@@transducer/init']=_xfBase.init;XTake.prototype['@@transducer/result']=_xfBase.result;XTake.prototype['@@transducer/step']=function(result,input){this.i+=1;var ret=this.n===0?result:this.xf['@@transducer/step'](result,input);return this.n>=0&&this.i>=this.n?_reduced(ret):ret;};return _curry2(function _xtake(n,xf){return new XTake(n,xf);});}();

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XDropLast(n,xf){this.xf=xf;this.pos=0;this.full=false;this.acc=new Array(n);}XDropLast.prototype['@@transducer/init']=_xfBase.init;XDropLast.prototype['@@transducer/result']=function(result){this.acc=null;return this.xf['@@transducer/result'](result);};XDropLast.prototype['@@transducer/step']=function(result,input){if(this.full){result=this.xf['@@transducer/step'](result,this.acc[this.pos]);}this.store(input);return result;};XDropLast.prototype.store=function(input){this.acc[this.pos]=input;this.pos+=1;if(this.pos===this.acc.length){this.pos=0;this.full=true;}};return _curry2(function _xdropLast(n,xf){return new XDropLast(n,xf);});}();

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _dropLastWhile=__webpack_require__(243);var _xdropLastWhile=__webpack_require__(244);/**
 * Returns a new list excluding all the tailing elements of a given list which
 * satisfy the supplied predicate function. It passes each value from the right
 * to the supplied predicate function, skipping elements until the predicate
 * function returns a `falsy` value. The predicate function is applied to one argument:
 * *(value)*.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> [a]
 * @param {Function} predicate The function to be called on each element
 * @param {Array} list The collection to iterate over.
 * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.
 * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile
 * @example
 *
 *      var lteThree = x => x <= 3;
 *
 *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]
 */module.exports=_curry2(_dispatchable([],_xdropLastWhile,_dropLastWhile));

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function dropLastWhile(pred,list){var idx=list.length-1;while(idx>=0&&pred(list[idx])){idx-=1;}return Array.prototype.slice.call(list,0,idx+1);};

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduce=__webpack_require__(18);var _xfBase=__webpack_require__(8);module.exports=function(){function XDropLastWhile(fn,xf){this.f=fn;this.retained=[];this.xf=xf;}XDropLastWhile.prototype['@@transducer/init']=_xfBase.init;XDropLastWhile.prototype['@@transducer/result']=function(result){this.retained=null;return this.xf['@@transducer/result'](result);};XDropLastWhile.prototype['@@transducer/step']=function(result,input){return this.f(input)?this.retain(result,input):this.flush(result,input);};XDropLastWhile.prototype.flush=function(result,input){result=_reduce(this.xf['@@transducer/step'],result,this.retained);this.retained=[];return this.xf['@@transducer/step'](result,input);};XDropLastWhile.prototype.retain=function(result,input){this.retained.push(input);return result;};return _curry2(function _xdropLastWhile(fn,xf){return new XDropLastWhile(fn,xf);});}();

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _dispatchable=__webpack_require__(7);var _xdropRepeatsWith=__webpack_require__(133);var dropRepeatsWith=__webpack_require__(134);var equals=__webpack_require__(19);/**
 * Returns a new list without any consecutively repeating elements.
 * [`R.equals`](#equals) is used to determine equality.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category List
 * @sig [a] -> [a]
 * @param {Array} list The array to consider.
 * @return {Array} `list` without repeating elements.
 * @see R.transduce
 * @example
 *
 *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]
 */module.exports=_curry1(_dispatchable([],_xdropRepeatsWith(equals),dropRepeatsWith(equals)));

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xdropWhile=__webpack_require__(247);/**
 * Returns a new list excluding the leading elements of a given list which
 * satisfy the supplied predicate function. It passes each value to the supplied
 * predicate function, skipping elements while the predicate function returns
 * `true`. The predicate function is applied to one argument: *(value)*.
 *
 * Dispatches to the `dropWhile` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> [a]
 * @param {Function} fn The function called per iteration.
 * @param {Array} list The collection to iterate over.
 * @return {Array} A new array.
 * @see R.takeWhile, R.transduce, R.addIndex
 * @example
 *
 *      var lteTwo = x => x <= 2;
 *
 *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]
 */module.exports=_curry2(_dispatchable(['dropWhile'],_xdropWhile,function dropWhile(pred,list){var idx=0;var len=list.length;while(idx<len&&pred(list[idx])){idx+=1;}return Array.prototype.slice.call(list,idx);}));

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XDropWhile(f,xf){this.xf=xf;this.f=f;}XDropWhile.prototype['@@transducer/init']=_xfBase.init;XDropWhile.prototype['@@transducer/result']=_xfBase.result;XDropWhile.prototype['@@transducer/step']=function(result,input){if(this.f){if(this.f(input)){return result;}this.f=null;}return this.xf['@@transducer/step'](result,input);};return _curry2(function _xdropWhile(f,xf){return new XDropWhile(f,xf);});}();

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isFunction=__webpack_require__(54);var lift=__webpack_require__(55);var or=__webpack_require__(136);/**
 * A function wrapping calls to the two functions in an `||` operation,
 * returning the result of the first function if it is truth-y and the result
 * of the second function otherwise. Note that this is short-circuited,
 * meaning that the second function will not be invoked if the first returns a
 * truth-y value.
 *
 * In addition to functions, `R.either` also accepts any fantasy-land compatible
 * applicative functor.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category Logic
 * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)
 * @param {Function} f a predicate
 * @param {Function} g another predicate
 * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.
 * @see R.or
 * @example
 *
 *      var gt10 = x => x > 10;
 *      var even = x => x % 2 === 0;
 *      var f = R.either(gt10, even);
 *      f(101); //=> true
 *      f(8); //=> true
 */module.exports=_curry2(function either(f,g){return _isFunction(f)?function _either(){return f.apply(this,arguments)||g.apply(this,arguments);}:lift(or)(f,g);});

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var equals=__webpack_require__(19);var takeLast=__webpack_require__(138);/**
 * Checks if a list ends with the provided values
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category List
 * @sig [a] -> Boolean
 * @sig String -> Boolean
 * @param {*} suffix
 * @param {*} list
 * @return {Boolean}
 * @example
 *
 *      R.endsWith('c', 'abc')                //=> true
 *      R.endsWith('b', 'abc')                //=> false
 *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true
 *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false
 */module.exports=_curry2(function(suffix,list){return equals(takeLast(suffix.length,list),suffix);});

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var equals=__webpack_require__(19);/**
 * Takes a function and two values in its domain and returns `true` if the
 * values map to the same value in the codomain; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category Relation
 * @sig (a -> b) -> a -> a -> Boolean
 * @param {Function} f
 * @param {*} x
 * @param {*} y
 * @return {Boolean}
 * @example
 *
 *      R.eqBy(Math.abs, 5, -5); //=> true
 */module.exports=_curry3(function eqBy(f,x,y){return equals(f(x),f(y));});

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var equals=__webpack_require__(19);/**
 * Reports whether two objects have the same value, in [`R.equals`](#equals)
 * terms, for the specified property. Useful as a curried predicate.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig k -> {k: v} -> {k: v} -> Boolean
 * @param {String} prop The name of the property to compare
 * @param {Object} obj1
 * @param {Object} obj2
 * @return {Boolean}
 *
 * @example
 *
 *      var o1 = { a: 1, b: 2, c: 3, d: 4 };
 *      var o2 = { a: 10, b: 20, c: 3, d: 40 };
 *      R.eqProps('a', o1, o2); //=> false
 *      R.eqProps('c', o1, o2); //=> true
 */module.exports=_curry3(function eqProps(prop,obj1,obj2){return equals(obj1[prop],obj2[prop]);});

/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _curry2=__webpack_require__(1);/**
 * Creates a new object by recursively evolving a shallow copy of `object`,
 * according to the `transformation` functions. All non-primitive properties
 * are copied by reference.
 *
 * A `transformation` function will not be invoked if its corresponding key
 * does not exist in the evolved object.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Object
 * @sig {k: (v -> v)} -> {k: v} -> {k: v}
 * @param {Object} transformations The object specifying transformation functions to apply
 *        to the object.
 * @param {Object} object The object to be transformed.
 * @return {Object} The transformed object.
 * @example
 *
 *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};
 *      var transformations = {
 *        firstName: R.trim,
 *        lastName: R.trim, // Will not get invoked.
 *        data: {elapsed: R.add(1), remaining: R.add(-1)}
 *      };
 *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}
 */module.exports=_curry2(function evolve(transformations,object){var result={};var transformation,key,type;for(key in object){transformation=transformations[key];type=typeof transformation==='undefined'?'undefined':_typeof(transformation);result[key]=type==='function'?transformation(object[key]):transformation&&type==='object'?evolve(transformation,object[key]):object[key];}return result;});

/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xfind=__webpack_require__(254);/**
 * Returns the first element of the list which matches the predicate, or
 * `undefined` if no element matches.
 *
 * Dispatches to the `find` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> a | undefined
 * @param {Function} fn The predicate function used to determine if the element is the
 *        desired one.
 * @param {Array} list The array to consider.
 * @return {Object} The element found, or `undefined`.
 * @see R.transduce
 * @example
 *
 *      var xs = [{a: 1}, {a: 2}, {a: 3}];
 *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}
 *      R.find(R.propEq('a', 4))(xs); //=> undefined
 */module.exports=_curry2(_dispatchable(['find'],_xfind,function find(fn,list){var idx=0;var len=list.length;while(idx<len){if(fn(list[idx])){return list[idx];}idx+=1;}}));

/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduced=__webpack_require__(28);var _xfBase=__webpack_require__(8);module.exports=function(){function XFind(f,xf){this.xf=xf;this.f=f;this.found=false;}XFind.prototype['@@transducer/init']=_xfBase.init;XFind.prototype['@@transducer/result']=function(result){if(!this.found){result=this.xf['@@transducer/step'](result,void 0);}return this.xf['@@transducer/result'](result);};XFind.prototype['@@transducer/step']=function(result,input){if(this.f(input)){this.found=true;result=_reduced(this.xf['@@transducer/step'](result,input));}return result;};return _curry2(function _xfind(f,xf){return new XFind(f,xf);});}();

/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xfindIndex=__webpack_require__(256);/**
 * Returns the index of the first element of the list which matches the
 * predicate, or `-1` if no element matches.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category List
 * @sig (a -> Boolean) -> [a] -> Number
 * @param {Function} fn The predicate function used to determine if the element is the
 * desired one.
 * @param {Array} list The array to consider.
 * @return {Number} The index of the element found, or `-1`.
 * @see R.transduce
 * @example
 *
 *      var xs = [{a: 1}, {a: 2}, {a: 3}];
 *      R.findIndex(R.propEq('a', 2))(xs); //=> 1
 *      R.findIndex(R.propEq('a', 4))(xs); //=> -1
 */module.exports=_curry2(_dispatchable([],_xfindIndex,function findIndex(fn,list){var idx=0;var len=list.length;while(idx<len){if(fn(list[idx])){return idx;}idx+=1;}return-1;}));

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduced=__webpack_require__(28);var _xfBase=__webpack_require__(8);module.exports=function(){function XFindIndex(f,xf){this.xf=xf;this.f=f;this.idx=-1;this.found=false;}XFindIndex.prototype['@@transducer/init']=_xfBase.init;XFindIndex.prototype['@@transducer/result']=function(result){if(!this.found){result=this.xf['@@transducer/step'](result,-1);}return this.xf['@@transducer/result'](result);};XFindIndex.prototype['@@transducer/step']=function(result,input){this.idx+=1;if(this.f(input)){this.found=true;result=_reduced(this.xf['@@transducer/step'](result,this.idx));}return result;};return _curry2(function _xfindIndex(f,xf){return new XFindIndex(f,xf);});}();

/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xfindLast=__webpack_require__(258);/**
 * Returns the last element of the list which matches the predicate, or
 * `undefined` if no element matches.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category List
 * @sig (a -> Boolean) -> [a] -> a | undefined
 * @param {Function} fn The predicate function used to determine if the element is the
 * desired one.
 * @param {Array} list The array to consider.
 * @return {Object} The element found, or `undefined`.
 * @see R.transduce
 * @example
 *
 *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];
 *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}
 *      R.findLast(R.propEq('a', 4))(xs); //=> undefined
 */module.exports=_curry2(_dispatchable([],_xfindLast,function findLast(fn,list){var idx=list.length-1;while(idx>=0){if(fn(list[idx])){return list[idx];}idx-=1;}}));

/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XFindLast(f,xf){this.xf=xf;this.f=f;}XFindLast.prototype['@@transducer/init']=_xfBase.init;XFindLast.prototype['@@transducer/result']=function(result){return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result,this.last));};XFindLast.prototype['@@transducer/step']=function(result,input){if(this.f(input)){this.last=input;}return result;};return _curry2(function _xfindLast(f,xf){return new XFindLast(f,xf);});}();

/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xfindLastIndex=__webpack_require__(260);/**
 * Returns the index of the last element of the list which matches the
 * predicate, or `-1` if no element matches.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category List
 * @sig (a -> Boolean) -> [a] -> Number
 * @param {Function} fn The predicate function used to determine if the element is the
 * desired one.
 * @param {Array} list The array to consider.
 * @return {Number} The index of the element found, or `-1`.
 * @see R.transduce
 * @example
 *
 *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];
 *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1
 *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1
 */module.exports=_curry2(_dispatchable([],_xfindLastIndex,function findLastIndex(fn,list){var idx=list.length-1;while(idx>=0){if(fn(list[idx])){return idx;}idx-=1;}return-1;}));

/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _xfBase=__webpack_require__(8);module.exports=function(){function XFindLastIndex(f,xf){this.xf=xf;this.f=f;this.idx=-1;this.lastIdx=-1;}XFindLastIndex.prototype['@@transducer/init']=_xfBase.init;XFindLastIndex.prototype['@@transducer/result']=function(result){return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result,this.lastIdx));};XFindLastIndex.prototype['@@transducer/step']=function(result,input){this.idx+=1;if(this.f(input)){this.lastIdx=this.idx;}return result;};return _curry2(function _xfindLastIndex(f,xf){return new XFindLastIndex(f,xf);});}();

/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _makeFlat=__webpack_require__(115);/**
 * Returns a new list by pulling every item out of it (and all its sub-arrays)
 * and putting them in a new array, depth-first.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [b]
 * @param {Array} list The array to consider.
 * @return {Array} The flattened list.
 * @see R.unnest
 * @example
 *
 *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);
 *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 */module.exports=_curry1(_makeFlat(true));

/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _checkForMethod=__webpack_require__(37);var _curry2=__webpack_require__(1);/**
 * Iterate over an input `list`, calling a provided function `fn` for each
 * element in the list.
 *
 * `fn` receives one argument: *(value)*.
 *
 * Note: `R.forEach` does not skip deleted or unassigned indices (sparse
 * arrays), unlike the native `Array.prototype.forEach` method. For more
 * details on this behavior, see:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description
 *
 * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns
 * the original array. In some libraries this function is named `each`.
 *
 * Dispatches to the `forEach` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category List
 * @sig (a -> *) -> [a] -> [a]
 * @param {Function} fn The function to invoke. Receives one argument, `value`.
 * @param {Array} list The list to iterate over.
 * @return {Array} The original list.
 * @see R.addIndex
 * @example
 *
 *      var printXPlusFive = x => console.log(x + 5);
 *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]
 *      // logs 6
 *      // logs 7
 *      // logs 8
 * @symb R.forEach(f, [a, b, c]) = [a, b, c]
 */module.exports=_curry2(_checkForMethod('forEach',function forEach(fn,list){var len=list.length;var idx=0;while(idx<len){fn(list[idx]);idx+=1;}return list;}));

/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var keys=__webpack_require__(22);/**
 * Iterate over an input `object`, calling a provided function `fn` for each
 * key and value in the object.
 *
 * `fn` receives three argument: *(value, key, obj)*.
 *
 * @func
 * @memberOf R
 * @since v0.23.0
 * @category Object
 * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a
 * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.
 * @param {Object} obj The object to iterate over.
 * @return {Object} The original object.
 * @example
 *
 *      var printKeyConcatValue = (value, key) => console.log(key + ':' + value);
 *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}
 *      // logs x:1
 *      // logs y:2
 * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}
 */module.exports=_curry2(function forEachObjIndexed(fn,obj){var keyList=keys(obj);var idx=0;while(idx<keyList.length){var key=keyList[idx];fn(obj[key],key,obj);idx+=1;}return obj;});

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Creates a new object from a list key-value pairs. If a key appears in
 * multiple pairs, the rightmost pair is included in the object.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category List
 * @sig [[k,v]] -> {k: v}
 * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.
 * @return {Object} The object made by pairing up `keys` and `values`.
 * @see R.toPairs, R.pair
 * @example
 *
 *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}
 */module.exports=_curry1(function fromPairs(pairs){var result={};var idx=0;while(idx<pairs.length){result[pairs[idx][0]]=pairs[idx][1];idx+=1;}return result;});

/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _checkForMethod=__webpack_require__(37);var _curry2=__webpack_require__(1);var reduceBy=__webpack_require__(59);/**
 * Splits a list into sub-lists stored in an object, based on the result of
 * calling a String-returning function on each element, and grouping the
 * results according to values returned.
 *
 * Dispatches to the `groupBy` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a -> String) -> [a] -> {String: [a]}
 * @param {Function} fn Function :: a -> String
 * @param {Array} list The array to group
 * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements
 *         that produced that key when passed to `fn`.
 * @see R.transduce
 * @example
 *
 *      var byGrade = R.groupBy(function(student) {
 *        var score = student.score;
 *        return score < 65 ? 'F' :
 *               score < 70 ? 'D' :
 *               score < 80 ? 'C' :
 *               score < 90 ? 'B' : 'A';
 *      });
 *      var students = [{name: 'Abby', score: 84},
 *                      {name: 'Eddy', score: 58},
 *                      // ...
 *                      {name: 'Jack', score: 69}];
 *      byGrade(students);
 *      // {
 *      //   'A': [{name: 'Dianne', score: 99}],
 *      //   'B': [{name: 'Abby', score: 84}]
 *      //   // ...,
 *      //   'F': [{name: 'Eddy', score: 58}]
 *      // }
 */module.exports=_curry2(_checkForMethod('groupBy',reduceBy(function(acc,item){if(acc==null){acc=[];}acc.push(item);return acc;},null)));

/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Takes a list and returns a list of lists where each sublist's elements are
 * all satisfied pairwise comparison according to the provided function.
 * Only adjacent elements are passed to the comparison function.
 *
 * @func
 * @memberOf R
 * @since v0.21.0
 * @category List
 * @sig ((a, a) → Boolean) → [a] → [[a]]
 * @param {Function} fn Function for determining whether two given (adjacent)
 *        elements should be in the same group
 * @param {Array} list The array to group. Also accepts a string, which will be
 *        treated as a list of characters.
 * @return {List} A list that contains sublists of elements,
 *         whose concatenations are equal to the original list.
 * @example
 *
 * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])
 * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]
 *
 * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])
 * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]
 *
 * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])
 * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]
 *
 * R.groupWith(R.eqBy(isVowel), 'aestiou')
 * //=> ['ae', 'st', 'iou']
 */module.exports=_curry2(function(fn,list){var res=[];var idx=0;var len=list.length;while(idx<len){var nextidx=idx+1;while(nextidx<len&&fn(list[nextidx-1],list[nextidx])){nextidx+=1;}res.push(list.slice(idx,nextidx));idx=nextidx;}return res;});

/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns `true` if the first argument is greater than the second; `false`
 * otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @see R.lt
 * @example
 *
 *      R.gt(2, 1); //=> true
 *      R.gt(2, 2); //=> false
 *      R.gt(2, 3); //=> false
 *      R.gt('a', 'z'); //=> false
 *      R.gt('z', 'a'); //=> true
 */module.exports=_curry2(function gt(a,b){return a>b;});

/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns `true` if the first argument is greater than or equal to the second;
 * `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> Boolean
 * @param {Number} a
 * @param {Number} b
 * @return {Boolean}
 * @see R.lte
 * @example
 *
 *      R.gte(2, 1); //=> true
 *      R.gte(2, 2); //=> true
 *      R.gte(2, 3); //=> false
 *      R.gte('a', 'z'); //=> false
 *      R.gte('z', 'a'); //=> true
 */module.exports=_curry2(function gte(a,b){return a>=b;});

/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _has=__webpack_require__(15);/**
 * Returns whether or not an object has an own property with the specified name
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Object
 * @sig s -> {s: x} -> Boolean
 * @param {String} prop The name of the property to check for.
 * @param {Object} obj The object to query.
 * @return {Boolean} Whether the property exists.
 * @example
 *
 *      var hasName = R.has('name');
 *      hasName({name: 'alice'});   //=> true
 *      hasName({name: 'bob'});     //=> true
 *      hasName({});                //=> false
 *
 *      var point = {x: 0, y: 0};
 *      var pointHas = R.has(R.__, point);
 *      pointHas('x');  //=> true
 *      pointHas('y');  //=> true
 *      pointHas('z');  //=> false
 */module.exports=_curry2(_has);

/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns whether or not an object or its prototype chain has a property with
 * the specified name
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Object
 * @sig s -> {s: x} -> Boolean
 * @param {String} prop The name of the property to check for.
 * @param {Object} obj The object to query.
 * @return {Boolean} Whether the property exists.
 * @example
 *
 *      function Rectangle(width, height) {
 *        this.width = width;
 *        this.height = height;
 *      }
 *      Rectangle.prototype.area = function() {
 *        return this.width * this.height;
 *      };
 *
 *      var square = new Rectangle(2, 2);
 *      R.hasIn('width', square);  //=> true
 *      R.hasIn('area', square);  //=> true
 */module.exports=_curry2(function hasIn(prop,obj){return prop in obj;});

/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var nth=__webpack_require__(39);/**
 * Returns the first element of the given list or string. In some libraries
 * this function is named `first`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> a | Undefined
 * @sig String -> String
 * @param {Array|String} list
 * @return {*}
 * @see R.tail, R.init, R.last
 * @example
 *
 *      R.head(['fi', 'fo', 'fum']); //=> 'fi'
 *      R.head([]); //=> undefined
 *
 *      R.head('abc'); //=> 'a'
 *      R.head(''); //=> ''
 */module.exports=nth(0);

/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var curryN=__webpack_require__(14);/**
 * Creates a function that will process either the `onTrue` or the `onFalse`
 * function depending upon the result of the `condition` predicate.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Logic
 * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)
 * @param {Function} condition A predicate function
 * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.
 * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.
 * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`
 *                    function depending upon the result of the `condition` predicate.
 * @see R.unless, R.when
 * @example
 *
 *      var incCount = R.ifElse(
 *        R.has('count'),
 *        R.over(R.lensProp('count'), R.inc),
 *        R.assoc('count', 1)
 *      );
 *      incCount({});           //=> { count: 1 }
 *      incCount({ count: 1 }); //=> { count: 2 }
 */module.exports=_curry3(function ifElse(condition,onTrue,onFalse){return curryN(Math.max(condition.length,onTrue.length,onFalse.length),function _ifElse(){return condition.apply(this,arguments)?onTrue.apply(this,arguments):onFalse.apply(this,arguments);});});

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var add=__webpack_require__(48);/**
 * Increments its argument.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Math
 * @sig Number -> Number
 * @param {Number} n
 * @return {Number} n + 1
 * @see R.dec
 * @example
 *
 *      R.inc(42); //=> 43
 */module.exports=add(1);

/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var reduceBy=__webpack_require__(59);/**
 * Given a function that generates a key, turns a list of objects into an
 * object indexing the objects by the given key. Note that if multiple
 * objects generate the same value for the indexing key only the last value
 * will be included in the generated object.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category List
 * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}
 * @param {Function} fn Function :: a -> String
 * @param {Array} array The array of objects to index
 * @return {Object} An object indexing each array element by the given property.
 * @example
 *
 *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];
 *      R.indexBy(R.prop('id'), list);
 *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}
 */module.exports=reduceBy(function(acc,elem){return elem;},null);

/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _indexOf=__webpack_require__(122);var _isArray=__webpack_require__(27);/**
 * Returns the position of the first occurrence of an item in an array, or -1
 * if the item is not included in the array. [`R.equals`](#equals) is used to
 * determine equality.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig a -> [a] -> Number
 * @param {*} target The item to find.
 * @param {Array} xs The array to search in.
 * @return {Number} the index of the target, or -1 if the target is not found.
 * @see R.lastIndexOf
 * @example
 *
 *      R.indexOf(3, [1,2,3,4]); //=> 2
 *      R.indexOf(10, [1,2,3,4]); //=> -1
 */module.exports=_curry2(function indexOf(target,xs){return typeof xs.indexOf==='function'&&!_isArray(xs)?xs.indexOf(target):_indexOf(xs,target,0);});

/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var slice=__webpack_require__(30);/**
 * Returns all but the last element of the given list or string.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {*} list
 * @return {*}
 * @see R.last, R.head, R.tail
 * @example
 *
 *      R.init([1, 2, 3]);  //=> [1, 2]
 *      R.init([1, 2]);     //=> [1]
 *      R.init([1]);        //=> []
 *      R.init([]);         //=> []
 *
 *      R.init('abc');  //=> 'ab'
 *      R.init('ab');   //=> 'a'
 *      R.init('a');    //=> ''
 *      R.init('');     //=> ''
 */module.exports=slice(0,-1);

/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _containsWith=__webpack_require__(60);var _curry3=__webpack_require__(4);var _filter=__webpack_require__(84);/**
 * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list
 * `xs'` comprising each of the elements of `xs` which is equal to one or more
 * elements of `ys` according to `pred`.
 *
 * `pred` must be a binary function expecting an element from each list.
 *
 * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should
 * not be significant, but since `xs'` is ordered the implementation guarantees
 * that its values are in the same order as they appear in `xs`. Duplicates are
 * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Relation
 * @sig (a -> b -> Boolean) -> [a] -> [b] -> [a]
 * @param {Function} pred
 * @param {Array} xs
 * @param {Array} ys
 * @return {Array}
 * @see R.intersection
 * @example
 *
 *      R.innerJoin(
 *        (record, id) => record.id === id,
 *        [{id: 824, name: 'Richie Furay'},
 *         {id: 956, name: 'Dewey Martin'},
 *         {id: 313, name: 'Bruce Palmer'},
 *         {id: 456, name: 'Stephen Stills'},
 *         {id: 177, name: 'Neil Young'}],
 *        [177, 456, 999]
 *      );
 *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]
 */module.exports=_curry3(function innerJoin(pred,xs,ys){return _filter(function(x){return _containsWith(pred,x,ys);},xs);});

/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Inserts the supplied element into the list, at the specified `index`. _Note that

 * this is not destructive_: it returns a copy of the list with the changes.
 * <small>No lists have been harmed in the application of this function.</small>
 *
 * @func
 * @memberOf R
 * @since v0.2.2
 * @category List
 * @sig Number -> a -> [a] -> [a]
 * @param {Number} index The position to insert the element
 * @param {*} elt The element to insert into the Array
 * @param {Array} list The list to insert into
 * @return {Array} A new Array with `elt` inserted at `index`.
 * @example
 *
 *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]
 */module.exports=_curry3(function insert(idx,elt,list){idx=idx<list.length&&idx>=0?idx:list.length;var result=Array.prototype.slice.call(list,0);result.splice(idx,0,elt);return result;});

/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Inserts the sub-list into the list, at the specified `index`. _Note that this is not
 * destructive_: it returns a copy of the list with the changes.
 * <small>No lists have been harmed in the application of this function.</small>
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category List
 * @sig Number -> [a] -> [a] -> [a]
 * @param {Number} index The position to insert the sub-list
 * @param {Array} elts The sub-list to insert into the Array
 * @param {Array} list The list to insert the sub-list into
 * @return {Array} A new Array with `elts` inserted starting at `index`.
 * @example
 *
 *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]
 */module.exports=_curry3(function insertAll(idx,elts,list){idx=idx<list.length&&idx>=0?idx:list.length;return[].concat(Array.prototype.slice.call(list,0,idx),elts,Array.prototype.slice.call(list,idx));});

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _contains=__webpack_require__(31);var _curry2=__webpack_require__(1);var _filter=__webpack_require__(84);var flip=__webpack_require__(61);var uniq=__webpack_require__(90);/**
 * Combines two lists into a set (i.e. no duplicates) composed of those
 * elements common to both lists.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig [*] -> [*] -> [*]
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The list of elements found in both `list1` and `list2`.
 * @see R.innerJoin
 * @example
 *
 *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]
 */module.exports=_curry2(function intersection(list1,list2){var lookupList,filteredList;if(list1.length>list2.length){lookupList=list1;filteredList=list2;}else{lookupList=list2;filteredList=list1;}return uniq(_filter(flip(_contains)(lookupList),filteredList));});

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _contains=__webpack_require__(31);// A simple Set type that honours R.equals semantics
module.exports=function(){function _Set(){/* globals Set */this._nativeSet=typeof Set==='function'?new Set():null;this._items={};}// until we figure out why jsdoc chokes on this
// @param item The item to add to the Set
// @returns {boolean} true if the item did not exist prior, otherwise false
//
_Set.prototype.add=function(item){return!hasOrAdd(item,true,this);};//
// @param item The item to check for existence in the Set
// @returns {boolean} true if the item exists in the Set, otherwise false
//
_Set.prototype.has=function(item){return hasOrAdd(item,false,this);};//
// Combines the logic for checking whether an item is a member of the set and
// for adding a new item to the set.
//
// @param item       The item to check or add to the Set instance.
// @param shouldAdd  If true, the item will be added to the set if it doesn't
//                   already exist.
// @param set        The set instance to check or add to.
// @return {boolean} true if the item already existed, otherwise false.
//
function hasOrAdd(item,shouldAdd,set){var type=typeof item==='undefined'?'undefined':_typeof(item);var prevSize,newSize;switch(type){case'string':case'number':// distinguish between +0 and -0
if(item===0&&1/item===-Infinity){if(set._items['-0']){return true;}else{if(shouldAdd){set._items['-0']=true;}return false;}}// these types can all utilise the native Set
if(set._nativeSet!==null){if(shouldAdd){prevSize=set._nativeSet.size;set._nativeSet.add(item);newSize=set._nativeSet.size;return newSize===prevSize;}else{return set._nativeSet.has(item);}}else{if(!(type in set._items)){if(shouldAdd){set._items[type]={};set._items[type][item]=true;}return false;}else if(item in set._items[type]){return true;}else{if(shouldAdd){set._items[type][item]=true;}return false;}}case'boolean':// set._items['boolean'] holds a two element array
// representing [ falseExists, trueExists ]
if(type in set._items){var bIdx=item?1:0;if(set._items[type][bIdx]){return true;}else{if(shouldAdd){set._items[type][bIdx]=true;}return false;}}else{if(shouldAdd){set._items[type]=item?[false,true]:[true,false];}return false;}case'function':// compare functions for reference equality
if(set._nativeSet!==null){if(shouldAdd){prevSize=set._nativeSet.size;set._nativeSet.add(item);newSize=set._nativeSet.size;return newSize===prevSize;}else{return set._nativeSet.has(item);}}else{if(!(type in set._items)){if(shouldAdd){set._items[type]=[item];}return false;}if(!_contains(item,set._items[type])){if(shouldAdd){set._items[type].push(item);}return false;}return true;}case'undefined':if(set._items[type]){return true;}else{if(shouldAdd){set._items[type]=true;}return false;}case'object':if(item===null){if(!set._items['null']){if(shouldAdd){set._items['null']=true;}return false;}return true;}/* falls through */default:// reduce the search size of heterogeneous sets by creating buckets
// for each type.
type=Object.prototype.toString.call(item);if(!(type in set._items)){if(shouldAdd){set._items[type]=[item];}return false;}// scan through all previously applied items
if(!_contains(item,set._items[type])){if(shouldAdd){set._items[type].push(item);}return false;}return true;}}return _Set;}();

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _containsWith=__webpack_require__(60);var _curry3=__webpack_require__(4);var uniqWith=__webpack_require__(91);/**
 * Combines two lists into a set (i.e. no duplicates) composed of those
 * elements common to both lists. Duplication is determined according to the
 * value returned by applying the supplied predicate to two list elements.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]
 * @param {Function} pred A predicate function that determines whether
 *        the two supplied elements are equal.
 * @param {Array} list1 One list of items to compare
 * @param {Array} list2 A second list of items to compare
 * @return {Array} A new list containing those elements common to both lists.
 * @see R.innerJoin
 * @deprecated since v0.24.0
 * @example
 *
 *      var buffaloSpringfield = [
 *        {id: 824, name: 'Richie Furay'},
 *        {id: 956, name: 'Dewey Martin'},
 *        {id: 313, name: 'Bruce Palmer'},
 *        {id: 456, name: 'Stephen Stills'},
 *        {id: 177, name: 'Neil Young'}
 *      ];
 *      var csny = [
 *        {id: 204, name: 'David Crosby'},
 *        {id: 456, name: 'Stephen Stills'},
 *        {id: 539, name: 'Graham Nash'},
 *        {id: 177, name: 'Neil Young'}
 *      ];
 *
 *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);
 *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]
 */module.exports=_curry3(function intersectionWith(pred,list1,list2){var lookupList,filteredList;if(list1.length>list2.length){lookupList=list1;filteredList=list2;}else{lookupList=list2;filteredList=list1;}var results=[];var idx=0;while(idx<filteredList.length){if(_containsWith(pred,filteredList[idx],lookupList)){results[results.length]=filteredList[idx];}idx+=1;}return uniqWith(pred,results);});

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _checkForMethod=__webpack_require__(37);var _curry2=__webpack_require__(1);/**
 * Creates a new list with the separator interposed between elements.
 *
 * Dispatches to the `intersperse` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category List
 * @sig a -> [a] -> [a]
 * @param {*} separator The element to add to the list.
 * @param {Array} list The list to be interposed.
 * @return {Array} The new list.
 * @example
 *
 *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']
 */module.exports=_curry2(_checkForMethod('intersperse',function intersperse(separator,list){var out=[];var idx=0;var length=list.length;while(idx<length){if(idx===length-1){out.push(list[idx]);}else{out.push(list[idx],separator);}idx+=1;}return out;}));

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _clone=__webpack_require__(116);var _curry3=__webpack_require__(4);var _isTransformer=__webpack_require__(74);var _reduce=__webpack_require__(18);var _stepCat=__webpack_require__(285);/**
 * Transforms the items of the list with the transducer and appends the
 * transformed items to the accumulator using an appropriate iterator function
 * based on the accumulator type.
 *
 * The accumulator can be an array, string, object or a transformer. Iterated
 * items will be appended to arrays and concatenated to strings. Objects will
 * be merged directly or 2-item arrays will be merged as key, value pairs.
 *
 * The accumulator can also be a transformer object that provides a 2-arity
 * reducing iterator function, step, 0-arity initial value function, init, and
 * 1-arity result extraction function result. The step function is used as the
 * iterator function in reduce. The result function is used to convert the
 * final accumulator into the return type and in most cases is R.identity. The
 * init function is used to provide the initial accumulator.
 *
 * The iteration is performed with [`R.reduce`](#reduce) after initializing the
 * transducer.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category List
 * @sig a -> (b -> b) -> [c] -> a
 * @param {*} acc The initial accumulator value.
 * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @example
 *
 *      var numbers = [1, 2, 3, 4];
 *      var transducer = R.compose(R.map(R.add(1)), R.take(2));
 *
 *      R.into([], transducer, numbers); //=> [2, 3]
 *
 *      var intoArray = R.into([]);
 *      intoArray(transducer, numbers); //=> [2, 3]
 */module.exports=_curry3(function into(acc,xf,list){return _isTransformer(acc)?_reduce(xf(acc),acc['@@transducer/init'](),list):_reduce(xf(_stepCat(acc)),_clone(acc,[],[],false),list);});

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _assign=__webpack_require__(92);var _identity=__webpack_require__(89);var _isArrayLike=__webpack_require__(51);var _isTransformer=__webpack_require__(74);var objOf=__webpack_require__(140);module.exports=function(){var _stepCatArray={'@@transducer/init':Array,'@@transducer/step':function transducerStep(xs,x){xs.push(x);return xs;},'@@transducer/result':_identity};var _stepCatString={'@@transducer/init':String,'@@transducer/step':function transducerStep(a,b){return a+b;},'@@transducer/result':_identity};var _stepCatObject={'@@transducer/init':Object,'@@transducer/step':function transducerStep(result,input){return _assign(result,_isArrayLike(input)?objOf(input[0],input[1]):input);},'@@transducer/result':_identity};return function _stepCat(obj){if(_isTransformer(obj)){return obj;}if(_isArrayLike(obj)){return _stepCatArray;}if(typeof obj==='string'){return _stepCatString;}if((typeof obj==='undefined'?'undefined':_typeof(obj))==='object'){return _stepCatObject;}throw new Error('Cannot create transformer for '+obj);};}();

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _has=__webpack_require__(15);// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
module.exports=function _objectAssign(target){if(target==null){throw new TypeError('Cannot convert undefined or null to object');}var output=Object(target);var idx=1;var length=arguments.length;while(idx<length){var source=arguments[idx];if(source!=null){for(var nextKey in source){if(_has(nextKey,source)){output[nextKey]=source[nextKey];}}}idx+=1;}return output;};

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _has=__webpack_require__(15);var keys=__webpack_require__(22);/**
 * Same as [`R.invertObj`](#invertObj), however this accounts for objects with
 * duplicate values by putting the values into an array.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Object
 * @sig {s: x} -> {x: [ s, ... ]}
 * @param {Object} obj The object or array to invert
 * @return {Object} out A new object with keys in an array.
 * @see R.invertObj
 * @example
 *
 *      var raceResultsByFirstName = {
 *        first: 'alice',
 *        second: 'jake',
 *        third: 'alice',
 *      };
 *      R.invert(raceResultsByFirstName);
 *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }
 */module.exports=_curry1(function invert(obj){var props=keys(obj);var len=props.length;var idx=0;var out={};while(idx<len){var key=props[idx];var val=obj[key];var list=_has(val,out)?out[val]:out[val]=[];list[list.length]=key;idx+=1;}return out;});

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var keys=__webpack_require__(22);/**
 * Returns a new object with the keys of the given object as values, and the
 * values of the given object, which are coerced to strings, as keys. Note
 * that the last key found is preferred when handling the same value.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Object
 * @sig {s: x} -> {x: s}
 * @param {Object} obj The object or array to invert
 * @return {Object} out A new object
 * @see R.invert
 * @example
 *
 *      var raceResults = {
 *        first: 'alice',
 *        second: 'jake'
 *      };
 *      R.invertObj(raceResults);
 *      //=> { 'alice': 'first', 'jake':'second' }
 *
 *      // Alternatively:
 *      var raceResults = ['alice', 'jake'];
 *      R.invertObj(raceResults);
 *      //=> { 'alice': '0', 'jake':'1' }
 */module.exports=_curry1(function invertObj(obj){var props=keys(obj);var len=props.length;var idx=0;var out={};while(idx<len){var key=props[idx];out[obj[key]]=key;idx+=1;}return out;});

/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var empty=__webpack_require__(137);var equals=__webpack_require__(19);/**
 * Returns `true` if the given value is its type's empty value; `false`
 * otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig a -> Boolean
 * @param {*} x
 * @return {Boolean}
 * @see R.empty
 * @example
 *
 *      R.isEmpty([1, 2, 3]);   //=> false
 *      R.isEmpty([]);          //=> true
 *      R.isEmpty('');          //=> true
 *      R.isEmpty(null);        //=> false
 *      R.isEmpty({});          //=> true
 *      R.isEmpty({length: 0}); //=> false
 */module.exports=_curry1(function isEmpty(x){return x!=null&&equals(x,empty(x));});

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var invoker=__webpack_require__(40);/**
 * Returns a string made by inserting the `separator` between each element and
 * concatenating all the elements into a single string.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig String -> [a] -> String
 * @param {Number|String} separator The string used to separate the elements.
 * @param {Array} xs The elements to join into a string.
 * @return {String} str The string made by concatenating `xs` with `separator`.
 * @see R.split
 * @example
 *
 *      var spacer = R.join(' ');
 *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'
 *      R.join('|', [1, 2, 3]);    //=> '1|2|3'
 */module.exports=invoker(1,'join');

/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Returns a list containing the names of all the properties of the supplied
 * object, including prototype properties.
 * Note that the order of the output array is not guaranteed to be consistent
 * across different JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category Object
 * @sig {k: v} -> [k]
 * @param {Object} obj The object to extract properties from
 * @return {Array} An array of the object's own and prototype properties.
 * @see R.keys, R.valuesIn
 * @example
 *
 *      var F = function() { this.x = 'X'; };
 *      F.prototype.y = 'Y';
 *      var f = new F();
 *      R.keysIn(f); //=> ['x', 'y']
 */module.exports=_curry1(function keysIn(obj){var prop;var ks=[];for(prop in obj){ks[ks.length]=prop;}return ks;});

/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isArray=__webpack_require__(27);var equals=__webpack_require__(19);/**
 * Returns the position of the last occurrence of an item in an array, or -1 if
 * the item is not included in the array. [`R.equals`](#equals) is used to
 * determine equality.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig a -> [a] -> Number
 * @param {*} target The item to find.
 * @param {Array} xs The array to search in.
 * @return {Number} the index of the target, or -1 if the target is not found.
 * @see R.indexOf
 * @example
 *
 *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6
 *      R.lastIndexOf(10, [1,2,3,4]); //=> -1
 */module.exports=_curry2(function lastIndexOf(target,xs){if(typeof xs.lastIndexOf==='function'&&!_isArray(xs)){return xs.lastIndexOf(target);}else{var idx=xs.length-1;while(idx>=0){if(equals(xs[idx],target)){return idx;}idx-=1;}return-1;}});

/***/ }),
/* 293 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var lens=__webpack_require__(62);var nth=__webpack_require__(39);var update=__webpack_require__(86);/**
 * Returns a lens whose focus is the specified index.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category Object
 * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s
 * @sig Number -> Lens s a
 * @param {Number} n
 * @return {Lens}
 * @see R.view, R.set, R.over
 * @example
 *
 *      var headLens = R.lensIndex(0);
 *
 *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'
 *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']
 *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']
 */module.exports=_curry1(function lensIndex(n){return lens(nth(n),update(n));});

/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var assocPath=__webpack_require__(112);var lens=__webpack_require__(62);var path=__webpack_require__(41);/**
 * Returns a lens whose focus is the specified path.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Object
 * @typedefn Idx = String | Int
 * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s
 * @sig [Idx] -> Lens s a
 * @param {Array} path The path to use.
 * @return {Lens}
 * @see R.view, R.set, R.over
 * @example
 *
 *      var xHeadYLens = R.lensPath(['x', 0, 'y']);
 *
 *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});
 *      //=> 2
 *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});
 *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}
 *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});
 *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}
 */module.exports=_curry1(function lensPath(p){return lens(path(p),assocPath(p));});

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var assoc=__webpack_require__(52);var lens=__webpack_require__(62);var prop=__webpack_require__(75);/**
 * Returns a lens whose focus is the specified property.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category Object
 * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s
 * @sig String -> Lens s a
 * @param {String} k
 * @return {Lens}
 * @see R.view, R.set, R.over
 * @example
 *
 *      var xLens = R.lensProp('x');
 *
 *      R.view(xLens, {x: 1, y: 2});            //=> 1
 *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}
 *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}
 */module.exports=_curry1(function lensProp(k){return lens(prop(k),assoc(k));});

/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns `true` if the first argument is less than the second; `false`
 * otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @see R.gt
 * @example
 *
 *      R.lt(2, 1); //=> false
 *      R.lt(2, 2); //=> false
 *      R.lt(2, 3); //=> true
 *      R.lt('a', 'z'); //=> true
 *      R.lt('z', 'a'); //=> false
 */module.exports=_curry2(function lt(a,b){return a<b;});

/***/ }),
/* 297 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns `true` if the first argument is less than or equal to the second;
 * `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> Boolean
 * @param {Number} a
 * @param {Number} b
 * @return {Boolean}
 * @see R.gte
 * @example
 *
 *      R.lte(2, 1); //=> false
 *      R.lte(2, 2); //=> true
 *      R.lte(2, 3); //=> true
 *      R.lte('a', 'z'); //=> true
 *      R.lte('z', 'a'); //=> false
 */module.exports=_curry2(function lte(a,b){return a<=b;});

/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * The `mapAccum` function behaves like a combination of map and reduce; it
 * applies a function to each element of a list, passing an accumulating
 * parameter from left to right, and returning a final value of this
 * accumulator together with the new list.
 *
 * The iterator function receives two arguments, *acc* and *value*, and should
 * return a tuple *[acc, value]*.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category List
 * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])
 * @param {Function} fn The function to be called on every element of the input `list`.
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.addIndex, R.mapAccumRight
 * @example
 *
 *      var digits = ['1', '2', '3', '4'];
 *      var appender = (a, b) => [a + b, a + b];
 *
 *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]
 * @symb R.mapAccum(f, a, [b, c, d]) = [
 *   f(f(f(a, b)[0], c)[0], d)[0],
 *   [
 *     f(a, b)[1],
 *     f(f(a, b)[0], c)[1],
 *     f(f(f(a, b)[0], c)[0], d)[1]
 *   ]
 * ]
 */module.exports=_curry3(function mapAccum(fn,acc,list){var idx=0;var len=list.length;var result=[];var tuple=[acc];while(idx<len){tuple=fn(tuple[0],list[idx]);result[idx]=tuple[1];idx+=1;}return[tuple[0],result];});

/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * The `mapAccumRight` function behaves like a combination of map and reduce; it
 * applies a function to each element of a list, passing an accumulating
 * parameter from right to left, and returning a final value of this
 * accumulator together with the new list.
 *
 * Similar to [`mapAccum`](#mapAccum), except moves through the input list from
 * the right to the left.
 *
 * The iterator function receives two arguments, *value* and *acc*, and should
 * return a tuple *[value, acc]*.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category List
 * @sig (x-> acc -> (y, acc)) -> acc -> [x] -> ([y], acc)
 * @param {Function} fn The function to be called on every element of the input `list`.
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.addIndex, R.mapAccum
 * @example
 *
 *      var digits = ['1', '2', '3', '4'];
 *      var append = (a, b) => [a + b, a + b];
 *
 *      R.mapAccumRight(append, 5, digits); //=> [['12345', '2345', '345', '45'], '12345']
 * @symb R.mapAccumRight(f, a, [b, c, d]) = [
 *   [
 *     f(b, f(c, f(d, a)[0])[0])[1],
 *     f(c, f(d, a)[0])[1],
 *     f(d, a)[1],
 *   ]
 *   f(b, f(c, f(d, a)[0])[0])[0],
 * ]
 */module.exports=_curry3(function mapAccumRight(fn,acc,list){var idx=list.length-1;var result=[];var tuple=[acc];while(idx>=0){tuple=fn(list[idx],tuple[0]);result[idx]=tuple[1];idx-=1;}return[result,tuple[0]];});

/***/ }),
/* 300 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduce=__webpack_require__(18);var keys=__webpack_require__(22);/**
 * An Object-specific version of [`map`](#map). The function is applied to three
 * arguments: *(value, key, obj)*. If only the value is significant, use
 * [`map`](#map) instead.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Object
 * @sig ((*, String, Object) -> *) -> Object -> Object
 * @param {Function} fn
 * @param {Object} obj
 * @return {Object}
 * @see R.map
 * @example
 *
 *      var values = { x: 1, y: 2, z: 3 };
 *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);
 *
 *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }
 */module.exports=_curry2(function mapObjIndexed(fn,obj){return _reduce(function(acc,key){acc[key]=fn(obj[key],key,obj);return acc;},{},keys(obj));});

/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Tests a regular expression against a String. Note that this function will
 * return an empty array when there are no matches. This differs from
 * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)
 * which returns `null` when there are no matches.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category String
 * @sig RegExp -> String -> [String | Undefined]
 * @param {RegExp} rx A regular expression.
 * @param {String} str The string to match against
 * @return {Array} The list of matches or empty array.
 * @see R.test
 * @example
 *
 *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']
 *      R.match(/a/, 'b'); //=> []
 *      R.match(/a/, null); //=> TypeError: null does not have a method named "match"
 */module.exports=_curry2(function match(rx,str){return str.match(rx)||[];});

/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isInteger=__webpack_require__(77);/**
 * `mathMod` behaves like the modulo operator should mathematically, unlike the
 * `%` operator (and by extension, [`R.modulo`](#modulo)). So while
 * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer
 * arguments, and returns NaN when the modulus is zero or negative.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Math
 * @sig Number -> Number -> Number
 * @param {Number} m The dividend.
 * @param {Number} p the modulus.
 * @return {Number} The result of `b mod a`.
 * @see R.modulo
 * @example
 *
 *      R.mathMod(-17, 5);  //=> 3
 *      R.mathMod(17, 5);   //=> 2
 *      R.mathMod(17, -5);  //=> NaN
 *      R.mathMod(17, 0);   //=> NaN
 *      R.mathMod(17.2, 5); //=> NaN
 *      R.mathMod(17, 5.3); //=> NaN
 *
 *      var clock = R.mathMod(R.__, 12);
 *      clock(15); //=> 3
 *      clock(24); //=> 0
 *
 *      var seventeenMod = R.mathMod(17);
 *      seventeenMod(3);  //=> 2
 *      seventeenMod(4);  //=> 1
 *      seventeenMod(10); //=> 7
 */module.exports=_curry2(function mathMod(m,p){if(!_isInteger(m)){return NaN;}if(!_isInteger(p)||p<1){return NaN;}return(m%p+p)%p;});

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Takes a function and two values, and returns whichever value produces the
 * larger result when passed to the provided function.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Relation
 * @sig Ord b => (a -> b) -> a -> a -> a
 * @param {Function} f
 * @param {*} a
 * @param {*} b
 * @return {*}
 * @see R.max, R.minBy
 * @example
 *
 *      //  square :: Number -> Number
 *      var square = n => n * n;
 *
 *      R.maxBy(square, -3, 2); //=> -3
 *
 *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5
 *      R.reduce(R.maxBy(square), 0, []); //=> 0
 */module.exports=_curry3(function maxBy(f,a,b){return f(b)>f(a)?b:a;});

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var mean=__webpack_require__(145);/**
 * Returns the median of the given list of numbers.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category Math
 * @sig [Number] -> Number
 * @param {Array} list
 * @return {Number}
 * @see R.mean
 * @example
 *
 *      R.median([2, 9, 7]); //=> 7
 *      R.median([7, 2, 10, 9]); //=> 8
 *      R.median([]); //=> NaN
 */module.exports=_curry1(function median(list){var len=list.length;if(len===0){return NaN;}var width=2-len%2;var idx=(len-width)/2;return mean(Array.prototype.slice.call(list,0).sort(function(a,b){return a<b?-1:a>b?1:0;}).slice(idx,idx+width));});

/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var memoizeWith=__webpack_require__(147);var toString=__webpack_require__(38);/**
 * Creates a new function that, when invoked, caches the result of calling `fn`
 * for a given argument set and returns the result. Subsequent calls to the
 * memoized `fn` with the same argument set will not result in an additional
 * call to `fn`; instead, the cached result for that set of arguments will be
 * returned.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (*... -> a) -> (*... -> a)
 * @param {Function} fn The function to memoize.
 * @return {Function} Memoized version of `fn`.
 * @see R.memoizeWith
 * @example
 *
 *      let count = 0;
 *      const factorial = R.memoize(n => {
 *        count += 1;
 *        return R.product(R.range(1, n + 1));
 *      });
 *      factorial(5); //=> 120
 *      factorial(5); //=> 120
 *      factorial(5); //=> 120
 *      count; //=> 1
 */module.exports=memoizeWith(function(){return toString(arguments);});

/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _assign=__webpack_require__(92);var _curry2=__webpack_require__(1);/**
 * Create a new object with the own properties of the first object merged with
 * the own properties of the second object. If a key exists in both objects,
 * the value from the second object will be used.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {k: v} -> {k: v} -> {k: v}
 * @param {Object} l
 * @param {Object} r
 * @return {Object}
 * @see R.mergeDeepRight, R.mergeWith, R.mergeWithKey
 * @example
 *
 *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });
 *      //=> { 'name': 'fred', 'age': 40 }
 *
 *      var resetToDefault = R.merge(R.__, {x: 0});
 *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}
 * @symb R.merge({ x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: 5, z: 3 }
 */module.exports=_curry2(function merge(l,r){return _assign({},l,r);});

/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _assign=__webpack_require__(92);var _curry1=__webpack_require__(3);/**
 * Merges a list of objects together into one object.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category List
 * @sig [{k: v}] -> {k: v}
 * @param {Array} list An array of objects
 * @return {Object} A merged object.
 * @see R.reduce
 * @example
 *
 *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}
 *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}
 * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }
 */module.exports=_curry1(function mergeAll(list){return _assign.apply(null,[{}].concat(list));});

/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var mergeDeepWithKey=__webpack_require__(63);/**
 * Creates a new object with the own properties of the first object merged with
 * the own properties of the second object. If a key exists in both objects:
 * - and both values are objects, the two values will be recursively merged
 * - otherwise the value from the first object will be used.
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Object
 * @sig {a} -> {a} -> {a}
 * @param {Object} lObj
 * @param {Object} rObj
 * @return {Object}
 * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey
 * @example
 *
 *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},
 *                      { age: 40, contact: { email: 'baa@example.com' }});
 *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}
 */module.exports=_curry2(function mergeDeepLeft(lObj,rObj){return mergeDeepWithKey(function(k,lVal,rVal){return lVal;},lObj,rObj);});

/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var mergeDeepWithKey=__webpack_require__(63);/**
 * Creates a new object with the own properties of the first object merged with
 * the own properties of the second object. If a key exists in both objects:
 * - and both values are objects, the two values will be recursively merged
 * - otherwise the value from the second object will be used.
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Object
 * @sig {a} -> {a} -> {a}
 * @param {Object} lObj
 * @param {Object} rObj
 * @return {Object}
 * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey
 * @example
 *
 *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},
 *                       { age: 40, contact: { email: 'baa@example.com' }});
 *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}
 */module.exports=_curry2(function mergeDeepRight(lObj,rObj){return mergeDeepWithKey(function(k,lVal,rVal){return rVal;},lObj,rObj);});

/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var mergeDeepWithKey=__webpack_require__(63);/**
 * Creates a new object with the own properties of the two provided objects.
 * If a key exists in both objects:
 * - and both associated values are also objects then the values will be
 *   recursively merged.
 * - otherwise the provided function is applied to associated values using the
 *   resulting value as the new value associated with the key.
 * If a key only exists in one object, the value will be associated with the key
 * of the resulting object.
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Object
 * @sig (a -> a -> a) -> {a} -> {a} -> {a}
 * @param {Function} fn
 * @param {Object} lObj
 * @param {Object} rObj
 * @return {Object}
 * @see R.mergeWith, R.mergeDeep, R.mergeDeepWithKey
 * @example
 *
 *      R.mergeDeepWith(R.concat,
 *                      { a: true, c: { values: [10, 20] }},
 *                      { b: true, c: { values: [15, 35] }});
 *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}
 */module.exports=_curry3(function mergeDeepWith(fn,lObj,rObj){return mergeDeepWithKey(function(k,lVal,rVal){return fn(lVal,rVal);},lObj,rObj);});

/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var mergeWithKey=__webpack_require__(93);/**
 * Creates a new object with the own properties of the two provided objects. If
 * a key exists in both objects, the provided function is applied to the values
 * associated with the key in each object, with the result being used as the
 * value associated with the key in the returned object.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Object
 * @sig (a -> a -> a) -> {a} -> {a} -> {a}
 * @param {Function} fn
 * @param {Object} l
 * @param {Object} r
 * @return {Object}
 * @see R.mergeDeepWith, R.merge, R.mergeWithKey
 * @example
 *
 *      R.mergeWith(R.concat,
 *                  { a: true, values: [10, 20] },
 *                  { b: true, values: [15, 35] });
 *      //=> { a: true, b: true, values: [10, 20, 15, 35] }
 */module.exports=_curry3(function mergeWith(fn,l,r){return mergeWithKey(function(_,_l,_r){return fn(_l,_r);},l,r);});

/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns the smaller of its two arguments.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> a
 * @param {*} a
 * @param {*} b
 * @return {*}
 * @see R.minBy, R.max
 * @example
 *
 *      R.min(789, 123); //=> 123
 *      R.min('a', 'b'); //=> 'a'
 */module.exports=_curry2(function min(a,b){return b<a?b:a;});

/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Takes a function and two values, and returns whichever value produces the
 * smaller result when passed to the provided function.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Relation
 * @sig Ord b => (a -> b) -> a -> a -> a
 * @param {Function} f
 * @param {*} a
 * @param {*} b
 * @return {*}
 * @see R.min, R.maxBy
 * @example
 *
 *      //  square :: Number -> Number
 *      var square = n => n * n;
 *
 *      R.minBy(square, -3, 2); //=> 2
 *
 *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1
 *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity
 */module.exports=_curry3(function minBy(f,a,b){return f(b)<f(a)?b:a;});

/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Divides the first parameter by the second and returns the remainder. Note
 * that this function preserves the JavaScript-style behavior for modulo. For
 * mathematical modulo see [`mathMod`](#mathMod).
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category Math
 * @sig Number -> Number -> Number
 * @param {Number} a The value to the divide.
 * @param {Number} b The pseudo-modulus
 * @return {Number} The result of `b % a`.
 * @see R.mathMod
 * @example
 *
 *      R.modulo(17, 3); //=> 2
 *      // JS behavior:
 *      R.modulo(-17, 3); //=> -2
 *      R.modulo(17, -3); //=> 2
 *
 *      var isOdd = R.modulo(R.__, 2);
 *      isOdd(42); //=> 0
 *      isOdd(21); //=> 1
 */module.exports=_curry2(function modulo(a,b){return a%b;});

/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Negates its argument.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Math
 * @sig Number -> Number
 * @param {Number} n
 * @return {Number}
 * @example
 *
 *      R.negate(42); //=> -42
 */module.exports=_curry1(function negate(n){return-n;});

/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _complement=__webpack_require__(124);var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xany=__webpack_require__(109);var any=__webpack_require__(108);/**
 * Returns `true` if no elements of the list match the predicate, `false`
 * otherwise.
 *
 * Dispatches to the `any` method of the second argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> Boolean
 * @param {Function} fn The predicate function.
 * @param {Array} list The array to consider.
 * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.
 * @see R.all, R.any
 * @example
 *
 *      var isEven = n => n % 2 === 0;
 *
 *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true
 *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false
 */module.exports=_curry2(_complement(_dispatchable(['any'],_xany,any)));

/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var curryN=__webpack_require__(14);var nth=__webpack_require__(39);/**
 * Returns a function which returns its nth argument.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category Function
 * @sig Number -> *... -> *
 * @param {Number} n
 * @return {Function}
 * @example
 *
 *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'
 *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'
 * @symb R.nthArg(-1)(a, b, c) = c
 * @symb R.nthArg(0)(a, b, c) = a
 * @symb R.nthArg(1)(a, b, c) = b
 */module.exports=_curry1(function nthArg(n){var arity=n<0?1:n+1;return curryN(arity,function(){return nth(n,arguments);});});

/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * `o` is a curried composition function that returns a unary function.
 * Like [`compose`](#compose), `o` performs right-to-left function composition.
 * Unlike [`compose`](#compose), the rightmost function passed to `o` will be
 * invoked with only one argument.
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Function
 * @sig (b -> c) -> (a -> b) -> a -> c
 * @param {Function} f
 * @param {Function} g
 * @return {Function}
 * @see R.compose, R.pipe
 * @example
 *
 *      var classyGreeting = name => "The name's " + name.last + ", " + name.first + " " + lastName
 *      var yellGreeting = R.o(R.toUpper, classyGreeting);
 *      yellGreeting({first: 'James', last: 'Bond'}); //=> "THE NAME'S BOND, JAMES BOND"
 *
 *      R.o(R.multiply(10), R.add(10))(-4) //=> 60
 *
 * @symb R.o(f, g, x) = f(g(x))
 */module.exports=_curry3(function o(f,g,x){return f(g(x));});

/***/ }),
/* 319 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _of=__webpack_require__(320);/**
 * Returns a singleton array containing the value provided.
 *
 * Note this `of` is different from the ES6 `of`; See
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Function
 * @sig a -> [a]
 * @param {*} x any value
 * @return {Array} An array wrapping `x`.
 * @example
 *
 *      R.of(null); //=> [null]
 *      R.of([42]); //=> [[42]]
 */module.exports=_curry1(_of);

/***/ }),
/* 320 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _of(x){return[x];};

/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _contains=__webpack_require__(31);var _curry2=__webpack_require__(1);/**
 * Returns a partial copy of an object omitting the keys specified.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig [String] -> {String: *} -> {String: *}
 * @param {Array} names an array of String property names to omit from the new object
 * @param {Object} obj The object to copy from
 * @return {Object} A new object with properties from `names` not on it.
 * @see R.pick
 * @example
 *
 *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}
 */module.exports=_curry2(function omit(names,obj){var result={};for(var prop in obj){if(!_contains(prop,names)){result[prop]=obj[prop];}}return result;});

/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _curry1=__webpack_require__(3);/**
 * Accepts a function `fn` and returns a function that guards invocation of
 * `fn` such that `fn` can only ever be called once, no matter how many times
 * the returned function is invoked. The first value calculated is returned in
 * subsequent invocations.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (a... -> b) -> (a... -> b)
 * @param {Function} fn The function to wrap in a call-only-once wrapper.
 * @return {Function} The wrapped function.
 * @example
 *
 *      var addOneOnce = R.once(x => x + 1);
 *      addOneOnce(10); //=> 11
 *      addOneOnce(addOneOnce(50)); //=> 11
 */module.exports=_curry1(function once(fn){var called=false;var result;return _arity(fn.length,function(){if(called){return result;}called=true;result=fn.apply(this,arguments);return result;});});

/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category List
 * @sig a -> b -> (a,b)
 * @param {*} fst
 * @param {*} snd
 * @return {Array}
 * @see R.objOf, R.of
 * @example
 *
 *      R.pair('foo', 'bar'); //=> ['foo', 'bar']
 */module.exports=_curry2(function pair(fst,snd){return[fst,snd];});

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _createPartialApplicator=__webpack_require__(150);/**
 * Takes a function `f` and a list of arguments, and returns a function `g`.
 * When applied, `g` returns the result of applying `f` to the arguments
 * provided initially followed by the arguments provided to `g`.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category Function
 * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)
 * @param {Function} f
 * @param {Array} args
 * @return {Function}
 * @see R.partialRight
 * @example
 *
 *      var multiply2 = (a, b) => a * b;
 *      var double = R.partial(multiply2, [2]);
 *      double(2); //=> 4
 *
 *      var greet = (salutation, title, firstName, lastName) =>
 *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';
 *
 *      var sayHello = R.partial(greet, ['Hello']);
 *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);
 *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'
 * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)
 */module.exports=_createPartialApplicator(_concat);

/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _createPartialApplicator=__webpack_require__(150);var flip=__webpack_require__(61);/**
 * Takes a function `f` and a list of arguments, and returns a function `g`.
 * When applied, `g` returns the result of applying `f` to the arguments
 * provided to `g` followed by the arguments provided initially.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category Function
 * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)
 * @param {Function} f
 * @param {Array} args
 * @return {Function}
 * @see R.partial
 * @example
 *
 *      var greet = (salutation, title, firstName, lastName) =>
 *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';
 *
 *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);
 *
 *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'
 * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)
 */module.exports=_createPartialApplicator(flip(_concat));

/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var filter=__webpack_require__(83);var juxt=__webpack_require__(142);var reject=__webpack_require__(58);/**
 * Takes a predicate and a list or other `Filterable` object and returns the
 * pair of filterable objects of the same type of elements which do and do not
 * satisfy, the predicate, respectively. Filterable objects include plain objects or any object
 * that has a filter method such as `Array`.
 *
 * @func
 * @memberOf R
 * @since v0.1.4
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]
 * @param {Function} pred A predicate to determine which side the element belongs to.
 * @param {Array} filterable the list (or other filterable) to partition.
 * @return {Array} An array, containing first the subset of elements that satisfy the
 *         predicate, and second the subset of elements that do not satisfy.
 * @see R.filter, R.reject
 * @example
 *
 *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);
 *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]
 *
 *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });
 *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]
 */module.exports=juxt([filter,reject]);

/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var equals=__webpack_require__(19);var path=__webpack_require__(41);/**
 * Determines whether a nested path on an object has a specific value, in
 * [`R.equals`](#equals) terms. Most likely used to filter a list.
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Relation
 * @typedefn Idx = String | Int
 * @sig [Idx] -> a -> {a} -> Boolean
 * @param {Array} path The path of the nested property to use
 * @param {*} val The value to compare the nested property with
 * @param {Object} obj The object to check the nested property in
 * @return {Boolean} `true` if the value equals the nested object property,
 *         `false` otherwise.
 * @example
 *
 *      var user1 = { address: { zipCode: 90210 } };
 *      var user2 = { address: { zipCode: 55555 } };
 *      var user3 = { name: 'Bob' };
 *      var users = [ user1, user2, user3 ];
 *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);
 *      R.filter(isFamous, users); //=> [ user1 ]
 */module.exports=_curry3(function pathEq(_path,val,obj){return equals(path(_path,obj),val);});

/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var defaultTo=__webpack_require__(127);var path=__webpack_require__(41);/**
 * If the given, non-null object has a value at the given path, returns the
 * value at that path. Otherwise returns the provided default value.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category Object
 * @typedefn Idx = String | Int
 * @sig a -> [Idx] -> {a} -> a
 * @param {*} d The default value.
 * @param {Array} p The path to use.
 * @param {Object} obj The object to retrieve the nested property from.
 * @return {*} The data at `path` of the supplied object or the default value.
 * @example
 *
 *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2
 *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> "N/A"
 */module.exports=_curry3(function pathOr(d,p,obj){return defaultTo(d,path(p,obj));});

/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var path=__webpack_require__(41);/**
 * Returns `true` if the specified object property at given path satisfies the
 * given predicate; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Logic
 * @typedefn Idx = String | Int
 * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean
 * @param {Function} pred
 * @param {Array} propPath
 * @param {*} obj
 * @return {Boolean}
 * @see R.propSatisfies, R.path
 * @example
 *
 *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true
 */module.exports=_curry3(function pathSatisfies(pred,propPath,obj){return propPath.length>0&&pred(path(propPath,obj));});

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns a partial copy of an object containing only the keys specified. If
 * the key does not exist, the property is ignored.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig [k] -> {k: v} -> {k: v}
 * @param {Array} names an array of String property names to copy onto a new object
 * @param {Object} obj The object to copy from
 * @return {Object} A new object with only properties from `names` on it.
 * @see R.omit, R.props
 * @example
 *
 *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}
 *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}
 */module.exports=_curry2(function pick(names,obj){var result={};var idx=0;while(idx<names.length){if(names[idx]in obj){result[names[idx]]=obj[names[idx]];}idx+=1;}return result;});

/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns a partial copy of an object containing only the keys that satisfy
 * the supplied predicate.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Object
 * @sig (v, k -> Boolean) -> {k: v} -> {k: v}
 * @param {Function} pred A predicate to determine whether or not a key
 *        should be included on the output object.
 * @param {Object} obj The object to copy from
 * @return {Object} A new object with only properties that satisfy `pred`
 *         on it.
 * @see R.pick, R.filter
 * @example
 *
 *      var isUpperCase = (val, key) => key.toUpperCase() === key;
 *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}
 */module.exports=_curry2(function pickBy(test,obj){var result={};for(var prop in obj){if(test(obj[prop],prop,obj)){result[prop]=obj[prop];}}return result;});

/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var composeK=__webpack_require__(120);var reverse=__webpack_require__(57);/**
 * Returns the left-to-right Kleisli composition of the provided functions,
 * each of which must return a value of a type supported by [`chain`](#chain).
 *
 * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category Function
 * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)
 * @param {...Function}
 * @return {Function}
 * @see R.composeK
 * @example
 *
 *      //  parseJson :: String -> Maybe *
 *      //  get :: String -> Object -> Maybe *
 *
 *      //  getStateCode :: Maybe String -> Maybe String
 *      var getStateCode = R.pipeK(
 *        parseJson,
 *        get('user'),
 *        get('address'),
 *        get('state'),
 *        R.compose(Maybe.of, R.toUpper)
 *      );
 *
 *      getStateCode('{"user":{"address":{"state":"ny"}}}');
 *      //=> Just('NY')
 *      getStateCode('[Invalid JSON]');
 *      //=> Nothing()
 * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))
 */module.exports=function pipeK(){if(arguments.length===0){throw new Error('pipeK requires at least one argument');}return composeK.apply(this,reverse(arguments));};

/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var multiply=__webpack_require__(148);var reduce=__webpack_require__(23);/**
 * Multiplies together all the elements of a list.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Math
 * @sig [Number] -> Number
 * @param {Array} list An array of numbers
 * @return {Number} The product of all the numbers in the list.
 * @see R.reduce
 * @example
 *
 *      R.product([2,4,6,8,100,1]); //=> 38400
 */module.exports=reduce(multiply,1);

/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _map=__webpack_require__(50);var identity=__webpack_require__(88);var pickAll=__webpack_require__(151);var useWith=__webpack_require__(153);/**
 * Reasonable analog to SQL `select` statement.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @category Relation
 * @sig [k] -> [{k: v}] -> [{k: v}]
 * @param {Array} props The property names to project
 * @param {Array} objs The objects to query
 * @return {Array} An array of objects with just the `props` properties.
 * @example
 *
 *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};
 *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};
 *      var kids = [abby, fred];
 *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]
 */module.exports=useWith(_map,[pickAll,identity]);// passing `identity` gives correct arity

/***/ }),
/* 335 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var equals=__webpack_require__(19);/**
 * Returns `true` if the specified object property is equal, in
 * [`R.equals`](#equals) terms, to the given value; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig String -> a -> Object -> Boolean
 * @param {String} name
 * @param {*} val
 * @param {*} obj
 * @return {Boolean}
 * @see R.equals, R.propSatisfies
 * @example
 *
 *      var abby = {name: 'Abby', age: 7, hair: 'blond'};
 *      var fred = {name: 'Fred', age: 12, hair: 'brown'};
 *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};
 *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};
 *      var kids = [abby, fred, rusty, alois];
 *      var hasBrownHair = R.propEq('hair', 'brown');
 *      R.filter(hasBrownHair, kids); //=> [fred, rusty]
 */module.exports=_curry3(function propEq(name,val,obj){return equals(val,obj[name]);});

/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var is=__webpack_require__(141);/**
 * Returns `true` if the specified object property is of the given type;
 * `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category Type
 * @sig Type -> String -> Object -> Boolean
 * @param {Function} type
 * @param {String} name
 * @param {*} obj
 * @return {Boolean}
 * @see R.is, R.propSatisfies
 * @example
 *
 *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true
 *      R.propIs(Number, 'x', {x: 'foo'});    //=> false
 *      R.propIs(Number, 'x', {});            //=> false
 */module.exports=_curry3(function propIs(type,name,obj){return is(type,obj[name]);});

/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var _has=__webpack_require__(15);/**
 * If the given, non-null object has an own property with the specified name,
 * returns the value of that property. Otherwise returns the provided default
 * value.
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category Object
 * @sig a -> String -> Object -> a
 * @param {*} val The default value.
 * @param {String} p The name of the property to return.
 * @param {Object} obj The object to query.
 * @return {*} The value of given property of the supplied object or the default value.
 * @example
 *
 *      var alice = {
 *        name: 'ALICE',
 *        age: 101
 *      };
 *      var favorite = R.prop('favoriteLibrary');
 *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');
 *
 *      favorite(alice);  //=> undefined
 *      favoriteWithDefault(alice);  //=> 'Ramda'
 */module.exports=_curry3(function propOr(val,p,obj){return obj!=null&&_has(p,obj)?obj[p]:val;});

/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Returns `true` if the specified object property satisfies the given
 * predicate; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category Logic
 * @sig (a -> Boolean) -> String -> {String: a} -> Boolean
 * @param {Function} pred
 * @param {String} name
 * @param {*} obj
 * @return {Boolean}
 * @see R.propEq, R.propIs
 * @example
 *
 *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true
 */module.exports=_curry3(function propSatisfies(pred,name,obj){return pred(obj[name]);});

/***/ }),
/* 339 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Acts as multiple `prop`: array of keys in, array of values out. Preserves
 * order.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig [k] -> {k: v} -> [v]
 * @param {Array} ps The property names to fetch
 * @param {Object} obj The object to query
 * @return {Array} The corresponding values or partially applied function.
 * @example
 *
 *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]
 *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]
 *
 *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));
 *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'
 */module.exports=_curry2(function props(ps,obj){var len=ps.length;var out=[];var idx=0;while(idx<len){out[idx]=obj[ps[idx]];idx+=1;}return out;});

/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _isNumber=__webpack_require__(144);/**
 * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> Number -> [Number]
 * @param {Number} from The first number in the list.
 * @param {Number} to One more than the last number in the list.
 * @return {Array} The list of numbers in tthe set `[a, b)`.
 * @example
 *
 *      R.range(1, 5);    //=> [1, 2, 3, 4]
 *      R.range(50, 53);  //=> [50, 51, 52]
 */module.exports=_curry2(function range(from,to){if(!(_isNumber(from)&&_isNumber(to))){throw new TypeError('Both arguments to range must be numbers');}var result=[];var n=from;while(n<to){result.push(n);n+=1;}return result;});

/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curryN=__webpack_require__(49);var _reduce=__webpack_require__(18);var _reduced=__webpack_require__(28);/**
 * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating
 * through the list, successively calling the iterator function. `reduceWhile`
 * also takes a predicate that is evaluated before each step. If the predicate
 * returns `false`, it "short-circuits" the iteration and returns the current
 * value of the accumulator.
 *
 * @func
 * @memberOf R
 * @since v0.22.0
 * @category List
 * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a
 * @param {Function} pred The predicate. It is passed the accumulator and the
 *        current element.
 * @param {Function} fn The iterator function. Receives two values, the
 *        accumulator and the current element.
 * @param {*} a The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.reduce, R.reduced
 * @example
 *
 *      var isOdd = (acc, x) => x % 2 === 1;
 *      var xs = [1, 3, 5, 60, 777, 800];
 *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9
 *
 *      var ys = [2, 4, 6]
 *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111
 */module.exports=_curryN(4,[],function _reduceWhile(pred,fn,a,list){return _reduce(function(acc,x){return pred(acc,x)?fn(acc,x):_reduced(acc);},a,list);});

/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _reduced=__webpack_require__(28);/**
 * Returns a value wrapped to indicate that it is the final value of the reduce
 * and transduce functions. The returned value should be considered a black
 * box: the internal structure is not guaranteed to be stable.
 *
 * Note: this optimization is unavailable to functions not explicitly listed
 * above. For instance, it is not currently supported by
 * [`reduceRight`](#reduceRight).
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category List
 * @sig a -> *
 * @param {*} x The final value of the reduce.
 * @return {*} The wrapped value.
 * @see R.reduce, R.transduce
 * @example
 *
 *     R.reduce(
 *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),
 *       [],
 *       [1, 2, 3, 4, 5]) // [1, 2, 3]
 */module.exports=_curry1(_reduced);

/***/ }),
/* 343 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var always=__webpack_require__(33);var times=__webpack_require__(155);/**
 * Returns a fixed list of size `n` containing a specified identical value.
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category List
 * @sig a -> n -> [a]
 * @param {*} value The value to repeat.
 * @param {Number} n The desired size of the output list.
 * @return {Array} A new array containing `n` `value`s.
 * @see R.times
 * @example
 *
 *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']
 *
 *      var obj = {};
 *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]
 *      repeatedObjs[0] === repeatedObjs[1]; //=> true
 * @symb R.repeat(a, 0) = []
 * @symb R.repeat(a, 1) = [a]
 * @symb R.repeat(a, 2) = [a, a]
 */module.exports=_curry2(function repeat(value,n){return times(always(value),n);});

/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Replace a substring or regex match in a string with a replacement.
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category String
 * @sig RegExp|String -> String -> String -> String
 * @param {RegExp|String} pattern A regular expression or a substring to match.
 * @param {String} replacement The string to replace the matches with.
 * @param {String} str The String to do the search and replacement in.
 * @return {String} The result.
 * @example
 *
 *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'
 *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'
 *
 *      // Use the "g" (global) flag to replace all occurrences:
 *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'
 */module.exports=_curry3(function replace(regex,replacement,str){return str.replace(regex,replacement);});

/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Scan is similar to [`reduce`](#reduce), but returns a list of successively
 * reduced values from the left
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category List
 * @sig (a,b -> a) -> a -> [b] -> [a]
 * @param {Function} fn The iterator function. Receives two values, the accumulator and the
 *        current element from the array
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {Array} A list of all intermediately reduced values.
 * @see R.reduce
 * @example
 *
 *      var numbers = [1, 2, 3, 4];
 *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]
 * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]
 */module.exports=_curry3(function scan(fn,acc,list){var idx=0;var len=list.length;var result=[acc];while(idx<len){acc=fn(acc,list[idx]);result[idx+1]=acc;idx+=1;}return result;});

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var always=__webpack_require__(33);var over=__webpack_require__(149);/**
 * Returns the result of "setting" the portion of the given data structure
 * focused by the given lens to the given value.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category Object
 * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s
 * @sig Lens s a -> a -> s -> s
 * @param {Lens} lens
 * @param {*} v
 * @param {*} x
 * @return {*}
 * @see R.prop, R.lensIndex, R.lensProp
 * @example
 *
 *      var xLens = R.lensProp('x');
 *
 *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}
 *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}
 */module.exports=_curry3(function set(lens,v,x){return over(lens,always(v),x);});

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns a copy of the list, sorted according to the comparator function,
 * which should accept two values at a time and return a negative number if the
 * first value is smaller, a positive number if it's larger, and zero if they
 * are equal. Please note that this is a **copy** of the list. It does not
 * modify the original.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a,a -> Number) -> [a] -> [a]
 * @param {Function} comparator A sorting function :: a -> b -> Int
 * @param {Array} list The list to sort
 * @return {Array} a new array with its elements sorted by the comparator function.
 * @example
 *
 *      var diff = function(a, b) { return a - b; };
 *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]
 */module.exports=_curry2(function sort(comparator,list){return Array.prototype.slice.call(list,0).sort(comparator);});

/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Sorts the list according to the supplied function.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord b => (a -> b) -> [a] -> [a]
 * @param {Function} fn
 * @param {Array} list The list to sort.
 * @return {Array} A new list sorted by the keys generated by `fn`.
 * @example
 *
 *      var sortByFirstItem = R.sortBy(R.prop(0));
 *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));
 *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];
 *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]
 *      var alice = {
 *        name: 'ALICE',
 *        age: 101
 *      };
 *      var bob = {
 *        name: 'Bob',
 *        age: -10
 *      };
 *      var clara = {
 *        name: 'clara',
 *        age: 314.159
 *      };
 *      var people = [clara, bob, alice];
 *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]
 */module.exports=_curry2(function sortBy(fn,list){return Array.prototype.slice.call(list,0).sort(function(a,b){var aa=fn(a);var bb=fn(b);return aa<bb?-1:aa>bb?1:0;});});

/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Sorts a list according to a list of comparators.
 *
 * @func
 * @memberOf R
 * @since v0.23.0
 * @category Relation
 * @sig [a -> a -> Number] -> [a] -> [a]
 * @param {Array} functions A list of comparator functions.
 * @param {Array} list The list to sort.
 * @return {Array} A new list sorted according to the comarator functions.
 * @example
 *
 *      var alice = {
 *        name: 'alice',
 *        age: 40
 *      };
 *      var bob = {
 *        name: 'bob',
 *        age: 30
 *      };
 *      var clara = {
 *        name: 'clara',
 *        age: 40
 *      };
 *      var people = [clara, bob, alice];
 *      var ageNameSort = R.sortWith([
 *        R.descend(R.prop('age')),
 *        R.ascend(R.prop('name'))
 *      ]);
 *      ageNameSort(people); //=> [alice, clara, bob]
 */module.exports=_curry2(function sortWith(fns,list){return Array.prototype.slice.call(list,0).sort(function(a,b){var result=0;var i=0;while(result===0&&i<fns.length){result=fns[i](a,b);i+=1;}return result;});});

/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var invoker=__webpack_require__(40);/**
 * Splits a string into an array of strings based on the given
 * separator.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category String
 * @sig (String | RegExp) -> String -> [String]
 * @param {String|RegExp} sep The pattern.
 * @param {String} str The string to separate into an array.
 * @return {Array} The array of strings from `str` separated by `str`.
 * @see R.join
 * @example
 *
 *      var pathComponents = R.split('/');
 *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']
 *
 *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']
 */module.exports=invoker(1,'split');

/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var length=__webpack_require__(143);var slice=__webpack_require__(30);/**
 * Splits a given list or string at a given index.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category List
 * @sig Number -> [a] -> [[a], [a]]
 * @sig Number -> String -> [String, String]
 * @param {Number} index The index where the array/string is split.
 * @param {Array|String} array The array/string to be split.
 * @return {Array}
 * @example
 *
 *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]
 *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']
 *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']
 */module.exports=_curry2(function splitAt(index,array){return[slice(0,index,array),slice(index,length(array),array)];});

/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var slice=__webpack_require__(30);/**
 * Splits a collection into slices of the specified length.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig Number -> [a] -> [[a]]
 * @sig Number -> String -> [String]
 * @param {Number} n
 * @param {Array} list
 * @return {Array}
 * @example
 *
 *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]
 *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']
 */module.exports=_curry2(function splitEvery(n,list){if(n<=0){throw new Error('First argument to splitEvery must be a positive integer');}var result=[];var idx=0;while(idx<list.length){result.push(slice(idx,idx+=n,list));}return result;});

/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Takes a list and a predicate and returns a pair of lists with the following properties:
 *
 *  - the result of concatenating the two output lists is equivalent to the input list;
 *  - none of the elements of the first output list satisfies the predicate; and
 *  - if the second output list is non-empty, its first element satisfies the predicate.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> [[a], [a]]
 * @param {Function} pred The predicate that determines where the array is split.
 * @param {Array} list The array to be split.
 * @return {Array}
 * @example
 *
 *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]
 */module.exports=_curry2(function splitWhen(pred,list){var idx=0;var len=list.length;var prefix=[];while(idx<len&&!pred(list[idx])){prefix.push(list[idx]);idx+=1;}return[prefix,Array.prototype.slice.call(list,idx)];});

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var equals=__webpack_require__(19);var take=__webpack_require__(87);/**
 * Checks if a list starts with the provided values
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category List
 * @sig [a] -> Boolean
 * @sig String -> Boolean
 * @param {*} prefix
 * @param {*} list
 * @return {Boolean}
 * @example
 *
 *      R.startsWith('a', 'abc')                //=> true
 *      R.startsWith('b', 'abc')                //=> false
 *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true
 *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false
 */module.exports=_curry2(function(prefix,list){return equals(take(prefix.length,list),prefix);});

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Subtracts its second argument from its first argument.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Math
 * @sig Number -> Number -> Number
 * @param {Number} a The first value.
 * @param {Number} b The second value.
 * @return {Number} The result of `a - b`.
 * @see R.add
 * @example
 *
 *      R.subtract(10, 8); //=> 2
 *
 *      var minus5 = R.subtract(R.__, 5);
 *      minus5(17); //=> 12
 *
 *      var complementaryAngle = R.subtract(90);
 *      complementaryAngle(30); //=> 60
 *      complementaryAngle(72); //=> 18
 */module.exports=_curry2(function subtract(a,b){return Number(a)-Number(b);});

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var concat=__webpack_require__(82);var difference=__webpack_require__(128);/**
 * Finds the set (i.e. no duplicates) of all elements contained in the first or
 * second list, but not both.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Relation
 * @sig [*] -> [*] -> [*]
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The elements in `list1` or `list2`, but not both.
 * @see R.symmetricDifferenceWith, R.difference, R.differenceWith
 * @example
 *
 *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]
 *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]
 */module.exports=_curry2(function symmetricDifference(list1,list2){return concat(difference(list1,list2),difference(list2,list1));});

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var concat=__webpack_require__(82);var differenceWith=__webpack_require__(129);/**
 * Finds the set (i.e. no duplicates) of all elements contained in the first or
 * second list, but not both. Duplication is determined according to the value
 * returned by applying the supplied predicate to two list elements.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Relation
 * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]
 * @param {Function} pred A predicate used to test whether two items are equal.
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The elements in `list1` or `list2`, but not both.
 * @see R.symmetricDifference, R.difference, R.differenceWith
 * @example
 *
 *      var eqA = R.eqBy(R.prop('a'));
 *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];
 *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];
 *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]
 */module.exports=_curry3(function symmetricDifferenceWith(pred,list1,list2){return concat(differenceWith(pred,list1,list2),differenceWith(pred,list2,list1));});

/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns a new list containing the last `n` elements of a given list, passing
 * each value to the supplied predicate function, and terminating when the
 * predicate function returns `false`. Excludes the element that caused the
 * predicate function to fail. The predicate function is passed one argument:
 * *(value)*.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> [a]
 * @param {Function} fn The function called per iteration.
 * @param {Array} list The collection to iterate over.
 * @return {Array} A new array.
 * @see R.dropLastWhile, R.addIndex
 * @example
 *
 *      var isNotOne = x => x !== 1;
 *
 *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]
 */module.exports=_curry2(function takeLastWhile(fn,list){var idx=list.length-1;while(idx>=0&&fn(list[idx])){idx-=1;}return Array.prototype.slice.call(list,idx+1);});

/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _dispatchable=__webpack_require__(7);var _xtakeWhile=__webpack_require__(360);/**
 * Returns a new list containing the first `n` elements of a given list,
 * passing each value to the supplied predicate function, and terminating when
 * the predicate function returns `false`. Excludes the element that caused the
 * predicate function to fail. The predicate function is passed one argument:
 * *(value)*.
 *
 * Dispatches to the `takeWhile` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a -> Boolean) -> [a] -> [a]
 * @param {Function} fn The function called per iteration.
 * @param {Array} list The collection to iterate over.
 * @return {Array} A new array.
 * @see R.dropWhile, R.transduce, R.addIndex
 * @example
 *
 *      var isNotFour = x => x !== 4;
 *
 *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]
 */module.exports=_curry2(_dispatchable(['takeWhile'],_xtakeWhile,function takeWhile(fn,list){var idx=0;var len=list.length;while(idx<len&&fn(list[idx])){idx+=1;}return Array.prototype.slice.call(list,0,idx);}));

/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var _reduced=__webpack_require__(28);var _xfBase=__webpack_require__(8);module.exports=function(){function XTakeWhile(f,xf){this.xf=xf;this.f=f;}XTakeWhile.prototype['@@transducer/init']=_xfBase.init;XTakeWhile.prototype['@@transducer/result']=_xfBase.result;XTakeWhile.prototype['@@transducer/step']=function(result,input){return this.f(input)?this.xf['@@transducer/step'](result,input):_reduced(result);};return _curry2(function _xtakeWhile(f,xf){return new XTakeWhile(f,xf);});}();

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Runs the given function with the supplied object, then returns the object.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (a -> *) -> a -> a
 * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.
 * @param {*} x
 * @return {*} `x`.
 * @example
 *
 *      var sayX = x => console.log('x is ' + x);
 *      R.tap(sayX, 100); //=> 100
 *      // logs 'x is 100'
 * @symb R.tap(f, a) = a
 */module.exports=_curry2(function tap(fn,x){fn(x);return x;});

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _cloneRegExp=__webpack_require__(117);var _curry2=__webpack_require__(1);var _isRegExp=__webpack_require__(363);var toString=__webpack_require__(38);/**
 * Determines whether a given string matches a given regular expression.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category String
 * @sig RegExp -> String -> Boolean
 * @param {RegExp} pattern
 * @param {String} str
 * @return {Boolean}
 * @see R.match
 * @example
 *
 *      R.test(/^x/, 'xyz'); //=> true
 *      R.test(/^y/, 'xyz'); //=> false
 */module.exports=_curry2(function test(pattern,str){if(!_isRegExp(pattern)){throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received '+toString(pattern));}return _cloneRegExp(pattern).test(str);});

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
module.exports=function _isRegExp(x){return Object.prototype.toString.call(x)==='[object RegExp]';};

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var invoker=__webpack_require__(40);/**
 * The lower case version of a string.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category String
 * @sig String -> String
 * @param {String} str The string to lower case.
 * @return {String} The lower case version of `str`.
 * @see R.toUpper
 * @example
 *
 *      R.toLower('XYZ'); //=> 'xyz'
 */module.exports=invoker(0,'toLowerCase');

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var _has=__webpack_require__(15);/**
 * Converts an object into an array of key, value arrays. Only the object's
 * own properties are used.
 * Note that the order of the output array is not guaranteed to be consistent
 * across different JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.4.0
 * @category Object
 * @sig {String: *} -> [[String,*]]
 * @param {Object} obj The object to extract from
 * @return {Array} An array of key, value arrays from the object's own properties.
 * @see R.fromPairs
 * @example
 *
 *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]
 */module.exports=_curry1(function toPairs(obj){var pairs=[];for(var prop in obj){if(_has(prop,obj)){pairs[pairs.length]=[prop,obj[prop]];}}return pairs;});

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Converts an object into an array of key, value arrays. The object's own
 * properties and prototype properties are used. Note that the order of the
 * output array is not guaranteed to be consistent across different JS
 * platforms.
 *
 * @func
 * @memberOf R
 * @since v0.4.0
 * @category Object
 * @sig {String: *} -> [[String,*]]
 * @param {Object} obj The object to extract from
 * @return {Array} An array of key, value arrays from the object's own
 *         and prototype properties.
 * @example
 *
 *      var F = function() { this.x = 'X'; };
 *      F.prototype.y = 'Y';
 *      var f = new F();
 *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]
 */module.exports=_curry1(function toPairsIn(obj){var pairs=[];for(var prop in obj){pairs[pairs.length]=[prop,obj[prop]];}return pairs;});

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var invoker=__webpack_require__(40);/**
 * The upper case version of a string.
 *
 * @func
 * @memberOf R
 * @since v0.9.0
 * @category String
 * @sig String -> String
 * @param {String} str The string to upper case.
 * @return {String} The upper case version of `str`.
 * @see R.toLower
 * @example
 *
 *      R.toUpper('abc'); //=> 'ABC'
 */module.exports=invoker(0,'toUpperCase');

/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _reduce=__webpack_require__(18);var _xwrap=__webpack_require__(104);var curryN=__webpack_require__(14);/**
 * Initializes a transducer using supplied iterator function. Returns a single
 * item by iterating through the list, successively calling the transformed
 * iterator function and passing it an accumulator value and the current value
 * from the array, and then passing the result to the next call.
 *
 * The iterator function receives two values: *(acc, value)*. It will be
 * wrapped as a transformer to initialize the transducer. A transformer can be
 * passed directly in place of an iterator function. In both cases, iteration
 * may be stopped early with the [`R.reduced`](#reduced) function.
 *
 * A transducer is a function that accepts a transformer and returns a
 * transformer and can be composed directly.
 *
 * A transformer is an an object that provides a 2-arity reducing iterator
 * function, step, 0-arity initial value function, init, and 1-arity result
 * extraction function, result. The step function is used as the iterator
 * function in reduce. The result function is used to convert the final
 * accumulator into the return type and in most cases is
 * [`R.identity`](#identity). The init function can be used to provide an
 * initial accumulator, but is ignored by transduce.
 *
 * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category List
 * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a
 * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.
 * @param {Function} fn The iterator function. Receives two values, the accumulator and the
 *        current element from the array. Wrapped as transformer, if necessary, and used to
 *        initialize the transducer
 * @param {*} acc The initial accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.reduce, R.reduced, R.into
 * @example
 *
 *      var numbers = [1, 2, 3, 4];
 *      var transducer = R.compose(R.map(R.add(1)), R.take(2));
 *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]
 *
 *      var isOdd = (x) => x % 2 === 1;
 *      var firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));
 *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]
 */module.exports=curryN(4,function transduce(xf,fn,acc,list){return _reduce(xf(typeof fn==='function'?_xwrap(fn):fn),acc,list);});

/***/ }),
/* 369 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Transposes the rows and columns of a 2D list.
 * When passed a list of `n` lists of length `x`,
 * returns a list of `x` lists of length `n`.
 *
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category List
 * @sig [[a]] -> [[a]]
 * @param {Array} list A 2D list
 * @return {Array} A 2D list
 * @example
 *
 *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]
 *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]
 *
 *      // If some of the rows are shorter than the following rows, their elements are skipped:
 *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]
 * @symb R.transpose([[a], [b], [c]]) = [a, b, c]
 * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]
 * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]
 */module.exports=_curry1(function transpose(outerlist){var i=0;var result=[];while(i<outerlist.length){var innerlist=outerlist[i];var j=0;while(j<innerlist.length){if(typeof result[j]==='undefined'){result[j]=[];}result[j].push(innerlist[j]);j+=1;}i+=1;}return result;});

/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);var map=__webpack_require__(17);var sequence=__webpack_require__(156);/**
 * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning
 * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),
 * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative
 * into an Applicative of Traversable.
 *
 * Dispatches to the `sequence` method of the third argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category List
 * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)
 * @param {Function} of
 * @param {Function} f
 * @param {*} traversable
 * @return {*}
 * @see R.sequence
 * @example
 *
 *      // Returns `Nothing` if the given divisor is `0`
 *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)
 *
 *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])
 *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing
 */module.exports=_curry3(function traverse(of,f,traversable){return typeof traversable['fantasy-land/traverse']==='function'?traversable['fantasy-land/traverse'](f,of):sequence(of,map(f,traversable));});

/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Removes (strips) whitespace from both ends of the string.
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category String
 * @sig String -> String
 * @param {String} str The string to trim.
 * @return {String} Trimmed version of `str`.
 * @example
 *
 *      R.trim('   xyz  '); //=> 'xyz'
 *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']
 */module.exports=function(){var ws='\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003'+'\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028'+'\u2029\uFEFF';var zeroWidth='\u200B';var hasProtoTrim=typeof String.prototype.trim==='function';if(!hasProtoTrim||ws.trim()||!zeroWidth.trim()){return _curry1(function trim(str){var beginRx=new RegExp('^['+ws+']['+ws+']*');var endRx=new RegExp('['+ws+']['+ws+']*$');return str.replace(beginRx,'').replace(endRx,'');});}else{return _curry1(function trim(str){return str.trim();});}}();

/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _arity=__webpack_require__(21);var _concat=__webpack_require__(20);var _curry2=__webpack_require__(1);/**
 * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned
 * function evaluates the `tryer`; if it does not throw, it simply returns the
 * result. If the `tryer` *does* throw, the returned function evaluates the
 * `catcher` function and returns its result. Note that for effective
 * composition with this function, both the `tryer` and `catcher` functions
 * must return the same type of results.
 *
 * @func
 * @memberOf R
 * @since v0.20.0
 * @category Function
 * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)
 * @param {Function} tryer The function that may throw.
 * @param {Function} catcher The function that will be evaluated if `tryer` throws.
 * @return {Function} A new function that will catch exceptions and send then to the catcher.
 * @example
 *
 *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true
 *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false
 */module.exports=_curry2(function _tryCatch(tryer,catcher){return _arity(tryer.length,function(){try{return tryer.apply(this,arguments);}catch(e){return catcher.apply(this,_concat([e],arguments));}});});

/***/ }),
/* 373 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Takes a function `fn`, which takes a single array argument, and returns a
 * function which:
 *
 *   - takes any number of positional arguments;
 *   - passes these arguments to `fn` as an array; and
 *   - returns the result.
 *
 * In other words, `R.unapply` derives a variadic function from a function which
 * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Function
 * @sig ([*...] -> a) -> (*... -> a)
 * @param {Function} fn
 * @return {Function}
 * @see R.apply
 * @example
 *
 *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'
 * @symb R.unapply(f)(a, b) = f([a, b])
 */module.exports=_curry1(function unapply(fn){return function(){return fn(Array.prototype.slice.call(arguments,0));};});

/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);var nAry=__webpack_require__(53);/**
 * Wraps a function of any arity (including nullary) in a function that accepts
 * exactly 1 parameter. Any extraneous parameters will not be passed to the
 * supplied function.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category Function
 * @sig (* -> b) -> (a -> b)
 * @param {Function} fn The function to wrap.
 * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of
 *         arity 1.
 * @see R.binary, R.nAry
 * @example
 *
 *      var takesTwoArgs = function(a, b) {
 *        return [a, b];
 *      };
 *      takesTwoArgs.length; //=> 2
 *      takesTwoArgs(1, 2); //=> [1, 2]
 *
 *      var takesOneArg = R.unary(takesTwoArgs);
 *      takesOneArg.length; //=> 1
 *      // Only 1 argument is passed to the wrapped function
 *      takesOneArg(1, 2); //=> [1, undefined]
 * @symb R.unary(f)(a, b, c) = f(a)
 */module.exports=_curry1(function unary(fn){return nAry(1,fn);});

/***/ }),
/* 375 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var curryN=__webpack_require__(14);/**
 * Returns a function of arity `n` from a (manually) curried function.
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category Function
 * @sig Number -> (a -> b) -> (a -> c)
 * @param {Number} length The arity for the returned function.
 * @param {Function} fn The function to uncurry.
 * @return {Function} A new function.
 * @see R.curry
 * @example
 *
 *      var addFour = a => b => c => d => a + b + c + d;
 *
 *      var uncurriedAddFour = R.uncurryN(4, addFour);
 *      uncurriedAddFour(1, 2, 3, 4); //=> 10
 */module.exports=_curry2(function uncurryN(depth,fn){return curryN(depth,function(){var currentDepth=1;var value=fn;var idx=0;var endIdx;while(currentDepth<=depth&&typeof value==='function'){endIdx=currentDepth===depth?arguments.length:idx+value.length;value=value.apply(this,Array.prototype.slice.call(arguments,idx,endIdx));currentDepth+=1;idx=endIdx;}return value;});});

/***/ }),
/* 376 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Builds a list from a seed value. Accepts an iterator function, which returns
 * either false to stop iteration or an array of length 2 containing the value
 * to add to the resulting list and the seed to be used in the next call to the
 * iterator function.
 *
 * The iterator function receives one argument: *(seed)*.
 *
 * @func
 * @memberOf R
 * @since v0.10.0
 * @category List
 * @sig (a -> [b]) -> * -> [b]
 * @param {Function} fn The iterator function. receives one argument, `seed`, and returns
 *        either false to quit iteration or an array of length two to proceed. The element
 *        at index 0 of this array will be added to the resulting array, and the element
 *        at index 1 will be passed to the next call to `fn`.
 * @param {*} seed The seed value.
 * @return {Array} The final list.
 * @example
 *
 *      var f = n => n > 50 ? false : [-n, n + 10];
 *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]
 * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]
 */module.exports=_curry2(function unfold(fn,seed){var pair=fn(seed);var result=[];while(pair&&pair.length){result[result.length]=pair[0];pair=fn(pair[1]);}return result;});

/***/ }),
/* 377 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry2=__webpack_require__(1);var compose=__webpack_require__(80);var uniq=__webpack_require__(90);/**
 * Combines two lists into a set (i.e. no duplicates) composed of the elements
 * of each list.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig [*] -> [*] -> [*]
 * @param {Array} as The first list.
 * @param {Array} bs The second list.
 * @return {Array} The first and second lists concatenated, with
 *         duplicates removed.
 * @example
 *
 *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]
 */module.exports=_curry2(compose(uniq,_concat));

/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _concat=__webpack_require__(20);var _curry3=__webpack_require__(4);var uniqWith=__webpack_require__(91);/**
 * Combines two lists into a set (i.e. no duplicates) composed of the elements
 * of each list. Duplication is determined according to the value returned by
 * applying the supplied predicate to two list elements.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]
 * @param {Function} pred A predicate used to test whether two items are equal.
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The first and second lists concatenated, with
 *         duplicates removed.
 * @see R.union
 * @example
 *
 *      var l1 = [{a: 1}, {a: 2}];
 *      var l2 = [{a: 1}, {a: 4}];
 *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]
 */module.exports=_curry3(function unionWith(pred,list1,list2){return uniqWith(pred,_concat(list1,list2));});

/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Tests the final argument by passing it to the given predicate function. If
 * the predicate is not satisfied, the function will return the result of
 * calling the `whenFalseFn` function with the same argument. If the predicate
 * is satisfied, the argument is returned as is.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category Logic
 * @sig (a -> Boolean) -> (a -> a) -> a -> a
 * @param {Function} pred        A predicate function
 * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates
 *                               to a falsy value.
 * @param {*}        x           An object to test with the `pred` function and
 *                               pass to `whenFalseFn` if necessary.
 * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.
 * @see R.ifElse, R.when
 * @example
 *
 *      let safeInc = R.unless(R.isNil, R.inc);
 *      safeInc(null); //=> null
 *      safeInc(1); //=> 2
 */module.exports=_curry3(function unless(pred,whenFalseFn,x){return pred(x)?x:whenFalseFn(x);});

/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _identity=__webpack_require__(89);var chain=__webpack_require__(78);/**
 * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from
 * any [Chain](https://github.com/fantasyland/fantasy-land#chain).
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category List
 * @sig Chain c => c (c a) -> c a
 * @param {*} list
 * @return {*}
 * @see R.flatten, R.chain
 * @example
 *
 *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]
 *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]
 */module.exports=chain(_identity);

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Takes a predicate, a transformation function, and an initial value,
 * and returns a value of the same type as the initial value.
 * It does so by applying the transformation until the predicate is satisfied,
 * at which point it returns the satisfactory value.
 *
 * @func
 * @memberOf R
 * @since v0.20.0
 * @category Logic
 * @sig (a -> Boolean) -> (a -> a) -> a -> a
 * @param {Function} pred A predicate function
 * @param {Function} fn The iterator function
 * @param {*} init Initial value
 * @return {*} Final value that satisfies predicate
 * @example
 *
 *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128
 */module.exports=_curry3(function until(pred,fn,init){var val=init;while(!pred(val)){val=fn(val);}return val;});

/***/ }),
/* 382 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry1=__webpack_require__(3);/**
 * Returns a list of all the properties, including prototype properties, of the
 * supplied object.
 * Note that the order of the output array is not guaranteed to be consistent
 * across different JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category Object
 * @sig {k: v} -> [v]
 * @param {Object} obj The object to extract values from
 * @return {Array} An array of the values of the object's own and prototype properties.
 * @see R.values, R.keysIn
 * @example
 *
 *      var F = function() { this.x = 'X'; };
 *      F.prototype.y = 'Y';
 *      var f = new F();
 *      R.valuesIn(f); //=> ['X', 'Y']
 */module.exports=_curry1(function valuesIn(obj){var prop;var vs=[];for(prop in obj){vs[vs.length]=obj[prop];}return vs;});

/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Returns a "view" of the given data structure, determined by the given lens.
 * The lens's focus determines which portion of the data structure is visible.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category Object
 * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s
 * @sig Lens s a -> s -> a
 * @param {Lens} lens
 * @param {*} x
 * @return {*}
 * @see R.prop, R.lensIndex, R.lensProp
 * @example
 *
 *      var xLens = R.lensProp('x');
 *
 *      R.view(xLens, {x: 1, y: 2});  //=> 1
 *      R.view(xLens, {x: 4, y: 2});  //=> 4
 */module.exports=function(){// `Const` is a functor that effectively ignores the function given to `map`.
var Const=function Const(x){return{value:x,'fantasy-land/map':function fantasyLandMap(){return this;}};};return _curry2(function view(lens,x){// Using `Const` effectively ignores the setter function of the `lens`,
// leaving the value returned by the getter function unmodified.
return lens(Const)(x).value;});}();

/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Tests the final argument by passing it to the given predicate function. If
 * the predicate is satisfied, the function will return the result of calling
 * the `whenTrueFn` function with the same argument. If the predicate is not
 * satisfied, the argument is returned as is.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category Logic
 * @sig (a -> Boolean) -> (a -> a) -> a -> a
 * @param {Function} pred       A predicate function
 * @param {Function} whenTrueFn A function to invoke when the `condition`
 *                              evaluates to a truthy value.
 * @param {*}        x          An object to test with the `pred` function and
 *                              pass to `whenTrueFn` if necessary.
 * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.
 * @see R.ifElse, R.unless
 * @example
 *
 *      // truncate :: String -> String
 *      var truncate = R.when(
 *        R.propSatisfies(R.gt(R.__, 10), 'length'),
 *        R.pipe(R.take(10), R.append('…'), R.join(''))
 *      );
 *      truncate('12345');         //=> '12345'
 *      truncate('0123456789ABC'); //=> '0123456789…'
 */module.exports=_curry3(function when(pred,whenTrueFn,x){return pred(x)?whenTrueFn(x):x;});

/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);var equals=__webpack_require__(19);var map=__webpack_require__(17);var where=__webpack_require__(157);/**
 * Takes a spec object and a test object; returns true if the test satisfies
 * the spec, false otherwise. An object satisfies the spec if, for each of the
 * spec's own properties, accessing that property of the object gives the same
 * value (in [`R.equals`](#equals) terms) as accessing that property of the
 * spec.
 *
 * `whereEq` is a specialization of [`where`](#where).
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category Object
 * @sig {String: *} -> {String: *} -> Boolean
 * @param {Object} spec
 * @param {Object} testObj
 * @return {Boolean}
 * @see R.where
 * @example
 *
 *      // pred :: Object -> Boolean
 *      var pred = R.whereEq({a: 1, b: 2});
 *
 *      pred({a: 1});              //=> false
 *      pred({a: 1, b: 2});        //=> true
 *      pred({a: 1, b: 2, c: 3});  //=> true
 *      pred({a: 1, b: 1});        //=> false
 */module.exports=_curry2(function whereEq(spec,testObj){return where(map(equals,spec),testObj);});

/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _contains=__webpack_require__(31);var _curry2=__webpack_require__(1);var flip=__webpack_require__(61);var reject=__webpack_require__(58);/**
 * Returns a new list without values in the first argument.
 * [`R.equals`](#equals) is used to determine equality.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category List
 * @sig [a] -> [a] -> [a]
 * @param {Array} list1 The values to be removed from `list2`.
 * @param {Array} list2 The array to remove values from.
 * @return {Array} The new array without values in `list1`.
 * @see R.transduce, R.difference
 * @example
 *
 *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]
 */module.exports=_curry2(function(xs,list){return reject(flip(_contains)(xs),list);});

/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Creates a new list out of the two supplied by creating each possible pair
 * from the lists.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [b] -> [[a,b]]
 * @param {Array} as The first list.
 * @param {Array} bs The second list.
 * @return {Array} The list made by combining each possible pair from
 *         `as` and `bs` into pairs (`[a, b]`).
 * @example
 *
 *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]
 * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]
 */module.exports=_curry2(function xprod(a,b){// = xprodWith(prepend); (takes about 3 times as long...)
var idx=0;var ilen=a.length;var j;var jlen=b.length;var result=[];while(idx<ilen){j=0;while(j<jlen){result[result.length]=[a[idx],b[j]];j+=1;}idx+=1;}return result;});

/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Creates a new list out of the two supplied by pairing up equally-positioned
 * items from both lists. The returned list is truncated to the length of the
 * shorter of the two input lists.
 * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [b] -> [[a,b]]
 * @param {Array} list1 The first array to consider.
 * @param {Array} list2 The second array to consider.
 * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.
 * @example
 *
 *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]
 * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]
 */module.exports=_curry2(function zip(a,b){var rv=[];var idx=0;var len=Math.min(a.length,b.length);while(idx<len){rv[idx]=[a[idx],b[idx]];idx+=1;}return rv;});

/***/ }),
/* 389 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry2=__webpack_require__(1);/**
 * Creates a new object out of a list of keys and a list of values.
 * Key/value pairing is truncated to the length of the shorter of the two lists.
 * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category List
 * @sig [String] -> [*] -> {String: *}
 * @param {Array} keys The array that will be properties on the output object.
 * @param {Array} values The list of values on the output object.
 * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.
 * @example
 *
 *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}
 */module.exports=_curry2(function zipObj(keys,values){var idx=0;var len=Math.min(keys.length,values.length);var out={};while(idx<len){out[keys[idx]]=values[idx];idx+=1;}return out;});

/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _curry3=__webpack_require__(4);/**
 * Creates a new list out of the two supplied by applying the function to each
 * equally-positioned pair in the lists. The returned list is truncated to the
 * length of the shorter of the two input lists.
 *
 * @function
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig (a,b -> c) -> [a] -> [b] -> [c]
 * @param {Function} fn The function used to combine the two elements into one value.
 * @param {Array} list1 The first array to consider.
 * @param {Array} list2 The second array to consider.
 * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`
 *         using `fn`.
 * @example
 *
 *      var f = (x, y) => {
 *        // ...
 *      };
 *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);
 *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]
 * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]
 */module.exports=_curry3(function zipWith(fn,a,b){var rv=[];var idx=0;var len=Math.min(a.length,b.length);while(idx<len){rv[idx]=fn(a[idx],b[idx]);idx+=1;}return rv;});

/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Subscriber_1=__webpack_require__(2);var rxSubscriber_1=__webpack_require__(65);var Observer_1=__webpack_require__(161);function toSubscriber(nextOrObserver,error,complete){if(nextOrObserver){if(nextOrObserver instanceof Subscriber_1.Subscriber){return nextOrObserver;}if(nextOrObserver[rxSubscriber_1.rxSubscriber]){return nextOrObserver[rxSubscriber_1.rxSubscriber]();}}if(!nextOrObserver&&!error&&!complete){return new Subscriber_1.Subscriber(Observer_1.empty);}return new Subscriber_1.Subscriber(nextOrObserver,error,complete);}exports.toSubscriber=toSubscriber;//# sourceMappingURL=toSubscriber.js.map

/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var bindCallback_1=__webpack_require__(393);Observable_1.Observable.bindCallback=bindCallback_1.bindCallback;//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var BoundCallbackObservable_1=__webpack_require__(394);exports.bindCallback=BoundCallbackObservable_1.BoundCallbackObservable.create;//# sourceMappingURL=bindCallback.js.map

/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var AsyncSubject_1=__webpack_require__(68);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var BoundCallbackObservable=function(_super){__extends(BoundCallbackObservable,_super);function BoundCallbackObservable(callbackFunc,selector,args,context,scheduler){_super.call(this);this.callbackFunc=callbackFunc;this.selector=selector;this.args=args;this.context=context;this.scheduler=scheduler;}/* tslint:enable:max-line-length *//**
     * Converts a callback API to a function that returns an Observable.
     *
     * <span class="informal">Give it a function `f` of type `f(x, callback)` and
     * it will return a function `g` that when called as `g(x)` will output an
     * Observable.</span>
     *
     * `bindCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done.
     *
     * The output of `bindCallback` is a function that takes the same parameters
     * as `func`, except the last one (the callback). When the output function
     * is called with arguments, it will return an Observable. If `func` function
     * calls its callback with one argument, the Observable will emit that value.
     * If on the other hand callback is called with multiple values, resulting
     * Observable will emit an array with these arguments.
     *
     * It is very important to remember, that input function `func` is not called
     * when output function is, but rather when Observable returned by output
     * function is subscribed. This means if `func` makes AJAX request, that request
     * will be made every time someone subscribes to resulting Observable, but not before.
     *
     * Optionally, selector function can be passed to `bindObservable`. That function
     * takes the same arguments as callback, and returns value
     * that will be emitted by Observable instead of callback parameters themselves.
     * Even though by default multiple arguments passed to callback appear in the stream as array,
     * selector function will be called with arguments directly, just as callback would.
     * This means you can imagine default selector (when one is not provided explicitly)
     * as function that aggregates all its arguments into array, or simply returns first argument,
     * if there is only one.
     *
     * Last optional parameter - {@link Scheduler} - can be used to control when call
     * to `func` happens after someone subscribes to Observable, as well as when results
     * passed to callback will be emitted. By default subscription to Observable calls `func`
     * synchronously, but using `Scheduler.async` as last parameter will defer call to input function,
     * just like wrapping that call in `setTimeout` with time `0` would. So if you use async Scheduler
     * and call `subscribe` on output Observable, all function calls that are currently executing,
     * will end before `func` is invoked.
     *
     * When it comes to emitting results passed to callback, by default they are emitted
     * immediately after `func` invokes callback. In particular, if callback is called synchronously,
     * then subscription to resulting Observable will call `next` function synchronously as well.
     * If you want to defer that call, using `Scheduler.async` will, again, do the job.
     * This means that by using `Scheduler.async` you can, in a sense, ensure that `func`
     * always calls its callback asynchronously, thus avoiding terrifying Zalgo.
     *
     * Note that Observable created by output function will always emit only one value
     * and then complete right after. Even if `func` calls callback multiple times, values from
     * second and following calls will never appear in the stream. If you need to
     * listen for multiple calls, you probably want to use {@link fromEvent} or
     * {@link fromEventPattern} instead.
     *
     * If `func` depends on some context (`this` property), that context will be set
     * to the same context that output function has at call time. In particular, if `func`
     * is called as method of some object, in order to preserve proper behaviour,
     * it is recommended to set context of output function to that object as well,
     * provided `func` is not already bound.
     *
     * If input function calls its callback in "node style" (i.e. first argument to callback is
     * optional error parameter signaling whether call failed or not), {@link bindNodeCallback}
     * provides convenient error handling and probably is a better choice.
     * `bindCallback` will treat such functions without any difference and error parameter
     * (whether passed or not) will always be interpreted as regular callback argument.
     *
     *
     * @example <caption>Convert jQuery's getJSON to an Observable API</caption>
     * // Suppose we have jQuery.getJSON('/my/url', callback)
     * var getJSONAsObservable = Rx.Observable.bindCallback(jQuery.getJSON);
     * var result = getJSONAsObservable('/my/url');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     *
     * @example <caption>Receive array of arguments passed to callback</caption>
     * someFunction((a, b, c) => {
     *   console.log(a); // 5
     *   console.log(b); // 'some string'
     *   console.log(c); // {someProperty: 'someValue'}
     * });
     *
     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction);
     * boundSomeFunction().subscribe(values => {
     *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]
     * });
     *
     *
     * @example <caption>Use bindCallback with selector function</caption>
     * someFunction((a, b, c) => {
     *   console.log(a); // 'a'
     *   console.log(b); // 'b'
     *   console.log(c); // 'c'
     * });
     *
     * const boundSomeFunction = Rx.Observable.bindCallback(someFunction, (a, b, c) => a + b + c);
     * boundSomeFunction().subscribe(value => {
     *   console.log(value) // 'abc'
     * });
     *
     *
     * @example <caption>Compare behaviour with and without async Scheduler</caption>
     * function iCallMyCallbackSynchronously(cb) {
     *   cb();
     * }
     *
     * const boundSyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously);
     * const boundAsyncFn = Rx.Observable.bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);
     *
     * boundSyncFn().subscribe(() => console.log('I was sync!'));
     * boundAsyncFn().subscribe(() => console.log('I was async!'));
     * console.log('This happened...');
     *
     * // Logs:
     * // I was sync!
     * // This happened...
     * // I was async!
     *
     *
     * @example <caption>Use bindCallback on object method</caption>
     * const boundMethod = Rx.Observable.bindCallback(someObject.methodWithCallback);
     * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject
     * .subscribe(subscriber);
     *
     *
     * @see {@link bindNodeCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps those to a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the callback would deliver.
     * @static true
     * @name bindCallback
     * @owner Observable
     */BoundCallbackObservable.create=function(func,selector,scheduler){if(selector===void 0){selector=undefined;}return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i-0]=arguments[_i];}return new BoundCallbackObservable(func,selector,args,this,scheduler);};};BoundCallbackObservable.prototype._subscribe=function(subscriber){var callbackFunc=this.callbackFunc;var args=this.args;var scheduler=this.scheduler;var subject=this.subject;if(!scheduler){if(!subject){subject=this.subject=new AsyncSubject_1.AsyncSubject();var handler=function handlerFn(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i-0]=arguments[_i];}var source=handlerFn.source;var selector=source.selector,subject=source.subject;if(selector){var result_1=tryCatch_1.tryCatch(selector).apply(this,innerArgs);if(result_1===errorObject_1.errorObject){subject.error(errorObject_1.errorObject.e);}else{subject.next(result_1);subject.complete();}}else{subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs);subject.complete();}};// use named function instance to avoid closure.
handler.source=this;var result=tryCatch_1.tryCatch(callbackFunc).apply(this.context,args.concat(handler));if(result===errorObject_1.errorObject){subject.error(errorObject_1.errorObject.e);}}return subject.subscribe(subscriber);}else{return scheduler.schedule(BoundCallbackObservable.dispatch,0,{source:this,subscriber:subscriber,context:this.context});}};BoundCallbackObservable.dispatch=function(state){var self=this;var source=state.source,subscriber=state.subscriber,context=state.context;var callbackFunc=source.callbackFunc,args=source.args,scheduler=source.scheduler;var subject=source.subject;if(!subject){subject=source.subject=new AsyncSubject_1.AsyncSubject();var handler=function handlerFn(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i-0]=arguments[_i];}var source=handlerFn.source;var selector=source.selector,subject=source.subject;if(selector){var result_2=tryCatch_1.tryCatch(selector).apply(this,innerArgs);if(result_2===errorObject_1.errorObject){self.add(scheduler.schedule(dispatchError,0,{err:errorObject_1.errorObject.e,subject:subject}));}else{self.add(scheduler.schedule(dispatchNext,0,{value:result_2,subject:subject}));}}else{var value=innerArgs.length<=1?innerArgs[0]:innerArgs;self.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}));}};// use named function to pass values in without closure
handler.source=source;var result=tryCatch_1.tryCatch(callbackFunc).apply(context,args.concat(handler));if(result===errorObject_1.errorObject){subject.error(errorObject_1.errorObject.e);}}self.add(subject.subscribe(subscriber));};return BoundCallbackObservable;}(Observable_1.Observable);exports.BoundCallbackObservable=BoundCallbackObservable;function dispatchNext(arg){var value=arg.value,subject=arg.subject;subject.next(value);subject.complete();}function dispatchError(arg){var err=arg.err,subject=arg.subject;subject.error(err);}//# sourceMappingURL=BoundCallbackObservable.js.map

/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var bindNodeCallback_1=__webpack_require__(396);Observable_1.Observable.bindNodeCallback=bindNodeCallback_1.bindNodeCallback;//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var BoundNodeCallbackObservable_1=__webpack_require__(397);exports.bindNodeCallback=BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;//# sourceMappingURL=bindNodeCallback.js.map

/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var AsyncSubject_1=__webpack_require__(68);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var BoundNodeCallbackObservable=function(_super){__extends(BoundNodeCallbackObservable,_super);function BoundNodeCallbackObservable(callbackFunc,selector,args,context,scheduler){_super.call(this);this.callbackFunc=callbackFunc;this.selector=selector;this.args=args;this.context=context;this.scheduler=scheduler;}/* tslint:enable:max-line-length *//**
     * Converts a Node.js-style callback API to a function that returns an
     * Observable.
     *
     * <span class="informal">It's just like {@link bindCallback}, but the
     * callback is expected to be of type `callback(error, result)`.</span>
     *
     * `bindNodeCallback` is not an operator because its input and output are not
     * Observables. The input is a function `func` with some parameters, but the
     * last parameter must be a callback function that `func` calls when it is
     * done. The callback function is expected to follow Node.js conventions,
     * where the first argument to the callback is an error object, signaling
     * whether call was successful. If that object is passed to callback, it means
     * something went wrong.
     *
     * The output of `bindNodeCallback` is a function that takes the same
     * parameters as `func`, except the last one (the callback). When the output
     * function is called with arguments, it will return an Observable.
     * If `func` calls its callback with error parameter present, Observable will
     * error with that value as well. If error parameter is not passed, Observable will emit
     * second parameter. If there are more parameters (third and so on),
     * Observable will emit an array with all arguments, except first error argument.
     *
     * Optionally `bindNodeCallback` accepts selector function, which allows you to
     * make resulting Observable emit value computed by selector, instead of regular
     * callback arguments. It works similarly to {@link bindCallback} selector, but
     * Node.js-style error argument will never be passed to that function.
     *
     * Note that `func` will not be called at the same time output function is,
     * but rather whenever resulting Observable is subscribed. By default call to
     * `func` will happen synchronously after subscription, but that can be changed
     * with proper {@link Scheduler} provided as optional third parameter. Scheduler
     * can also control when values from callback will be emitted by Observable.
     * To find out more, check out documentation for {@link bindCallback}, where
     * Scheduler works exactly the same.
     *
     * As in {@link bindCallback}, context (`this` property) of input function will be set to context
     * of returned function, when it is called.
     *
     * After Observable emits value, it will complete immediately. This means
     * even if `func` calls callback again, values from second and consecutive
     * calls will never appear on the stream. If you need to handle functions
     * that call callbacks multiple times, check out {@link fromEvent} or
     * {@link fromEventPattern} instead.
     *
     * Note that `bindNodeCallback` can be used in non-Node.js environments as well.
     * "Node.js-style" callbacks are just a convention, so if you write for
     * browsers or any other environment and API you use implements that callback style,
     * `bindNodeCallback` can be safely used on that API functions as well.
     *
     * Remember that Error object passed to callback does not have to be an instance
     * of JavaScript built-in `Error` object. In fact, it does not even have to an object.
     * Error parameter of callback function is interpreted as "present", when value
     * of that parameter is truthy. It could be, for example, non-zero number, non-empty
     * string or boolean `true`. In all of these cases resulting Observable would error
     * with that value. This means usually regular style callbacks will fail very often when
     * `bindNodeCallback` is used. If your Observable errors much more often then you
     * would expect, check if callback really is called in Node.js-style and, if not,
     * switch to {@link bindCallback} instead.
     *
     * Note that even if error parameter is technically present in callback, but its value
     * is falsy, it still won't appear in array emitted by Observable or in selector function.
     *
     *
     * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>
     * import * as fs from 'fs';
     * var readFileAsObservable = Rx.Observable.bindNodeCallback(fs.readFile);
     * var result = readFileAsObservable('./roadNames.txt', 'utf8');
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     *
     * @example <caption>Use on function calling callback with multiple arguments</caption>
     * someFunction((err, a, b) => {
     *   console.log(err); // null
     *   console.log(a); // 5
     *   console.log(b); // "some string"
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);
     * boundSomeFunction()
     * .subscribe(value => {
     *   console.log(value); // [5, "some string"]
     * });
     *
     *
     * @example <caption>Use with selector function</caption>
     * someFunction((err, a, b) => {
     *   console.log(err); // undefined
     *   console.log(a); // "abc"
     *   console.log(b); // "DEF"
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction, (a, b) => a + b);
     * boundSomeFunction()
     * .subscribe(value => {
     *   console.log(value); // "abcDEF"
     * });
     *
     *
     * @example <caption>Use on function calling callback in regular style</caption>
     * someFunction(a => {
     *   console.log(a); // 5
     * });
     * var boundSomeFunction = Rx.Observable.bindNodeCallback(someFunction);
     * boundSomeFunction()
     * .subscribe(
     *   value => {}             // never gets called
     *   err => console.log(err) // 5
     *);
     *
     *
     * @see {@link bindCallback}
     * @see {@link from}
     * @see {@link fromPromise}
     *
     * @param {function} func Function with a Node.js-style callback as the last parameter.
     * @param {function} [selector] A function which takes the arguments from the
     * callback and maps those to a value to emit on the output Observable.
     * @param {Scheduler} [scheduler] The scheduler on which to schedule the
     * callbacks.
     * @return {function(...params: *): Observable} A function which returns the
     * Observable that delivers the same values the Node.js callback would
     * deliver.
     * @static true
     * @name bindNodeCallback
     * @owner Observable
     */BoundNodeCallbackObservable.create=function(func,selector,scheduler){if(selector===void 0){selector=undefined;}return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i-0]=arguments[_i];}return new BoundNodeCallbackObservable(func,selector,args,this,scheduler);};};BoundNodeCallbackObservable.prototype._subscribe=function(subscriber){var callbackFunc=this.callbackFunc;var args=this.args;var scheduler=this.scheduler;var subject=this.subject;if(!scheduler){if(!subject){subject=this.subject=new AsyncSubject_1.AsyncSubject();var handler=function handlerFn(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i-0]=arguments[_i];}var source=handlerFn.source;var selector=source.selector,subject=source.subject;var err=innerArgs.shift();if(err){subject.error(err);}else if(selector){var result_1=tryCatch_1.tryCatch(selector).apply(this,innerArgs);if(result_1===errorObject_1.errorObject){subject.error(errorObject_1.errorObject.e);}else{subject.next(result_1);subject.complete();}}else{subject.next(innerArgs.length<=1?innerArgs[0]:innerArgs);subject.complete();}};// use named function instance to avoid closure.
handler.source=this;var result=tryCatch_1.tryCatch(callbackFunc).apply(this.context,args.concat(handler));if(result===errorObject_1.errorObject){subject.error(errorObject_1.errorObject.e);}}return subject.subscribe(subscriber);}else{return scheduler.schedule(dispatch,0,{source:this,subscriber:subscriber,context:this.context});}};return BoundNodeCallbackObservable;}(Observable_1.Observable);exports.BoundNodeCallbackObservable=BoundNodeCallbackObservable;function dispatch(state){var self=this;var source=state.source,subscriber=state.subscriber,context=state.context;// XXX: cast to `any` to access to the private field in `source`.
var _a=source,callbackFunc=_a.callbackFunc,args=_a.args,scheduler=_a.scheduler;var subject=source.subject;if(!subject){subject=source.subject=new AsyncSubject_1.AsyncSubject();var handler=function handlerFn(){var innerArgs=[];for(var _i=0;_i<arguments.length;_i++){innerArgs[_i-0]=arguments[_i];}var source=handlerFn.source;var selector=source.selector,subject=source.subject;var err=innerArgs.shift();if(err){self.add(scheduler.schedule(dispatchError,0,{err:err,subject:subject}));}else if(selector){var result_2=tryCatch_1.tryCatch(selector).apply(this,innerArgs);if(result_2===errorObject_1.errorObject){self.add(scheduler.schedule(dispatchError,0,{err:errorObject_1.errorObject.e,subject:subject}));}else{self.add(scheduler.schedule(dispatchNext,0,{value:result_2,subject:subject}));}}else{var value=innerArgs.length<=1?innerArgs[0]:innerArgs;self.add(scheduler.schedule(dispatchNext,0,{value:value,subject:subject}));}};// use named function to pass values in without closure
handler.source=source;var result=tryCatch_1.tryCatch(callbackFunc).apply(context,args.concat(handler));if(result===errorObject_1.errorObject){self.add(scheduler.schedule(dispatchError,0,{err:errorObject_1.errorObject.e,subject:subject}));}}self.add(subject.subscribe(subscriber));}function dispatchNext(arg){var value=arg.value,subject=arg.subject;subject.next(value);subject.complete();}function dispatchError(arg){var err=arg.err,subject=arg.subject;subject.error(err);}//# sourceMappingURL=BoundNodeCallbackObservable.js.map

/***/ }),
/* 398 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var combineLatest_1=__webpack_require__(399);Observable_1.Observable.combineLatest=combineLatest_1.combineLatest;//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var isScheduler_1=__webpack_require__(25);var isArray_1=__webpack_require__(24);var ArrayObservable_1=__webpack_require__(26);var combineLatest_1=__webpack_require__(96);/* tslint:enable:max-line-length *//**
 * Combines multiple Observables to create an Observable whose values are
 * calculated from the latest values of each of its input Observables.
 *
 * <span class="informal">Whenever any input Observable emits a value, it
 * computes a formula using the latest values from all the inputs, then emits
 * the output of that formula.</span>
 *
 * <img src="./img/combineLatest.png" width="100%">
 *
 * `combineLatest` combines the values from all the Observables passed as
 * arguments. This is done by subscribing to each Observable in order and,
 * whenever any Observable emits, collecting an array of the most recent
 * values from each Observable. So if you pass `n` Observables to operator,
 * returned Observable will always emit an array of `n` values, in order
 * corresponding to order of passed Observables (value from the first Observable
 * on the first place and so on).
 *
 * Static version of `combineLatest` accepts either an array of Observables
 * or each Observable can be put directly as an argument. Note that array of
 * Observables is good choice, if you don't know beforehand how many Observables
 * you will combine. Passing empty array will result in Observable that
 * completes immediately.
 *
 * To ensure output array has always the same length, `combineLatest` will
 * actually wait for all input Observables to emit at least once,
 * before it starts emitting results. This means if some Observable emits
 * values before other Observables started emitting, all that values but last
 * will be lost. On the other hand, is some Observable does not emit value but
 * completes, resulting Observable will complete at the same moment without
 * emitting anything, since it will be now impossible to include value from
 * completed Observable in resulting array. Also, if some input Observable does
 * not emit any value and never completes, `combineLatest` will also never emit
 * and never complete, since, again, it will wait for all streams to emit some
 * value.
 *
 * If at least one Observable was passed to `combineLatest` and all passed Observables
 * emitted something, resulting Observable will complete when all combined
 * streams complete. So even if some Observable completes, result of
 * `combineLatest` will still emit values when other Observables do. In case
 * of completed Observable, its value from now on will always be the last
 * emitted value. On the other hand, if any Observable errors, `combineLatest`
 * will error immediately as well, and all other Observables will be unsubscribed.
 *
 * `combineLatest` accepts as optional parameter `project` function, which takes
 * as arguments all values that would normally be emitted by resulting Observable.
 * `project` can return any kind of value, which will be then emitted by Observable
 * instead of default array. Note that `project` does not take as argument that array
 * of values, but values themselves. That means default `project` can be imagined
 * as function that takes all its arguments and puts them into an array.
 *
 *
 * @example <caption>Combine two timer Observables</caption>
 * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now
 * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now
 * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);
 * combinedTimers.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0] after 0.5s
 * // [1, 0] after 1s
 * // [1, 1] after 1.5s
 * // [2, 1] after 2s
 *
 *
 * @example <caption>Combine an array of Observables</caption>
 * const observables = [1, 5, 10].map(
 *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds
 * );
 * const combined = Rx.Observable.combineLatest(observables);
 * combined.subscribe(value => console.log(value));
 * // Logs
 * // [0, 0, 0] immediately
 * // [1, 0, 0] after 1s
 * // [1, 5, 0] after 5s
 * // [1, 5, 10] after 10s
 *
 *
 * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>
 * var weight = Rx.Observable.of(70, 72, 76, 79, 75);
 * var height = Rx.Observable.of(1.76, 1.77, 1.78);
 * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));
 * bmi.subscribe(x => console.log('BMI is ' + x));
 *
 * // With output to console:
 * // BMI is 24.212293388429753
 * // BMI is 23.93948099205209
 * // BMI is 23.671253629592222
 *
 *
 * @see {@link combineAll}
 * @see {@link merge}
 * @see {@link withLatestFrom}
 *
 * @param {ObservableInput} observable1 An input Observable to combine with other Observables.
 * @param {ObservableInput} observable2 An input Observable to combine with other Observables.
 * More than one input Observables may be given as arguments
 * or an array of Observables may be given as the first argument.
 * @param {function} [project] An optional function to project the values from
 * the combined latest values into a new value on the output Observable.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each input Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @static true
 * @name combineLatest
 * @owner Observable
 */function combineLatest(){var observables=[];for(var _i=0;_i<arguments.length;_i++){observables[_i-0]=arguments[_i];}var project=null;var scheduler=null;if(isScheduler_1.isScheduler(observables[observables.length-1])){scheduler=observables.pop();}if(typeof observables[observables.length-1]==='function'){project=observables.pop();}// if the first and only other argument besides the resultSelector is an array
// assume it's been called with `combineLatest([obs1, obs2, obs3], project)`
if(observables.length===1&&isArray_1.isArray(observables[0])){observables=observables[0];}return new ArrayObservable_1.ArrayObservable(observables,scheduler).lift(new combineLatest_1.CombineLatestOperator(project));}exports.combineLatest=combineLatest;//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 400 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var InnerSubscriber=function(_super){__extends(InnerSubscriber,_super);function InnerSubscriber(parent,outerValue,outerIndex){_super.call(this);this.parent=parent;this.outerValue=outerValue;this.outerIndex=outerIndex;this.index=0;}InnerSubscriber.prototype._next=function(value){this.parent.notifyNext(this.outerValue,value,this.outerIndex,this.index++,this);};InnerSubscriber.prototype._error=function(error){this.parent.notifyError(error,this);this.unsubscribe();};InnerSubscriber.prototype._complete=function(){this.parent.notifyComplete(this);this.unsubscribe();};return InnerSubscriber;}(Subscriber_1.Subscriber);exports.InnerSubscriber=InnerSubscriber;//# sourceMappingURL=InnerSubscriber.js.map

/***/ }),
/* 401 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var concat_1=__webpack_require__(402);Observable_1.Observable.concat=concat_1.concat;//# sourceMappingURL=concat.js.map

/***/ }),
/* 402 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var concat_1=__webpack_require__(97);exports.concat=concat_1.concatStatic;//# sourceMappingURL=concat.js.map

/***/ }),
/* 403 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var defer_1=__webpack_require__(404);Observable_1.Observable.defer=defer_1.defer;//# sourceMappingURL=defer.js.map

/***/ }),
/* 404 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var DeferObservable_1=__webpack_require__(405);exports.defer=DeferObservable_1.DeferObservable.create;//# sourceMappingURL=defer.js.map

/***/ }),
/* 405 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var subscribeToResult_1=__webpack_require__(6);var OuterSubscriber_1=__webpack_require__(5);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var DeferObservable=function(_super){__extends(DeferObservable,_super);function DeferObservable(observableFactory){_super.call(this);this.observableFactory=observableFactory;}/**
     * Creates an Observable that, on subscribe, calls an Observable factory to
     * make an Observable for each new Observer.
     *
     * <span class="informal">Creates the Observable lazily, that is, only when it
     * is subscribed.
     * </span>
     *
     * <img src="./img/defer.png" width="100%">
     *
     * `defer` allows you to create the Observable only when the Observer
     * subscribes, and create a fresh Observable for each Observer. It waits until
     * an Observer subscribes to it, and then it generates an Observable,
     * typically with an Observable factory function. It does this afresh for each
     * subscriber, so although each subscriber may think it is subscribing to the
     * same Observable, in fact each subscriber gets its own individual
     * Observable.
     *
     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>
     * var clicksOrInterval = Rx.Observable.defer(function () {
     *   if (Math.random() > 0.5) {
     *     return Rx.Observable.fromEvent(document, 'click');
     *   } else {
     *     return Rx.Observable.interval(1000);
     *   }
     * });
     * clicksOrInterval.subscribe(x => console.log(x));
     *
     * // Results in the following behavior:
     * // If the result of Math.random() is greater than 0.5 it will listen
     * // for clicks anywhere on the "document"; when document is clicked it
     * // will log a MouseEvent object to the console. If the result is less
     * // than 0.5 it will emit ascending numbers, one every second(1000ms).
     *
     * @see {@link create}
     *
     * @param {function(): SubscribableOrPromise} observableFactory The Observable
     * factory function to invoke for each Observer that subscribes to the output
     * Observable. May also return a Promise, which will be converted on the fly
     * to an Observable.
     * @return {Observable} An Observable whose Observers' subscriptions trigger
     * an invocation of the given Observable factory function.
     * @static true
     * @name defer
     * @owner Observable
     */DeferObservable.create=function(observableFactory){return new DeferObservable(observableFactory);};DeferObservable.prototype._subscribe=function(subscriber){return new DeferSubscriber(subscriber,this.observableFactory);};return DeferObservable;}(Observable_1.Observable);exports.DeferObservable=DeferObservable;var DeferSubscriber=function(_super){__extends(DeferSubscriber,_super);function DeferSubscriber(destination,factory){_super.call(this,destination);this.factory=factory;this.tryDefer();}DeferSubscriber.prototype.tryDefer=function(){try{this._callFactory();}catch(err){this._error(err);}};DeferSubscriber.prototype._callFactory=function(){var result=this.factory();if(result){this.add(subscribeToResult_1.subscribeToResult(this,result));}};return DeferSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=DeferObservable.js.map

/***/ }),
/* 406 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var empty_1=__webpack_require__(407);Observable_1.Observable.empty=empty_1.empty;//# sourceMappingURL=empty.js.map

/***/ }),
/* 407 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var EmptyObservable_1=__webpack_require__(29);exports.empty=EmptyObservable_1.EmptyObservable.create;//# sourceMappingURL=empty.js.map

/***/ }),
/* 408 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var forkJoin_1=__webpack_require__(409);Observable_1.Observable.forkJoin=forkJoin_1.forkJoin;//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 409 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var ForkJoinObservable_1=__webpack_require__(410);exports.forkJoin=ForkJoinObservable_1.ForkJoinObservable.create;//# sourceMappingURL=forkJoin.js.map

/***/ }),
/* 410 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var EmptyObservable_1=__webpack_require__(29);var isArray_1=__webpack_require__(24);var subscribeToResult_1=__webpack_require__(6);var OuterSubscriber_1=__webpack_require__(5);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var ForkJoinObservable=function(_super){__extends(ForkJoinObservable,_super);function ForkJoinObservable(sources,resultSelector){_super.call(this);this.sources=sources;this.resultSelector=resultSelector;}/* tslint:enable:max-line-length *//**
     * @param sources
     * @return {any}
     * @static true
     * @name forkJoin
     * @owner Observable
     */ForkJoinObservable.create=function(){var sources=[];for(var _i=0;_i<arguments.length;_i++){sources[_i-0]=arguments[_i];}if(sources===null||arguments.length===0){return new EmptyObservable_1.EmptyObservable();}var resultSelector=null;if(typeof sources[sources.length-1]==='function'){resultSelector=sources.pop();}// if the first and only other argument besides the resultSelector is an array
// assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`
if(sources.length===1&&isArray_1.isArray(sources[0])){sources=sources[0];}if(sources.length===0){return new EmptyObservable_1.EmptyObservable();}return new ForkJoinObservable(sources,resultSelector);};ForkJoinObservable.prototype._subscribe=function(subscriber){return new ForkJoinSubscriber(subscriber,this.sources,this.resultSelector);};return ForkJoinObservable;}(Observable_1.Observable);exports.ForkJoinObservable=ForkJoinObservable;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ForkJoinSubscriber=function(_super){__extends(ForkJoinSubscriber,_super);function ForkJoinSubscriber(destination,sources,resultSelector){_super.call(this,destination);this.sources=sources;this.resultSelector=resultSelector;this.completed=0;this.haveValues=0;var len=sources.length;this.total=len;this.values=new Array(len);for(var i=0;i<len;i++){var source=sources[i];var innerSubscription=subscribeToResult_1.subscribeToResult(this,source,null,i);if(innerSubscription){innerSubscription.outerIndex=i;this.add(innerSubscription);}}}ForkJoinSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values[outerIndex]=innerValue;if(!innerSub._hasValue){innerSub._hasValue=true;this.haveValues++;}};ForkJoinSubscriber.prototype.notifyComplete=function(innerSub){var destination=this.destination;var _a=this,haveValues=_a.haveValues,resultSelector=_a.resultSelector,values=_a.values;var len=values.length;if(!innerSub._hasValue){destination.complete();return;}this.completed++;if(this.completed!==len){return;}if(haveValues===len){var value=resultSelector?resultSelector.apply(this,values):values;destination.next(value);}destination.complete();};return ForkJoinSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=ForkJoinObservable.js.map

/***/ }),
/* 411 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var from_1=__webpack_require__(412);Observable_1.Observable.from=from_1.from;//# sourceMappingURL=from.js.map

/***/ }),
/* 412 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var FromObservable_1=__webpack_require__(165);exports.from=FromObservable_1.FromObservable.create;//# sourceMappingURL=from.js.map

/***/ }),
/* 413 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var root_1=__webpack_require__(12);var Observable_1=__webpack_require__(0);var iterator_1=__webpack_require__(42);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var IteratorObservable=function(_super){__extends(IteratorObservable,_super);function IteratorObservable(iterator,scheduler){_super.call(this);this.scheduler=scheduler;if(iterator==null){throw new Error('iterator cannot be null.');}this.iterator=getIterator(iterator);}IteratorObservable.create=function(iterator,scheduler){return new IteratorObservable(iterator,scheduler);};IteratorObservable.dispatch=function(state){var index=state.index,hasError=state.hasError,iterator=state.iterator,subscriber=state.subscriber;if(hasError){subscriber.error(state.error);return;}var result=iterator.next();if(result.done){subscriber.complete();return;}subscriber.next(result.value);state.index=index+1;if(subscriber.closed){if(typeof iterator.return==='function'){iterator.return();}return;}this.schedule(state);};IteratorObservable.prototype._subscribe=function(subscriber){var index=0;var _a=this,iterator=_a.iterator,scheduler=_a.scheduler;if(scheduler){return scheduler.schedule(IteratorObservable.dispatch,0,{index:index,iterator:iterator,subscriber:subscriber});}else{do{var result=iterator.next();if(result.done){subscriber.complete();break;}else{subscriber.next(result.value);}if(subscriber.closed){if(typeof iterator.return==='function'){iterator.return();}break;}}while(true);}};return IteratorObservable;}(Observable_1.Observable);exports.IteratorObservable=IteratorObservable;var StringIterator=function(){function StringIterator(str,idx,len){if(idx===void 0){idx=0;}if(len===void 0){len=str.length;}this.str=str;this.idx=idx;this.len=len;}StringIterator.prototype[iterator_1.iterator]=function(){return this;};StringIterator.prototype.next=function(){return this.idx<this.len?{done:false,value:this.str.charAt(this.idx++)}:{done:true,value:undefined};};return StringIterator;}();var ArrayIterator=function(){function ArrayIterator(arr,idx,len){if(idx===void 0){idx=0;}if(len===void 0){len=toLength(arr);}this.arr=arr;this.idx=idx;this.len=len;}ArrayIterator.prototype[iterator_1.iterator]=function(){return this;};ArrayIterator.prototype.next=function(){return this.idx<this.len?{done:false,value:this.arr[this.idx++]}:{done:true,value:undefined};};return ArrayIterator;}();function getIterator(obj){var i=obj[iterator_1.iterator];if(!i&&typeof obj==='string'){return new StringIterator(obj);}if(!i&&obj.length!==undefined){return new ArrayIterator(obj);}if(!i){throw new TypeError('object is not iterable');}return obj[iterator_1.iterator]();}var maxSafeInteger=Math.pow(2,53)-1;function toLength(o){var len=+o.length;if(isNaN(len)){return 0;}if(len===0||!numberIsFinite(len)){return len;}len=sign(len)*Math.floor(Math.abs(len));if(len<=0){return 0;}if(len>maxSafeInteger){return maxSafeInteger;}return len;}function numberIsFinite(value){return typeof value==='number'&&root_1.root.isFinite(value);}function sign(value){var valueAsNumber=+value;if(valueAsNumber===0){return valueAsNumber;}if(isNaN(valueAsNumber)){return valueAsNumber;}return valueAsNumber<0?-1:1;}//# sourceMappingURL=IteratorObservable.js.map

/***/ }),
/* 414 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var ScalarObservable_1=__webpack_require__(95);var EmptyObservable_1=__webpack_require__(29);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var ArrayLikeObservable=function(_super){__extends(ArrayLikeObservable,_super);function ArrayLikeObservable(arrayLike,scheduler){_super.call(this);this.arrayLike=arrayLike;this.scheduler=scheduler;if(!scheduler&&arrayLike.length===1){this._isScalar=true;this.value=arrayLike[0];}}ArrayLikeObservable.create=function(arrayLike,scheduler){var length=arrayLike.length;if(length===0){return new EmptyObservable_1.EmptyObservable();}else if(length===1){return new ScalarObservable_1.ScalarObservable(arrayLike[0],scheduler);}else{return new ArrayLikeObservable(arrayLike,scheduler);}};ArrayLikeObservable.dispatch=function(state){var arrayLike=state.arrayLike,index=state.index,length=state.length,subscriber=state.subscriber;if(subscriber.closed){return;}if(index>=length){subscriber.complete();return;}subscriber.next(arrayLike[index]);state.index=index+1;this.schedule(state);};ArrayLikeObservable.prototype._subscribe=function(subscriber){var index=0;var _a=this,arrayLike=_a.arrayLike,scheduler=_a.scheduler;var length=arrayLike.length;if(scheduler){return scheduler.schedule(ArrayLikeObservable.dispatch,0,{arrayLike:arrayLike,index:index,length:length,subscriber:subscriber});}else{for(var i=0;i<length&&!subscriber.closed;i++){subscriber.next(arrayLike[i]);}subscriber.complete();}};return ArrayLikeObservable;}(Observable_1.Observable);exports.ArrayLikeObservable=ArrayLikeObservable;//# sourceMappingURL=ArrayLikeObservable.js.map

/***/ }),
/* 415 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var fromEvent_1=__webpack_require__(416);Observable_1.Observable.fromEvent=fromEvent_1.fromEvent;//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 416 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var FromEventObservable_1=__webpack_require__(417);exports.fromEvent=FromEventObservable_1.FromEventObservable.create;//# sourceMappingURL=fromEvent.js.map

/***/ }),
/* 417 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var tryCatch_1=__webpack_require__(13);var isFunction_1=__webpack_require__(64);var errorObject_1=__webpack_require__(11);var Subscription_1=__webpack_require__(9);var toString=Object.prototype.toString;function isNodeStyleEventEmitter(sourceObj){return!!sourceObj&&typeof sourceObj.addListener==='function'&&typeof sourceObj.removeListener==='function';}function isJQueryStyleEventEmitter(sourceObj){return!!sourceObj&&typeof sourceObj.on==='function'&&typeof sourceObj.off==='function';}function isNodeList(sourceObj){return!!sourceObj&&toString.call(sourceObj)==='[object NodeList]';}function isHTMLCollection(sourceObj){return!!sourceObj&&toString.call(sourceObj)==='[object HTMLCollection]';}function isEventTarget(sourceObj){return!!sourceObj&&typeof sourceObj.addEventListener==='function'&&typeof sourceObj.removeEventListener==='function';}/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var FromEventObservable=function(_super){__extends(FromEventObservable,_super);function FromEventObservable(sourceObj,eventName,selector,options){_super.call(this);this.sourceObj=sourceObj;this.eventName=eventName;this.selector=selector;this.options=options;}/* tslint:enable:max-line-length *//**
     * Creates an Observable that emits events of a specific type coming from the
     * given event target.
     *
     * <span class="informal">Creates an Observable from DOM events, or Node
     * EventEmitter events or others.</span>
     *
     * <img src="./img/fromEvent.png" width="100%">
     *
     * Creates an Observable by attaching an event listener to an "event target",
     * which may be an object with `addEventListener` and `removeEventListener`,
     * a Node.js EventEmitter, a jQuery style EventEmitter, a NodeList from the
     * DOM, or an HTMLCollection from the DOM. The event handler is attached when
     * the output Observable is subscribed, and removed when the Subscription is
     * unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * var clicks = Rx.Observable.fromEvent(document, 'click');
     * clicks.subscribe(x => console.log(x));
     *
     * // Results in:
     * // MouseEvent object logged to console everytime a click
     * // occurs on the document.
     *
     * @see {@link from}
     * @see {@link fromEventPattern}
     *
     * @param {EventTargetLike} target The DOMElement, event target, Node.js
     * EventEmitter, NodeList or HTMLCollection to attach the event handler to.
     * @param {string} eventName The event name of interest, being emitted by the
     * `target`.
     * @param {EventListenerOptions} [options] Options to pass through to addEventListener
     * @param {SelectorMethodSignature<T>} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEvent
     * @owner Observable
     */FromEventObservable.create=function(target,eventName,options,selector){if(isFunction_1.isFunction(options)){selector=options;options=undefined;}return new FromEventObservable(target,eventName,selector,options);};FromEventObservable.setupSubscription=function(sourceObj,eventName,handler,subscriber,options){var unsubscribe;if(isNodeList(sourceObj)||isHTMLCollection(sourceObj)){for(var i=0,len=sourceObj.length;i<len;i++){FromEventObservable.setupSubscription(sourceObj[i],eventName,handler,subscriber,options);}}else if(isEventTarget(sourceObj)){var source_1=sourceObj;sourceObj.addEventListener(eventName,handler,options);unsubscribe=function unsubscribe(){return source_1.removeEventListener(eventName,handler);};}else if(isJQueryStyleEventEmitter(sourceObj)){var source_2=sourceObj;sourceObj.on(eventName,handler);unsubscribe=function unsubscribe(){return source_2.off(eventName,handler);};}else if(isNodeStyleEventEmitter(sourceObj)){var source_3=sourceObj;sourceObj.addListener(eventName,handler);unsubscribe=function unsubscribe(){return source_3.removeListener(eventName,handler);};}else{throw new TypeError('Invalid event target');}subscriber.add(new Subscription_1.Subscription(unsubscribe));};FromEventObservable.prototype._subscribe=function(subscriber){var sourceObj=this.sourceObj;var eventName=this.eventName;var options=this.options;var selector=this.selector;var handler=selector?function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i-0]=arguments[_i];}var result=tryCatch_1.tryCatch(selector).apply(void 0,args);if(result===errorObject_1.errorObject){subscriber.error(errorObject_1.errorObject.e);}else{subscriber.next(result);}}:function(e){return subscriber.next(e);};FromEventObservable.setupSubscription(sourceObj,eventName,handler,subscriber,options);};return FromEventObservable;}(Observable_1.Observable);exports.FromEventObservable=FromEventObservable;//# sourceMappingURL=FromEventObservable.js.map

/***/ }),
/* 418 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var fromEventPattern_1=__webpack_require__(419);Observable_1.Observable.fromEventPattern=fromEventPattern_1.fromEventPattern;//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 419 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var FromEventPatternObservable_1=__webpack_require__(420);exports.fromEventPattern=FromEventPatternObservable_1.FromEventPatternObservable.create;//# sourceMappingURL=fromEventPattern.js.map

/***/ }),
/* 420 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var isFunction_1=__webpack_require__(64);var Observable_1=__webpack_require__(0);var Subscription_1=__webpack_require__(9);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var FromEventPatternObservable=function(_super){__extends(FromEventPatternObservable,_super);function FromEventPatternObservable(addHandler,removeHandler,selector){_super.call(this);this.addHandler=addHandler;this.removeHandler=removeHandler;this.selector=selector;}/**
     * Creates an Observable from an API based on addHandler/removeHandler
     * functions.
     *
     * <span class="informal">Converts any addHandler/removeHandler API to an
     * Observable.</span>
     *
     * <img src="./img/fromEventPattern.png" width="100%">
     *
     * Creates an Observable by using the `addHandler` and `removeHandler`
     * functions to add and remove the handlers, with an optional selector
     * function to project the event arguments to a result. The `addHandler` is
     * called when the output Observable is subscribed, and `removeHandler` is
     * called when the Subscription is unsubscribed.
     *
     * @example <caption>Emits clicks happening on the DOM document</caption>
     * function addClickHandler(handler) {
     *   document.addEventListener('click', handler);
     * }
     *
     * function removeClickHandler(handler) {
     *   document.removeEventListener('click', handler);
     * }
     *
     * var clicks = Rx.Observable.fromEventPattern(
     *   addClickHandler,
     *   removeClickHandler
     * );
     * clicks.subscribe(x => console.log(x));
     *
     * @see {@link from}
     * @see {@link fromEvent}
     *
     * @param {function(handler: Function): any} addHandler A function that takes
     * a `handler` function as argument and attaches it somehow to the actual
     * source of events.
     * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that
     * takes a `handler` function as argument and removes it in case it was
     * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,
     * removeHandler function will forward it.
     * @param {function(...args: any): T} [selector] An optional function to
     * post-process results. It takes the arguments from the event handler and
     * should return a single value.
     * @return {Observable<T>}
     * @static true
     * @name fromEventPattern
     * @owner Observable
     */FromEventPatternObservable.create=function(addHandler,removeHandler,selector){return new FromEventPatternObservable(addHandler,removeHandler,selector);};FromEventPatternObservable.prototype._subscribe=function(subscriber){var _this=this;var removeHandler=this.removeHandler;var handler=!!this.selector?function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i-0]=arguments[_i];}_this._callSelector(subscriber,args);}:function(e){subscriber.next(e);};var retValue=this._callAddHandler(handler,subscriber);if(!isFunction_1.isFunction(removeHandler)){return;}subscriber.add(new Subscription_1.Subscription(function(){//TODO: determine whether or not to forward to error handler
removeHandler(handler,retValue);}));};FromEventPatternObservable.prototype._callSelector=function(subscriber,args){try{var result=this.selector.apply(this,args);subscriber.next(result);}catch(e){subscriber.error(e);}};FromEventPatternObservable.prototype._callAddHandler=function(handler,errorSubscriber){try{return this.addHandler(handler)||null;}catch(e){errorSubscriber.error(e);}};return FromEventPatternObservable;}(Observable_1.Observable);exports.FromEventPatternObservable=FromEventPatternObservable;//# sourceMappingURL=FromEventPatternObservable.js.map

/***/ }),
/* 421 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var fromPromise_1=__webpack_require__(422);Observable_1.Observable.fromPromise=fromPromise_1.fromPromise;//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 422 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var PromiseObservable_1=__webpack_require__(166);exports.fromPromise=PromiseObservable_1.PromiseObservable.create;//# sourceMappingURL=fromPromise.js.map

/***/ }),
/* 423 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var generate_1=__webpack_require__(424);Observable_1.Observable.generate=generate_1.generate;//# sourceMappingURL=generate.js.map

/***/ }),
/* 424 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var GenerateObservable_1=__webpack_require__(425);exports.generate=GenerateObservable_1.GenerateObservable.create;//# sourceMappingURL=generate.js.map

/***/ }),
/* 425 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var isScheduler_1=__webpack_require__(25);var selfSelector=function selfSelector(value){return value;};/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var GenerateObservable=function(_super){__extends(GenerateObservable,_super);function GenerateObservable(initialState,condition,iterate,resultSelector,scheduler){_super.call(this);this.initialState=initialState;this.condition=condition;this.iterate=iterate;this.resultSelector=resultSelector;this.scheduler=scheduler;}GenerateObservable.create=function(initialStateOrOptions,condition,iterate,resultSelectorOrObservable,scheduler){if(arguments.length==1){return new GenerateObservable(initialStateOrOptions.initialState,initialStateOrOptions.condition,initialStateOrOptions.iterate,initialStateOrOptions.resultSelector||selfSelector,initialStateOrOptions.scheduler);}if(resultSelectorOrObservable===undefined||isScheduler_1.isScheduler(resultSelectorOrObservable)){return new GenerateObservable(initialStateOrOptions,condition,iterate,selfSelector,resultSelectorOrObservable);}return new GenerateObservable(initialStateOrOptions,condition,iterate,resultSelectorOrObservable,scheduler);};GenerateObservable.prototype._subscribe=function(subscriber){var state=this.initialState;if(this.scheduler){return this.scheduler.schedule(GenerateObservable.dispatch,0,{subscriber:subscriber,iterate:this.iterate,condition:this.condition,resultSelector:this.resultSelector,state:state});}var _a=this,condition=_a.condition,resultSelector=_a.resultSelector,iterate=_a.iterate;do{if(condition){var conditionResult=void 0;try{conditionResult=condition(state);}catch(err){subscriber.error(err);return;}if(!conditionResult){subscriber.complete();break;}}var value=void 0;try{value=resultSelector(state);}catch(err){subscriber.error(err);return;}subscriber.next(value);if(subscriber.closed){break;}try{state=iterate(state);}catch(err){subscriber.error(err);return;}}while(true);};GenerateObservable.dispatch=function(state){var subscriber=state.subscriber,condition=state.condition;if(subscriber.closed){return;}if(state.needIterate){try{state.state=state.iterate(state.state);}catch(err){subscriber.error(err);return;}}else{state.needIterate=true;}if(condition){var conditionResult=void 0;try{conditionResult=condition(state.state);}catch(err){subscriber.error(err);return;}if(!conditionResult){subscriber.complete();return;}if(subscriber.closed){return;}}var value;try{value=state.resultSelector(state.state);}catch(err){subscriber.error(err);return;}if(subscriber.closed){return;}subscriber.next(value);if(subscriber.closed){return;}return this.schedule(state);};return GenerateObservable;}(Observable_1.Observable);exports.GenerateObservable=GenerateObservable;//# sourceMappingURL=GenerateObservable.js.map

/***/ }),
/* 426 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var if_1=__webpack_require__(427);Observable_1.Observable.if=if_1._if;//# sourceMappingURL=if.js.map

/***/ }),
/* 427 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var IfObservable_1=__webpack_require__(428);exports._if=IfObservable_1.IfObservable.create;//# sourceMappingURL=if.js.map

/***/ }),
/* 428 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var subscribeToResult_1=__webpack_require__(6);var OuterSubscriber_1=__webpack_require__(5);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var IfObservable=function(_super){__extends(IfObservable,_super);function IfObservable(condition,thenSource,elseSource){_super.call(this);this.condition=condition;this.thenSource=thenSource;this.elseSource=elseSource;}IfObservable.create=function(condition,thenSource,elseSource){return new IfObservable(condition,thenSource,elseSource);};IfObservable.prototype._subscribe=function(subscriber){var _a=this,condition=_a.condition,thenSource=_a.thenSource,elseSource=_a.elseSource;return new IfSubscriber(subscriber,condition,thenSource,elseSource);};return IfObservable;}(Observable_1.Observable);exports.IfObservable=IfObservable;var IfSubscriber=function(_super){__extends(IfSubscriber,_super);function IfSubscriber(destination,condition,thenSource,elseSource){_super.call(this,destination);this.condition=condition;this.thenSource=thenSource;this.elseSource=elseSource;this.tryIf();}IfSubscriber.prototype.tryIf=function(){var _a=this,condition=_a.condition,thenSource=_a.thenSource,elseSource=_a.elseSource;var result;try{result=condition();var source=result?thenSource:elseSource;if(source){this.add(subscribeToResult_1.subscribeToResult(this,source));}else{this._complete();}}catch(err){this._error(err);}};return IfSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=IfObservable.js.map

/***/ }),
/* 429 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var interval_1=__webpack_require__(430);Observable_1.Observable.interval=interval_1.interval;//# sourceMappingURL=interval.js.map

/***/ }),
/* 430 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var IntervalObservable_1=__webpack_require__(431);exports.interval=IntervalObservable_1.IntervalObservable.create;//# sourceMappingURL=interval.js.map

/***/ }),
/* 431 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var isNumeric_1=__webpack_require__(70);var Observable_1=__webpack_require__(0);var async_1=__webpack_require__(16);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var IntervalObservable=function(_super){__extends(IntervalObservable,_super);function IntervalObservable(period,scheduler){if(period===void 0){period=0;}if(scheduler===void 0){scheduler=async_1.async;}_super.call(this);this.period=period;this.scheduler=scheduler;if(!isNumeric_1.isNumeric(period)||period<0){this.period=0;}if(!scheduler||typeof scheduler.schedule!=='function'){this.scheduler=async_1.async;}}/**
     * Creates an Observable that emits sequential numbers every specified
     * interval of time, on a specified IScheduler.
     *
     * <span class="informal">Emits incremental numbers periodically in time.
     * </span>
     *
     * <img src="./img/interval.png" width="100%">
     *
     * `interval` returns an Observable that emits an infinite sequence of
     * ascending integers, with a constant interval of time of your choosing
     * between those emissions. The first emission is not sent immediately, but
     * only after the first period has passed. By default, this operator uses the
     * `async` IScheduler to provide a notion of time, but you may pass any
     * IScheduler to it.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>
     * var numbers = Rx.Observable.interval(1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link delay}
     *
     * @param {number} [period=0] The interval size in milliseconds (by default)
     * or the time unit determined by the scheduler's clock.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a sequential number each time
     * interval.
     * @static true
     * @name interval
     * @owner Observable
     */IntervalObservable.create=function(period,scheduler){if(period===void 0){period=0;}if(scheduler===void 0){scheduler=async_1.async;}return new IntervalObservable(period,scheduler);};IntervalObservable.dispatch=function(state){var index=state.index,subscriber=state.subscriber,period=state.period;subscriber.next(index);if(subscriber.closed){return;}state.index+=1;this.schedule(state,period);};IntervalObservable.prototype._subscribe=function(subscriber){var index=0;var period=this.period;var scheduler=this.scheduler;subscriber.add(scheduler.schedule(IntervalObservable.dispatch,period,{index:index,subscriber:subscriber,period:period}));};return IntervalObservable;}(Observable_1.Observable);exports.IntervalObservable=IntervalObservable;//# sourceMappingURL=IntervalObservable.js.map

/***/ }),
/* 432 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscription_1=__webpack_require__(9);/**
 * A unit of work to be executed in a {@link Scheduler}. An action is typically
 * created from within a Scheduler and an RxJS user does not need to concern
 * themselves about creating and manipulating an Action.
 *
 * ```ts
 * class Action<T> extends Subscription {
 *   new (scheduler: Scheduler, work: (state?: T) => void);
 *   schedule(state?: T, delay: number = 0): Subscription;
 * }
 * ```
 *
 * @class Action<T>
 */var Action=function(_super){__extends(Action,_super);function Action(scheduler,work){_super.call(this);}/**
     * Schedules this action on its parent Scheduler for execution. May be passed
     * some context object, `state`. May happen at some point in the future,
     * according to the `delay` parameter, if specified.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler.
     * @return {void}
     */Action.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}return this;};return Action;}(Subscription_1.Subscription);exports.Action=Action;//# sourceMappingURL=Action.js.map

/***/ }),
/* 433 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * An execution context and a data structure to order tasks and schedule their
 * execution. Provides a notion of (potentially virtual) time, through the
 * `now()` getter method.
 *
 * Each unit of work in a Scheduler is called an {@link Action}.
 *
 * ```ts
 * class Scheduler {
 *   now(): number;
 *   schedule(work, delay?, state?): Subscription;
 * }
 * ```
 *
 * @class Scheduler
 */var Scheduler=function(){function Scheduler(SchedulerAction,now){if(now===void 0){now=Scheduler.now;}this.SchedulerAction=SchedulerAction;this.now=now;}/**
     * Schedules a function, `work`, for execution. May happen at some point in
     * the future, according to the `delay` parameter, if specified. May be passed
     * some context object, `state`, which will be passed to the `work` function.
     *
     * The given arguments will be processed an stored as an Action object in a
     * queue of actions.
     *
     * @param {function(state: ?T): ?Subscription} work A function representing a
     * task, or some unit of work to be executed by the Scheduler.
     * @param {number} [delay] Time to wait before executing the work, where the
     * time unit is implicit and defined by the Scheduler itself.
     * @param {T} [state] Some contextual data that the `work` function uses when
     * called by the Scheduler.
     * @return {Subscription} A subscription in order to be able to unsubscribe
     * the scheduled work.
     */Scheduler.prototype.schedule=function(work,delay,state){if(delay===void 0){delay=0;}return new this.SchedulerAction(this,work).schedule(state,delay);};Scheduler.now=Date.now?Date.now:function(){return+new Date();};return Scheduler;}();exports.Scheduler=Scheduler;//# sourceMappingURL=Scheduler.js.map

/***/ }),
/* 434 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var merge_1=__webpack_require__(435);Observable_1.Observable.merge=merge_1.merge;//# sourceMappingURL=merge.js.map

/***/ }),
/* 435 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var merge_1=__webpack_require__(167);exports.merge=merge_1.mergeStatic;//# sourceMappingURL=merge.js.map

/***/ }),
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var race_1=__webpack_require__(437);Observable_1.Observable.race=race_1.race;//# sourceMappingURL=race.js.map

/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var race_1=__webpack_require__(168);exports.race=race_1.raceStatic;//# sourceMappingURL=race.js.map

/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var never_1=__webpack_require__(439);Observable_1.Observable.never=never_1.never;//# sourceMappingURL=never.js.map

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var NeverObservable_1=__webpack_require__(440);exports.never=NeverObservable_1.NeverObservable.create;//# sourceMappingURL=never.js.map

/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var noop_1=__webpack_require__(169);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var NeverObservable=function(_super){__extends(NeverObservable,_super);function NeverObservable(){_super.call(this);}/**
     * Creates an Observable that emits no items to the Observer.
     *
     * <span class="informal">An Observable that never emits anything.</span>
     *
     * <img src="./img/never.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that emits
     * neither values nor errors nor the completion notification. It can be used
     * for testing purposes or for composing with other Observables. Please note
     * that by never emitting a complete notification, this Observable keeps the
     * subscription from being disposed automatically. Subscriptions need to be
     * manually disposed.
     *
     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>
     * function info() {
     *   console.log('Will not be called');
     * }
     * var result = Rx.Observable.never().startWith(7);
     * result.subscribe(x => console.log(x), info, info);
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link of}
     * @see {@link throw}
     *
     * @return {Observable} A "never" Observable: never emits anything.
     * @static true
     * @name never
     * @owner Observable
     */NeverObservable.create=function(){return new NeverObservable();};NeverObservable.prototype._subscribe=function(subscriber){noop_1.noop();};return NeverObservable;}(Observable_1.Observable);exports.NeverObservable=NeverObservable;//# sourceMappingURL=NeverObservable.js.map

/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var of_1=__webpack_require__(442);Observable_1.Observable.of=of_1.of;//# sourceMappingURL=of.js.map

/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var ArrayObservable_1=__webpack_require__(26);exports.of=ArrayObservable_1.ArrayObservable.of;//# sourceMappingURL=of.js.map

/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var onErrorResumeNext_1=__webpack_require__(444);Observable_1.Observable.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNext;//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var onErrorResumeNext_1=__webpack_require__(170);exports.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNextStatic;//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var pairs_1=__webpack_require__(446);Observable_1.Observable.pairs=pairs_1.pairs;//# sourceMappingURL=pairs.js.map

/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var PairsObservable_1=__webpack_require__(447);exports.pairs=PairsObservable_1.PairsObservable.create;//# sourceMappingURL=pairs.js.map

/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);function dispatch(state){var obj=state.obj,keys=state.keys,length=state.length,index=state.index,subscriber=state.subscriber;if(index===length){subscriber.complete();return;}var key=keys[index];subscriber.next([key,obj[key]]);state.index=index+1;this.schedule(state);}/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var PairsObservable=function(_super){__extends(PairsObservable,_super);function PairsObservable(obj,scheduler){_super.call(this);this.obj=obj;this.scheduler=scheduler;this.keys=Object.keys(obj);}/**
     * Convert an object into an observable sequence of [key, value] pairs
     * using an optional IScheduler to enumerate the object.
     *
     * @example <caption>Converts a javascript object to an Observable</caption>
     * var obj = {
     *   foo: 42,
     *   bar: 56,
     *   baz: 78
     * };
     *
     * var source = Rx.Observable.pairs(obj);
     *
     * var subscription = source.subscribe(
     *   function (x) {
     *     console.log('Next: %s', x);
     *   },
     *   function (err) {
     *     console.log('Error: %s', err);
     *   },
     *   function () {
     *     console.log('Completed');
     *   });
     *
     * @param {Object} obj The object to inspect and turn into an
     * Observable sequence.
     * @param {Scheduler} [scheduler] An optional IScheduler to run the
     * enumeration of the input sequence on.
     * @returns {(Observable<Array<string | T>>)} An observable sequence of
     * [key, value] pairs from the object.
     */PairsObservable.create=function(obj,scheduler){return new PairsObservable(obj,scheduler);};PairsObservable.prototype._subscribe=function(subscriber){var _a=this,keys=_a.keys,scheduler=_a.scheduler;var length=keys.length;if(scheduler){return scheduler.schedule(dispatch,0,{obj:this.obj,keys:keys,length:length,index:0,subscriber:subscriber});}else{for(var idx=0;idx<length;idx++){var key=keys[idx];subscriber.next([key,this.obj[key]]);}subscriber.complete();}};return PairsObservable;}(Observable_1.Observable);exports.PairsObservable=PairsObservable;//# sourceMappingURL=PairsObservable.js.map

/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var range_1=__webpack_require__(449);Observable_1.Observable.range=range_1.range;//# sourceMappingURL=range.js.map

/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var RangeObservable_1=__webpack_require__(450);exports.range=RangeObservable_1.RangeObservable.create;//# sourceMappingURL=range.js.map

/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var RangeObservable=function(_super){__extends(RangeObservable,_super);function RangeObservable(start,count,scheduler){_super.call(this);this.start=start;this._count=count;this.scheduler=scheduler;}/**
     * Creates an Observable that emits a sequence of numbers within a specified
     * range.
     *
     * <span class="informal">Emits a sequence of numbers in a range.</span>
     *
     * <img src="./img/range.png" width="100%">
     *
     * `range` operator emits a range of sequential integers, in order, where you
     * select the `start` of the range and its `length`. By default, uses no
     * IScheduler and just delivers the notifications synchronously, but may use
     * an optional IScheduler to regulate those deliveries.
     *
     * @example <caption>Emits the numbers 1 to 10</caption>
     * var numbers = Rx.Observable.range(1, 10);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link timer}
     * @see {@link interval}
     *
     * @param {number} [start=0] The value of the first integer in the sequence.
     * @param {number} [count=0] The number of sequential integers to generate.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emissions of the notifications.
     * @return {Observable} An Observable of numbers that emits a finite range of
     * sequential integers.
     * @static true
     * @name range
     * @owner Observable
     */RangeObservable.create=function(start,count,scheduler){if(start===void 0){start=0;}if(count===void 0){count=0;}return new RangeObservable(start,count,scheduler);};RangeObservable.dispatch=function(state){var start=state.start,index=state.index,count=state.count,subscriber=state.subscriber;if(index>=count){subscriber.complete();return;}subscriber.next(start);if(subscriber.closed){return;}state.index=index+1;state.start=start+1;this.schedule(state);};RangeObservable.prototype._subscribe=function(subscriber){var index=0;var start=this.start;var count=this._count;var scheduler=this.scheduler;if(scheduler){return scheduler.schedule(RangeObservable.dispatch,0,{index:index,count:count,start:start,subscriber:subscriber});}else{do{if(index++>=count){subscriber.complete();break;}subscriber.next(start++);if(subscriber.closed){break;}}while(true);}};return RangeObservable;}(Observable_1.Observable);exports.RangeObservable=RangeObservable;//# sourceMappingURL=RangeObservable.js.map

/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var using_1=__webpack_require__(452);Observable_1.Observable.using=using_1.using;//# sourceMappingURL=using.js.map

/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var UsingObservable_1=__webpack_require__(453);exports.using=UsingObservable_1.UsingObservable.create;//# sourceMappingURL=using.js.map

/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var subscribeToResult_1=__webpack_require__(6);var OuterSubscriber_1=__webpack_require__(5);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var UsingObservable=function(_super){__extends(UsingObservable,_super);function UsingObservable(resourceFactory,observableFactory){_super.call(this);this.resourceFactory=resourceFactory;this.observableFactory=observableFactory;}UsingObservable.create=function(resourceFactory,observableFactory){return new UsingObservable(resourceFactory,observableFactory);};UsingObservable.prototype._subscribe=function(subscriber){var _a=this,resourceFactory=_a.resourceFactory,observableFactory=_a.observableFactory;var resource;try{resource=resourceFactory();return new UsingSubscriber(subscriber,resource,observableFactory);}catch(err){subscriber.error(err);}};return UsingObservable;}(Observable_1.Observable);exports.UsingObservable=UsingObservable;var UsingSubscriber=function(_super){__extends(UsingSubscriber,_super);function UsingSubscriber(destination,resource,observableFactory){_super.call(this,destination);this.resource=resource;this.observableFactory=observableFactory;destination.add(resource);this.tryUse();}UsingSubscriber.prototype.tryUse=function(){try{var source=this.observableFactory.call(this,this.resource);if(source){this.add(subscribeToResult_1.subscribeToResult(this,source));}}catch(err){this._error(err);}};return UsingSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=UsingObservable.js.map

/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var throw_1=__webpack_require__(455);Observable_1.Observable.throw=throw_1._throw;//# sourceMappingURL=throw.js.map

/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var ErrorObservable_1=__webpack_require__(456);exports._throw=ErrorObservable_1.ErrorObservable.create;//# sourceMappingURL=throw.js.map

/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var ErrorObservable=function(_super){__extends(ErrorObservable,_super);function ErrorObservable(error,scheduler){_super.call(this);this.error=error;this.scheduler=scheduler;}/**
     * Creates an Observable that emits no items to the Observer and immediately
     * emits an error notification.
     *
     * <span class="informal">Just emits 'error', and nothing else.
     * </span>
     *
     * <img src="./img/throw.png" width="100%">
     *
     * This static operator is useful for creating a simple Observable that only
     * emits the error notification. It can be used for composing with other
     * Observables, such as in a {@link mergeMap}.
     *
     * @example <caption>Emit the number 7, then emit an error.</caption>
     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>
     * var interval = Rx.Observable.interval(1000);
     * var result = interval.mergeMap(x =>
     *   x === 13 ?
     *     Rx.Observable.throw('Thirteens are bad') :
     *     Rx.Observable.of('a', 'b', 'c')
     * );
     * result.subscribe(x => console.log(x), e => console.error(e));
     *
     * @see {@link create}
     * @see {@link empty}
     * @see {@link never}
     * @see {@link of}
     *
     * @param {any} error The particular Error to pass to the error notification.
     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling
     * the emission of the error notification.
     * @return {Observable} An error Observable: emits only the error notification
     * using the given error argument.
     * @static true
     * @name throw
     * @owner Observable
     */ErrorObservable.create=function(error,scheduler){return new ErrorObservable(error,scheduler);};ErrorObservable.dispatch=function(arg){var error=arg.error,subscriber=arg.subscriber;subscriber.error(error);};ErrorObservable.prototype._subscribe=function(subscriber){var error=this.error;var scheduler=this.scheduler;subscriber.syncErrorThrowable=true;if(scheduler){return scheduler.schedule(ErrorObservable.dispatch,0,{error:error,subscriber:subscriber});}else{subscriber.error(error);}};return ErrorObservable;}(Observable_1.Observable);exports.ErrorObservable=ErrorObservable;//# sourceMappingURL=ErrorObservable.js.map

/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var timer_1=__webpack_require__(458);Observable_1.Observable.timer=timer_1.timer;//# sourceMappingURL=timer.js.map

/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var TimerObservable_1=__webpack_require__(459);exports.timer=TimerObservable_1.TimerObservable.create;//# sourceMappingURL=timer.js.map

/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var isNumeric_1=__webpack_require__(70);var Observable_1=__webpack_require__(0);var async_1=__webpack_require__(16);var isScheduler_1=__webpack_require__(25);var isDate_1=__webpack_require__(71);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var TimerObservable=function(_super){__extends(TimerObservable,_super);function TimerObservable(dueTime,period,scheduler){if(dueTime===void 0){dueTime=0;}_super.call(this);this.period=-1;this.dueTime=0;if(isNumeric_1.isNumeric(period)){this.period=Number(period)<1&&1||Number(period);}else if(isScheduler_1.isScheduler(period)){scheduler=period;}if(!isScheduler_1.isScheduler(scheduler)){scheduler=async_1.async;}this.scheduler=scheduler;this.dueTime=isDate_1.isDate(dueTime)?+dueTime-this.scheduler.now():dueTime;}/**
     * Creates an Observable that starts emitting after an `initialDelay` and
     * emits ever increasing numbers after each `period` of time thereafter.
     *
     * <span class="informal">Its like {@link interval}, but you can specify when
     * should the emissions start.</span>
     *
     * <img src="./img/timer.png" width="100%">
     *
     * `timer` returns an Observable that emits an infinite sequence of ascending
     * integers, with a constant interval of time, `period` of your choosing
     * between those emissions. The first emission happens after the specified
     * `initialDelay`. The initial delay may be a {@link Date}. By default, this
     * operator uses the `async` IScheduler to provide a notion of time, but you
     * may pass any IScheduler to it. If `period` is not specified, the output
     * Observable emits only one value, `0`. Otherwise, it emits an infinite
     * sequence.
     *
     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>
     * var numbers = Rx.Observable.timer(3000, 1000);
     * numbers.subscribe(x => console.log(x));
     *
     * @example <caption>Emits one number after five seconds</caption>
     * var numbers = Rx.Observable.timer(5000);
     * numbers.subscribe(x => console.log(x));
     *
     * @see {@link interval}
     * @see {@link delay}
     *
     * @param {number|Date} initialDelay The initial delay time to wait before
     * emitting the first value of `0`.
     * @param {number} [period] The period of time between emissions of the
     * subsequent numbers.
     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling
     * the emission of values, and providing a notion of "time".
     * @return {Observable} An Observable that emits a `0` after the
     * `initialDelay` and ever increasing numbers after each `period` of time
     * thereafter.
     * @static true
     * @name timer
     * @owner Observable
     */TimerObservable.create=function(initialDelay,period,scheduler){if(initialDelay===void 0){initialDelay=0;}return new TimerObservable(initialDelay,period,scheduler);};TimerObservable.dispatch=function(state){var index=state.index,period=state.period,subscriber=state.subscriber;var action=this;subscriber.next(index);if(subscriber.closed){return;}else if(period===-1){return subscriber.complete();}state.index=index+1;action.schedule(state,period);};TimerObservable.prototype._subscribe=function(subscriber){var index=0;var _a=this,period=_a.period,dueTime=_a.dueTime,scheduler=_a.scheduler;return scheduler.schedule(TimerObservable.dispatch,dueTime,{index:index,period:period,subscriber:subscriber});};return TimerObservable;}(Observable_1.Observable);exports.TimerObservable=TimerObservable;//# sourceMappingURL=TimerObservable.js.map

/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var zip_1=__webpack_require__(461);Observable_1.Observable.zip=zip_1.zip;//# sourceMappingURL=zip.js.map

/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var zip_1=__webpack_require__(99);exports.zip=zip_1.zipStatic;//# sourceMappingURL=zip.js.map

/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var ajax_1=__webpack_require__(463);Observable_1.Observable.ajax=ajax_1.ajax;//# sourceMappingURL=ajax.js.map

/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var AjaxObservable_1=__webpack_require__(171);exports.ajax=AjaxObservable_1.AjaxObservable.create;//# sourceMappingURL=ajax.js.map

/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var webSocket_1=__webpack_require__(465);Observable_1.Observable.webSocket=webSocket_1.webSocket;//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var WebSocketSubject_1=__webpack_require__(466);exports.webSocket=WebSocketSubject_1.WebSocketSubject.create;//# sourceMappingURL=webSocket.js.map

/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var Subscriber_1=__webpack_require__(2);var Observable_1=__webpack_require__(0);var Subscription_1=__webpack_require__(9);var root_1=__webpack_require__(12);var ReplaySubject_1=__webpack_require__(72);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var assign_1=__webpack_require__(469);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var WebSocketSubject=function(_super){__extends(WebSocketSubject,_super);function WebSocketSubject(urlConfigOrSource,destination){if(urlConfigOrSource instanceof Observable_1.Observable){_super.call(this,destination,urlConfigOrSource);}else{_super.call(this);this.WebSocketCtor=root_1.root.WebSocket;this._output=new Subject_1.Subject();if(typeof urlConfigOrSource==='string'){this.url=urlConfigOrSource;}else{// WARNING: config object could override important members here.
assign_1.assign(this,urlConfigOrSource);}if(!this.WebSocketCtor){throw new Error('no WebSocket constructor can be found');}this.destination=new ReplaySubject_1.ReplaySubject();}}WebSocketSubject.prototype.resultSelector=function(e){return JSON.parse(e.data);};/**
     * Wrapper around the w3c-compatible WebSocket object provided by the browser.
     *
     * @example <caption>Wraps browser WebSocket</caption>
     *
     * let socket$ = Observable.webSocket('ws://localhost:8081');
     *
     * socket$.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     *
     * socket$.next(JSON.stringify({ op: 'hello' }));
     *
     * @example <caption>Wraps WebSocket from nodejs-websocket (using node.js)</caption>
     *
     * import { w3cwebsocket } from 'websocket';
     *
     * let socket$ = Observable.webSocket({
     *   url: 'ws://localhost:8081',
     *   WebSocketCtor: w3cwebsocket
     * });
     *
     * socket$.subscribe(
     *    (msg) => console.log('message received: ' + msg),
     *    (err) => console.log(err),
     *    () => console.log('complete')
     *  );
     *
     * socket$.next(JSON.stringify({ op: 'hello' }));
     *
     * @param {string | WebSocketSubjectConfig} urlConfigOrSource the source of the websocket as an url or a structure defining the websocket object
     * @return {WebSocketSubject}
     * @static true
     * @name webSocket
     * @owner Observable
     */WebSocketSubject.create=function(urlConfigOrSource){return new WebSocketSubject(urlConfigOrSource);};WebSocketSubject.prototype.lift=function(operator){var sock=new WebSocketSubject(this,this.destination);sock.operator=operator;return sock;};WebSocketSubject.prototype._resetState=function(){this.socket=null;if(!this.source){this.destination=new ReplaySubject_1.ReplaySubject();}this._output=new Subject_1.Subject();};// TODO: factor this out to be a proper Operator/Subscriber implementation and eliminate closures
WebSocketSubject.prototype.multiplex=function(subMsg,unsubMsg,messageFilter){var self=this;return new Observable_1.Observable(function(observer){var result=tryCatch_1.tryCatch(subMsg)();if(result===errorObject_1.errorObject){observer.error(errorObject_1.errorObject.e);}else{self.next(result);}var subscription=self.subscribe(function(x){var result=tryCatch_1.tryCatch(messageFilter)(x);if(result===errorObject_1.errorObject){observer.error(errorObject_1.errorObject.e);}else if(result){observer.next(x);}},function(err){return observer.error(err);},function(){return observer.complete();});return function(){var result=tryCatch_1.tryCatch(unsubMsg)();if(result===errorObject_1.errorObject){observer.error(errorObject_1.errorObject.e);}else{self.next(result);}subscription.unsubscribe();};});};WebSocketSubject.prototype._connectSocket=function(){var _this=this;var WebSocketCtor=this.WebSocketCtor;var observer=this._output;var socket=null;try{socket=this.protocol?new WebSocketCtor(this.url,this.protocol):new WebSocketCtor(this.url);this.socket=socket;if(this.binaryType){this.socket.binaryType=this.binaryType;}}catch(e){observer.error(e);return;}var subscription=new Subscription_1.Subscription(function(){_this.socket=null;if(socket&&socket.readyState===1){socket.close();}});socket.onopen=function(e){var openObserver=_this.openObserver;if(openObserver){openObserver.next(e);}var queue=_this.destination;_this.destination=Subscriber_1.Subscriber.create(function(x){return socket.readyState===1&&socket.send(x);},function(e){var closingObserver=_this.closingObserver;if(closingObserver){closingObserver.next(undefined);}if(e&&e.code){socket.close(e.code,e.reason);}else{observer.error(new TypeError('WebSocketSubject.error must be called with an object with an error code, '+'and an optional reason: { code: number, reason: string }'));}_this._resetState();},function(){var closingObserver=_this.closingObserver;if(closingObserver){closingObserver.next(undefined);}socket.close();_this._resetState();});if(queue&&queue instanceof ReplaySubject_1.ReplaySubject){subscription.add(queue.subscribe(_this.destination));}};socket.onerror=function(e){_this._resetState();observer.error(e);};socket.onclose=function(e){_this._resetState();var closeObserver=_this.closeObserver;if(closeObserver){closeObserver.next(e);}if(e.wasClean){observer.complete();}else{observer.error(e);}};socket.onmessage=function(e){var result=tryCatch_1.tryCatch(_this.resultSelector)(e);if(result===errorObject_1.errorObject){observer.error(errorObject_1.errorObject.e);}else{observer.next(result);}};};WebSocketSubject.prototype._subscribe=function(subscriber){var _this=this;var source=this.source;if(source){return source.subscribe(subscriber);}if(!this.socket){this._connectSocket();}var subscription=new Subscription_1.Subscription();subscription.add(this._output.subscribe(subscriber));subscription.add(function(){var socket=_this.socket;if(_this._output.observers.length===0){if(socket&&socket.readyState===1){socket.close();}_this._resetState();}});return subscription;};WebSocketSubject.prototype.unsubscribe=function(){var _a=this,source=_a.source,socket=_a.socket;if(socket&&socket.readyState===1){socket.close();this._resetState();}_super.prototype.unsubscribe.call(this);if(!source){this.destination=new ReplaySubject_1.ReplaySubject();}};return WebSocketSubject;}(Subject_1.AnonymousSubject);exports.WebSocketSubject=WebSocketSubject;//# sourceMappingURL=WebSocketSubject.js.map

/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var AsyncAction_1=__webpack_require__(44);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var QueueAction=function(_super){__extends(QueueAction,_super);function QueueAction(scheduler,work){_super.call(this,scheduler,work);this.scheduler=scheduler;this.work=work;}QueueAction.prototype.schedule=function(state,delay){if(delay===void 0){delay=0;}if(delay>0){return _super.prototype.schedule.call(this,state,delay);}this.delay=delay;this.state=state;this.scheduler.flush(this);return this;};QueueAction.prototype.execute=function(state,delay){return delay>0||this.closed?_super.prototype.execute.call(this,state,delay):this._execute(state,delay);};QueueAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}// If delay exists and is greater than 0, or if the delay is null (the
// action wasn't rescheduled) but was originally scheduled as an async
// action, then recycle as an async action.
if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}// Otherwise flush the scheduler starting with this action.
return scheduler.flush(this);};return QueueAction;}(AsyncAction_1.AsyncAction);exports.QueueAction=QueueAction;//# sourceMappingURL=QueueAction.js.map

/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var AsyncScheduler_1=__webpack_require__(45);var QueueScheduler=function(_super){__extends(QueueScheduler,_super);function QueueScheduler(){_super.apply(this,arguments);}return QueueScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.QueueScheduler=QueueScheduler;//# sourceMappingURL=QueueScheduler.js.map

/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);function assignImpl(target){var sources=[];for(var _i=1;_i<arguments.length;_i++){sources[_i-1]=arguments[_i];}var len=sources.length;for(var i=0;i<len;i++){var source=sources[i];for(var k in source){if(source.hasOwnProperty(k)){target[k]=source[k];}}}return target;}exports.assignImpl=assignImpl;;function getAssign(root){return root.Object.assign||assignImpl;}exports.getAssign=getAssign;exports.assign=getAssign(root_1.root);//# sourceMappingURL=assign.js.map

/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var buffer_1=__webpack_require__(471);Observable_1.Observable.prototype.buffer=buffer_1.buffer;//# sourceMappingURL=buffer.js.map

/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Buffers the source Observable values until `closingNotifier` emits.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when another Observable emits.</span>
 *
 * <img src="./img/buffer.png" width="100%">
 *
 * Buffers the incoming Observable values until the given `closingNotifier`
 * Observable emits a value, at which point it emits the buffer on the output
 * Observable and starts a new buffer internally, awaiting the next time
 * `closingNotifier` emits.
 *
 * @example <caption>On every click, emit array of most recent interval events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var buffered = interval.buffer(clicks);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link window}
 *
 * @param {Observable<any>} closingNotifier An Observable that signals the
 * buffer to be emitted on the output Observable.
 * @return {Observable<T[]>} An Observable of buffers, which are arrays of
 * values.
 * @method buffer
 * @owner Observable
 */function buffer(closingNotifier){return this.lift(new BufferOperator(closingNotifier));}exports.buffer=buffer;var BufferOperator=function(){function BufferOperator(closingNotifier){this.closingNotifier=closingNotifier;}BufferOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferSubscriber(subscriber,this.closingNotifier));};return BufferOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var BufferSubscriber=function(_super){__extends(BufferSubscriber,_super);function BufferSubscriber(destination,closingNotifier){_super.call(this,destination);this.buffer=[];this.add(subscribeToResult_1.subscribeToResult(this,closingNotifier));}BufferSubscriber.prototype._next=function(value){this.buffer.push(value);};BufferSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var buffer=this.buffer;this.buffer=[];this.destination.next(buffer);};return BufferSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=buffer.js.map

/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var bufferCount_1=__webpack_require__(473);Observable_1.Observable.prototype.bufferCount=bufferCount_1.bufferCount;//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Buffers the source Observable values until the size hits the maximum
 * `bufferSize` given.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * that array only when its size reaches `bufferSize`.</span>
 *
 * <img src="./img/bufferCount.png" width="100%">
 *
 * Buffers a number of values from the source Observable by `bufferSize` then
 * emits the buffer and clears it, and starts a new buffer each
 * `startBufferEvery` values. If `startBufferEvery` is not provided or is
 * `null`, then new buffers are started immediately at the start of the source
 * and when each buffer closes and is emitted.
 *
 * @example <caption>Emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>On every click, emit the last two click events as an array</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferCount(2, 1);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link pairwise}
 * @see {@link windowCount}
 *
 * @param {number} bufferSize The maximum size of the buffer emitted.
 * @param {number} [startBufferEvery] Interval at which to start a new buffer.
 * For example if `startBufferEvery` is `2`, then a new buffer will be started
 * on every other value from the source. A new buffer is started at the
 * beginning of the source by default.
 * @return {Observable<T[]>} An Observable of arrays of buffered values.
 * @method bufferCount
 * @owner Observable
 */function bufferCount(bufferSize,startBufferEvery){if(startBufferEvery===void 0){startBufferEvery=null;}return this.lift(new BufferCountOperator(bufferSize,startBufferEvery));}exports.bufferCount=bufferCount;var BufferCountOperator=function(){function BufferCountOperator(bufferSize,startBufferEvery){this.bufferSize=bufferSize;this.startBufferEvery=startBufferEvery;if(!startBufferEvery||bufferSize===startBufferEvery){this.subscriberClass=BufferCountSubscriber;}else{this.subscriberClass=BufferSkipCountSubscriber;}}BufferCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new this.subscriberClass(subscriber,this.bufferSize,this.startBufferEvery));};return BufferCountOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var BufferCountSubscriber=function(_super){__extends(BufferCountSubscriber,_super);function BufferCountSubscriber(destination,bufferSize){_super.call(this,destination);this.bufferSize=bufferSize;this.buffer=[];}BufferCountSubscriber.prototype._next=function(value){var buffer=this.buffer;buffer.push(value);if(buffer.length==this.bufferSize){this.destination.next(buffer);this.buffer=[];}};BufferCountSubscriber.prototype._complete=function(){var buffer=this.buffer;if(buffer.length>0){this.destination.next(buffer);}_super.prototype._complete.call(this);};return BufferCountSubscriber;}(Subscriber_1.Subscriber);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var BufferSkipCountSubscriber=function(_super){__extends(BufferSkipCountSubscriber,_super);function BufferSkipCountSubscriber(destination,bufferSize,startBufferEvery){_super.call(this,destination);this.bufferSize=bufferSize;this.startBufferEvery=startBufferEvery;this.buffers=[];this.count=0;}BufferSkipCountSubscriber.prototype._next=function(value){var _a=this,bufferSize=_a.bufferSize,startBufferEvery=_a.startBufferEvery,buffers=_a.buffers,count=_a.count;this.count++;if(count%startBufferEvery===0){buffers.push([]);}for(var i=buffers.length;i--;){var buffer=buffers[i];buffer.push(value);if(buffer.length===bufferSize){buffers.splice(i,1);this.destination.next(buffer);}}};BufferSkipCountSubscriber.prototype._complete=function(){var _a=this,buffers=_a.buffers,destination=_a.destination;while(buffers.length>0){var buffer=buffers.shift();if(buffer.length>0){destination.next(buffer);}}_super.prototype._complete.call(this);};return BufferSkipCountSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=bufferCount.js.map

/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var bufferTime_1=__webpack_require__(475);Observable_1.Observable.prototype.bufferTime=bufferTime_1.bufferTime;//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var async_1=__webpack_require__(16);var Subscriber_1=__webpack_require__(2);var isScheduler_1=__webpack_require__(25);/* tslint:enable:max-line-length *//**
 * Buffers the source Observable values for a specific time period.
 *
 * <span class="informal">Collects values from the past as an array, and emits
 * those arrays periodically in time.</span>
 *
 * <img src="./img/bufferTime.png" width="100%">
 *
 * Buffers values from the source for a specific time duration `bufferTimeSpan`.
 * Unless the optional argument `bufferCreationInterval` is given, it emits and
 * resets the buffer every `bufferTimeSpan` milliseconds. If
 * `bufferCreationInterval` is given, this operator opens the buffer every
 * `bufferCreationInterval` milliseconds and closes (emits and resets) the
 * buffer every `bufferTimeSpan` milliseconds. When the optional argument
 * `maxBufferSize` is specified, the buffer will be closed either after
 * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.
 *
 * @example <caption>Every second, emit an array of the recent click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(1000);
 * buffered.subscribe(x => console.log(x));
 *
 * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferTime(2000, 5000);
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferToggle}
 * @see {@link bufferWhen}
 * @see {@link windowTime}
 *
 * @param {number} bufferTimeSpan The amount of time to fill each buffer array.
 * @param {number} [bufferCreationInterval] The interval at which to start new
 * buffers.
 * @param {number} [maxBufferSize] The maximum buffer size.
 * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the
 * intervals that determine buffer boundaries.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferTime
 * @owner Observable
 */function bufferTime(bufferTimeSpan){var length=arguments.length;var scheduler=async_1.async;if(isScheduler_1.isScheduler(arguments[arguments.length-1])){scheduler=arguments[arguments.length-1];length--;}var bufferCreationInterval=null;if(length>=2){bufferCreationInterval=arguments[1];}var maxBufferSize=Number.POSITIVE_INFINITY;if(length>=3){maxBufferSize=arguments[2];}return this.lift(new BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler));}exports.bufferTime=bufferTime;var BufferTimeOperator=function(){function BufferTimeOperator(bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){this.bufferTimeSpan=bufferTimeSpan;this.bufferCreationInterval=bufferCreationInterval;this.maxBufferSize=maxBufferSize;this.scheduler=scheduler;}BufferTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferTimeSubscriber(subscriber,this.bufferTimeSpan,this.bufferCreationInterval,this.maxBufferSize,this.scheduler));};return BufferTimeOperator;}();var Context=function(){function Context(){this.buffer=[];}return Context;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var BufferTimeSubscriber=function(_super){__extends(BufferTimeSubscriber,_super);function BufferTimeSubscriber(destination,bufferTimeSpan,bufferCreationInterval,maxBufferSize,scheduler){_super.call(this,destination);this.bufferTimeSpan=bufferTimeSpan;this.bufferCreationInterval=bufferCreationInterval;this.maxBufferSize=maxBufferSize;this.scheduler=scheduler;this.contexts=[];var context=this.openContext();this.timespanOnly=bufferCreationInterval==null||bufferCreationInterval<0;if(this.timespanOnly){var timeSpanOnlyState={subscriber:this,context:context,bufferTimeSpan:bufferTimeSpan};this.add(context.closeAction=scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState));}else{var closeState={subscriber:this,context:context};var creationState={bufferTimeSpan:bufferTimeSpan,bufferCreationInterval:bufferCreationInterval,subscriber:this,scheduler:scheduler};this.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,closeState));this.add(scheduler.schedule(dispatchBufferCreation,bufferCreationInterval,creationState));}}BufferTimeSubscriber.prototype._next=function(value){var contexts=this.contexts;var len=contexts.length;var filledBufferContext;for(var i=0;i<len;i++){var context=contexts[i];var buffer=context.buffer;buffer.push(value);if(buffer.length==this.maxBufferSize){filledBufferContext=context;}}if(filledBufferContext){this.onBufferFull(filledBufferContext);}};BufferTimeSubscriber.prototype._error=function(err){this.contexts.length=0;_super.prototype._error.call(this,err);};BufferTimeSubscriber.prototype._complete=function(){var _a=this,contexts=_a.contexts,destination=_a.destination;while(contexts.length>0){var context=contexts.shift();destination.next(context.buffer);}_super.prototype._complete.call(this);};BufferTimeSubscriber.prototype._unsubscribe=function(){this.contexts=null;};BufferTimeSubscriber.prototype.onBufferFull=function(context){this.closeContext(context);var closeAction=context.closeAction;closeAction.unsubscribe();this.remove(closeAction);if(!this.closed&&this.timespanOnly){context=this.openContext();var bufferTimeSpan=this.bufferTimeSpan;var timeSpanOnlyState={subscriber:this,context:context,bufferTimeSpan:bufferTimeSpan};this.add(context.closeAction=this.scheduler.schedule(dispatchBufferTimeSpanOnly,bufferTimeSpan,timeSpanOnlyState));}};BufferTimeSubscriber.prototype.openContext=function(){var context=new Context();this.contexts.push(context);return context;};BufferTimeSubscriber.prototype.closeContext=function(context){this.destination.next(context.buffer);var contexts=this.contexts;var spliceIndex=contexts?contexts.indexOf(context):-1;if(spliceIndex>=0){contexts.splice(contexts.indexOf(context),1);}};return BufferTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchBufferTimeSpanOnly(state){var subscriber=state.subscriber;var prevContext=state.context;if(prevContext){subscriber.closeContext(prevContext);}if(!subscriber.closed){state.context=subscriber.openContext();state.context.closeAction=this.schedule(state,state.bufferTimeSpan);}}function dispatchBufferCreation(state){var bufferCreationInterval=state.bufferCreationInterval,bufferTimeSpan=state.bufferTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler;var context=subscriber.openContext();var action=this;if(!subscriber.closed){subscriber.add(context.closeAction=scheduler.schedule(dispatchBufferClose,bufferTimeSpan,{subscriber:subscriber,context:context}));action.schedule(state,bufferCreationInterval);}}function dispatchBufferClose(arg){var subscriber=arg.subscriber,context=arg.context;subscriber.closeContext(context);}//# sourceMappingURL=bufferTime.js.map

/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var bufferToggle_1=__webpack_require__(477);Observable_1.Observable.prototype.bufferToggle=bufferToggle_1.bufferToggle;//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscription_1=__webpack_require__(9);var subscribeToResult_1=__webpack_require__(6);var OuterSubscriber_1=__webpack_require__(5);/**
 * Buffers the source Observable values starting from an emission from
 * `openings` and ending when the output of `closingSelector` emits.
 *
 * <span class="informal">Collects values from the past as an array. Starts
 * collecting only when `opening` emits, and calls the `closingSelector`
 * function to get an Observable that tells when to close the buffer.</span>
 *
 * <img src="./img/bufferToggle.png" width="100%">
 *
 * Buffers values from the source by opening the buffer via signals from an
 * Observable provided to `openings`, and closing and sending the buffers when
 * a Subscribable or Promise returned by the `closingSelector` function emits.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var buffered = clicks.bufferToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferWhen}
 * @see {@link windowToggle}
 *
 * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new
 * buffers.
 * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns a Subscribable or Promise,
 * which, when it emits, signals that the associated buffer should be emitted
 * and cleared.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferToggle
 * @owner Observable
 */function bufferToggle(openings,closingSelector){return this.lift(new BufferToggleOperator(openings,closingSelector));}exports.bufferToggle=bufferToggle;var BufferToggleOperator=function(){function BufferToggleOperator(openings,closingSelector){this.openings=openings;this.closingSelector=closingSelector;}BufferToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferToggleSubscriber(subscriber,this.openings,this.closingSelector));};return BufferToggleOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var BufferToggleSubscriber=function(_super){__extends(BufferToggleSubscriber,_super);function BufferToggleSubscriber(destination,openings,closingSelector){_super.call(this,destination);this.openings=openings;this.closingSelector=closingSelector;this.contexts=[];this.add(subscribeToResult_1.subscribeToResult(this,openings));}BufferToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;var len=contexts.length;for(var i=0;i<len;i++){contexts[i].buffer.push(value);}};BufferToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;while(contexts.length>0){var context=contexts.shift();context.subscription.unsubscribe();context.buffer=null;context.subscription=null;}this.contexts=null;_super.prototype._error.call(this,err);};BufferToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;while(contexts.length>0){var context=contexts.shift();this.destination.next(context.buffer);context.subscription.unsubscribe();context.buffer=null;context.subscription=null;}this.contexts=null;_super.prototype._complete.call(this);};BufferToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){outerValue?this.closeBuffer(outerValue):this.openBuffer(innerValue);};BufferToggleSubscriber.prototype.notifyComplete=function(innerSub){this.closeBuffer(innerSub.context);};BufferToggleSubscriber.prototype.openBuffer=function(value){try{var closingSelector=this.closingSelector;var closingNotifier=closingSelector.call(this,value);if(closingNotifier){this.trySubscribe(closingNotifier);}}catch(err){this._error(err);}};BufferToggleSubscriber.prototype.closeBuffer=function(context){var contexts=this.contexts;if(contexts&&context){var buffer=context.buffer,subscription=context.subscription;this.destination.next(buffer);contexts.splice(contexts.indexOf(context),1);this.remove(subscription);subscription.unsubscribe();}};BufferToggleSubscriber.prototype.trySubscribe=function(closingNotifier){var contexts=this.contexts;var buffer=[];var subscription=new Subscription_1.Subscription();var context={buffer:buffer,subscription:subscription};contexts.push(context);var innerSubscription=subscribeToResult_1.subscribeToResult(this,closingNotifier,context);if(!innerSubscription||innerSubscription.closed){this.closeBuffer(context);}else{innerSubscription.context=context;this.add(innerSubscription);subscription.add(innerSubscription);}};return BufferToggleSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=bufferToggle.js.map

/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var bufferWhen_1=__webpack_require__(479);Observable_1.Observable.prototype.bufferWhen=bufferWhen_1.bufferWhen;//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscription_1=__webpack_require__(9);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Buffers the source Observable values, using a factory function of closing
 * Observables to determine when to close, emit, and reset the buffer.
 *
 * <span class="informal">Collects values from the past as an array. When it
 * starts collecting values, it calls a function that returns an Observable that
 * tells when to close the buffer and restart collecting.</span>
 *
 * <img src="./img/bufferWhen.png" width="100%">
 *
 * Opens a buffer immediately, then closes the buffer when the observable
 * returned by calling `closingSelector` function emits a value. When it closes
 * the buffer, it immediately opens a new buffer and repeats the process.
 *
 * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var buffered = clicks.bufferWhen(() =>
 *   Rx.Observable.interval(1000 + Math.random() * 4000)
 * );
 * buffered.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 * @see {@link bufferTime}
 * @see {@link bufferToggle}
 * @see {@link windowWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals buffer closure.
 * @return {Observable<T[]>} An observable of arrays of buffered values.
 * @method bufferWhen
 * @owner Observable
 */function bufferWhen(closingSelector){return this.lift(new BufferWhenOperator(closingSelector));}exports.bufferWhen=bufferWhen;var BufferWhenOperator=function(){function BufferWhenOperator(closingSelector){this.closingSelector=closingSelector;}BufferWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new BufferWhenSubscriber(subscriber,this.closingSelector));};return BufferWhenOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var BufferWhenSubscriber=function(_super){__extends(BufferWhenSubscriber,_super);function BufferWhenSubscriber(destination,closingSelector){_super.call(this,destination);this.closingSelector=closingSelector;this.subscribing=false;this.openBuffer();}BufferWhenSubscriber.prototype._next=function(value){this.buffer.push(value);};BufferWhenSubscriber.prototype._complete=function(){var buffer=this.buffer;if(buffer){this.destination.next(buffer);}_super.prototype._complete.call(this);};BufferWhenSubscriber.prototype._unsubscribe=function(){this.buffer=null;this.subscribing=false;};BufferWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openBuffer();};BufferWhenSubscriber.prototype.notifyComplete=function(){if(this.subscribing){this.complete();}else{this.openBuffer();}};BufferWhenSubscriber.prototype.openBuffer=function(){var closingSubscription=this.closingSubscription;if(closingSubscription){this.remove(closingSubscription);closingSubscription.unsubscribe();}var buffer=this.buffer;if(this.buffer){this.destination.next(buffer);}this.buffer=[];var closingNotifier=tryCatch_1.tryCatch(this.closingSelector)();if(closingNotifier===errorObject_1.errorObject){this.error(errorObject_1.errorObject.e);}else{closingSubscription=new Subscription_1.Subscription();this.closingSubscription=closingSubscription;this.add(closingSubscription);this.subscribing=true;closingSubscription.add(subscribeToResult_1.subscribeToResult(this,closingNotifier));this.subscribing=false;}};return BufferWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=bufferWhen.js.map

/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var catch_1=__webpack_require__(481);Observable_1.Observable.prototype.catch=catch_1._catch;Observable_1.Observable.prototype._catch=catch_1._catch;//# sourceMappingURL=catch.js.map

/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Catches errors on the observable to be handled by returning a new observable or throwing an error.
 *
 * <img src="./img/catch.png" width="100%">
 *
 * @example <caption>Continues with a different Observable when there's an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n == 4) {
 * 	     throw 'four!';
 *     }
 *	   return n;
 *   })
 *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, I, II, III, IV, V
 *
 * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 * 	   if (n === 4) {
 * 	     throw 'four!';
 *     }
 * 	   return n;
 *   })
 *   .catch((err, caught) => caught)
 *   .take(30)
 *   .subscribe(x => console.log(x));
 *   // 1, 2, 3, 1, 2, 3, ...
 *
 * @example <caption>Throws a new error when the source Observable throws an error</caption>
 *
 * Observable.of(1, 2, 3, 4, 5)
 *   .map(n => {
 *     if (n == 4) {
 *       throw 'four!';
 *     }
 *     return n;
 *   })
 *   .catch(err => {
 *     throw 'error in source. Details: ' + err;
 *   })
 *   .subscribe(
 *     x => console.log(x),
 *     err => console.log(err)
 *   );
 *   // 1, 2, 3, error in source. Details: four!
 *
 * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which
 *  is the source observable, in case you'd like to "retry" that observable by returning it again. Whatever observable
 *  is returned by the `selector` will be used to continue the observable chain.
 * @return {Observable} An observable that originates from either the source or the observable returned by the
 *  catch `selector` function.
 * @method catch
 * @name catch
 * @owner Observable
 */function _catch(selector){var operator=new CatchOperator(selector);var caught=this.lift(operator);return operator.caught=caught;}exports._catch=_catch;var CatchOperator=function(){function CatchOperator(selector){this.selector=selector;}CatchOperator.prototype.call=function(subscriber,source){return source.subscribe(new CatchSubscriber(subscriber,this.selector,this.caught));};return CatchOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var CatchSubscriber=function(_super){__extends(CatchSubscriber,_super);function CatchSubscriber(destination,selector,caught){_super.call(this,destination);this.selector=selector;this.caught=caught;}// NOTE: overriding `error` instead of `_error` because we don't want
// to have this flag this subscriber as `isStopped`. We can mimic the
// behavior of the RetrySubscriber (from the `retry` operator), where
// we unsubscribe from our source chain, reset our Subscriber flags,
// then subscribe to the selector result.
CatchSubscriber.prototype.error=function(err){if(!this.isStopped){var result=void 0;try{result=this.selector(err,this.caught);}catch(err2){_super.prototype.error.call(this,err2);return;}this._unsubscribeAndRecycle();this.add(subscribeToResult_1.subscribeToResult(this,result));}};return CatchSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=catch.js.map

/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var combineAll_1=__webpack_require__(483);Observable_1.Observable.prototype.combineAll=combineAll_1.combineAll;//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var combineLatest_1=__webpack_require__(96);/**
 * Converts a higher-order Observable into a first-order Observable by waiting
 * for the outer Observable to complete, then applying {@link combineLatest}.
 *
 * <span class="informal">Flattens an Observable-of-Observables by applying
 * {@link combineLatest} when the Observable-of-Observables completes.</span>
 *
 * <img src="./img/combineAll.png" width="100%">
 *
 * Takes an Observable of Observables, and collects all Observables from it.
 * Once the outer Observable completes, it subscribes to all collected
 * Observables and combines their values using the {@link combineLatest}
 * strategy, such that:
 * - Every time an inner Observable emits, the output Observable emits.
 * - When the returned observable emits, it emits all of the latest values by:
 *   - If a `project` function is provided, it is called with each recent value
 *     from each inner Observable in whatever order they arrived, and the result
 *     of the `project` function is what is emitted by the output Observable.
 *   - If there is no `project` function, an array of all of the most recent
 *     values is emitted by the output Observable.
 *
 * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev =>
 *   Rx.Observable.interval(Math.random()*2000).take(3)
 * ).take(2);
 * var result = higherOrder.combineAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 * @see {@link mergeAll}
 *
 * @param {function} [project] An optional function to map the most recent
 * values from each inner Observable into a new result. Takes each of the most
 * recent values from each collected inner Observable as arguments, in order.
 * @return {Observable} An Observable of projected results or arrays of recent
 * values.
 * @method combineAll
 * @owner Observable
 */function combineAll(project){return this.lift(new combineLatest_1.CombineLatestOperator(project));}exports.combineAll=combineAll;//# sourceMappingURL=combineAll.js.map

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var combineLatest_1=__webpack_require__(96);Observable_1.Observable.prototype.combineLatest=combineLatest_1.combineLatest;//# sourceMappingURL=combineLatest.js.map

/***/ }),
/* 485 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var concat_1=__webpack_require__(97);Observable_1.Observable.prototype.concat=concat_1.concat;//# sourceMappingURL=concat.js.map

/***/ }),
/* 486 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var concatAll_1=__webpack_require__(487);Observable_1.Observable.prototype.concatAll=concatAll_1.concatAll;//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 487 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var mergeAll_1=__webpack_require__(69);/* tslint:enable:max-line-length *//**
 * Converts a higher-order Observable into a first-order Observable by
 * concatenating the inner Observables in order.
 *
 * <span class="informal">Flattens an Observable-of-Observables by putting one
 * inner Observable after the other.</span>
 *
 * <img src="./img/concatAll.png" width="100%">
 *
 * Joins every Observable emitted by the source (a higher-order Observable), in
 * a serial fashion. It subscribes to each inner Observable only after the
 * previous inner Observable has completed, and merges all of their values into
 * the returned observable.
 *
 * __Warning:__ If the source Observable emits Observables quickly and
 * endlessly, and the inner Observables it emits generally complete slower than
 * the source emits, you can run into memory issues as the incoming Observables
 * collect in an unbounded buffer.
 *
 * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));
 * var firstOrder = higherOrder.concatAll();
 * firstOrder.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link combineAll}
 * @see {@link concat}
 * @see {@link concatMap}
 * @see {@link concatMapTo}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switch}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable emitting values from all the inner
 * Observables concatenated.
 * @method concatAll
 * @owner Observable
 */function concatAll(){return this.lift(new mergeAll_1.MergeAllOperator(1));}exports.concatAll=concatAll;//# sourceMappingURL=concatAll.js.map

/***/ }),
/* 488 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var concatMap_1=__webpack_require__(489);Observable_1.Observable.prototype.concatMap=concatMap_1.concatMap;//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 489 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var mergeMap_1=__webpack_require__(173);/* tslint:enable:max-line-length *//**
 * Projects each source value to an Observable which is merged in the output
 * Observable, in a serialized fashion waiting for each one to complete before
 * merging the next.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link concatAll}.</span>
 *
 * <img src="./img/concatMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each new inner Observable is
 * concatenated with the previous inner Observable.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set
 * to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMapTo}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking values from each projected inner
 * Observable sequentially.
 * @method concatMap
 * @owner Observable
 */function concatMap(project,resultSelector){return this.lift(new mergeMap_1.MergeMapOperator(project,resultSelector,1));}exports.concatMap=concatMap;//# sourceMappingURL=concatMap.js.map

/***/ }),
/* 490 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var concatMapTo_1=__webpack_require__(491);Observable_1.Observable.prototype.concatMapTo=concatMapTo_1.concatMapTo;//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 491 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var mergeMapTo_1=__webpack_require__(174);/* tslint:enable:max-line-length *//**
 * Projects each source value to the same Observable which is merged multiple
 * times in a serialized fashion on the output Observable.
 *
 * <span class="informal">It's like {@link concatMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/concatMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. Each new `innerObservable`
 * instance emitted on the output Observable is concatenated with the previous
 * `innerObservable` instance.
 *
 * __Warning:__ if source values arrive endlessly and faster than their
 * corresponding inner Observables can complete, it will result in memory issues
 * as inner Observables amass in an unbounded buffer waiting for their turn to
 * be subscribed to.
 *
 * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter
 * set to `1`.
 *
 * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));
 * result.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // (results are not concurrent)
 * // For every click on the "document" it will emit values 0 to 3 spaced
 * // on a 1000ms interval
 * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3
 *
 * @see {@link concat}
 * @see {@link concatAll}
 * @see {@link concatMap}
 * @see {@link mergeMapTo}
 * @see {@link switchMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An observable of values merged together by joining the
 * passed observable with itself, one after the other, for each value emitted
 * from the source.
 * @method concatMapTo
 * @owner Observable
 */function concatMapTo(innerObservable,resultSelector){return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable,resultSelector,1));}exports.concatMapTo=concatMapTo;//# sourceMappingURL=concatMapTo.js.map

/***/ }),
/* 492 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var count_1=__webpack_require__(493);Observable_1.Observable.prototype.count=count_1.count;//# sourceMappingURL=count.js.map

/***/ }),
/* 493 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Counts the number of emissions on the source and emits that number when the
 * source completes.
 *
 * <span class="informal">Tells how many values were emitted, when the source
 * completes.</span>
 *
 * <img src="./img/count.png" width="100%">
 *
 * `count` transforms an Observable that emits values into an Observable that
 * emits a single value that represents the number of values emitted by the
 * source Observable. If the source Observable terminates with an error, `count`
 * will pass this error notification along without emitting a value first. If
 * the source Observable does not terminate at all, `count` will neither emit
 * a value nor terminate. This operator takes an optional `predicate` function
 * as argument, in which case the output emission will represent the number of
 * source values that matched `true` with the `predicate`.
 *
 * @example <caption>Counts how many seconds have passed before the first click happened</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var secondsBeforeClick = seconds.takeUntil(clicks);
 * var result = secondsBeforeClick.count();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>
 * var numbers = Rx.Observable.range(1, 7);
 * var result = numbers.count(i => i % 2 === 1);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 4
 *
 * @see {@link max}
 * @see {@link min}
 * @see {@link reduce}
 *
 * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A
 * boolean function to select what values are to be counted. It is provided with
 * arguments of:
 * - `value`: the value from the source Observable.
 * - `index`: the (zero-based) "index" of the value from the source Observable.
 * - `source`: the source Observable instance itself.
 * @return {Observable} An Observable of one number that represents the count as
 * described above.
 * @method count
 * @owner Observable
 */function count(predicate){return this.lift(new CountOperator(predicate,this));}exports.count=count;var CountOperator=function(){function CountOperator(predicate,source){this.predicate=predicate;this.source=source;}CountOperator.prototype.call=function(subscriber,source){return source.subscribe(new CountSubscriber(subscriber,this.predicate,this.source));};return CountOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var CountSubscriber=function(_super){__extends(CountSubscriber,_super);function CountSubscriber(destination,predicate,source){_super.call(this,destination);this.predicate=predicate;this.source=source;this.count=0;this.index=0;}CountSubscriber.prototype._next=function(value){if(this.predicate){this._tryPredicate(value);}else{this.count++;}};CountSubscriber.prototype._tryPredicate=function(value){var result;try{result=this.predicate(value,this.index++,this.source);}catch(err){this.destination.error(err);return;}if(result){this.count++;}};CountSubscriber.prototype._complete=function(){this.destination.next(this.count);this.destination.complete();};return CountSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=count.js.map

/***/ }),
/* 494 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var dematerialize_1=__webpack_require__(495);Observable_1.Observable.prototype.dematerialize=dematerialize_1.dematerialize;//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 495 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Converts an Observable of {@link Notification} objects into the emissions
 * that they represent.
 *
 * <span class="informal">Unwraps {@link Notification} objects as actual `next`,
 * `error` and `complete` emissions. The opposite of {@link materialize}.</span>
 *
 * <img src="./img/dematerialize.png" width="100%">
 *
 * `dematerialize` is assumed to operate an Observable that only emits
 * {@link Notification} objects as `next` emissions, and does not emit any
 * `error`. Such Observable is the output of a `materialize` operation. Those
 * notifications are then unwrapped using the metadata they contain, and emitted
 * as `next`, `error`, and `complete` on the output Observable.
 *
 * Use this operator in conjunction with {@link materialize}.
 *
 * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>
 * var notifA = new Rx.Notification('N', 'A');
 * var notifB = new Rx.Notification('N', 'B');
 * var notifE = new Rx.Notification('E', void 0,
 *   new TypeError('x.toUpperCase is not a function')
 * );
 * var materialized = Rx.Observable.of(notifA, notifB, notifE);
 * var upperCase = materialized.dematerialize();
 * upperCase.subscribe(x => console.log(x), e => console.error(e));
 *
 * // Results in:
 * // A
 * // B
 * // TypeError: x.toUpperCase is not a function
 *
 * @see {@link Notification}
 * @see {@link materialize}
 *
 * @return {Observable} An Observable that emits items and notifications
 * embedded in Notification objects emitted by the source Observable.
 * @method dematerialize
 * @owner Observable
 */function dematerialize(){return this.lift(new DeMaterializeOperator());}exports.dematerialize=dematerialize;var DeMaterializeOperator=function(){function DeMaterializeOperator(){}DeMaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DeMaterializeSubscriber(subscriber));};return DeMaterializeOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DeMaterializeSubscriber=function(_super){__extends(DeMaterializeSubscriber,_super);function DeMaterializeSubscriber(destination){_super.call(this,destination);}DeMaterializeSubscriber.prototype._next=function(value){value.observe(this.destination);};return DeMaterializeSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=dematerialize.js.map

/***/ }),
/* 496 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var debounce_1=__webpack_require__(497);Observable_1.Observable.prototype.debounce=debounce_1.debounce;//# sourceMappingURL=debounce.js.map

/***/ }),
/* 497 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Emits a value from the source Observable only after a particular time span
 * determined by another Observable has passed without another source emission.
 *
 * <span class="informal">It's like {@link debounceTime}, but the time span of
 * emission silence is determined by a second Observable.</span>
 *
 * <img src="./img/debounce.png" width="100%">
 *
 * `debounce` delays values emitted by the source Observable, but drops previous
 * pending delayed emissions if a new value arrives on the source Observable.
 * This operator keeps track of the most recent value from the source
 * Observable, and spawns a duration Observable by calling the
 * `durationSelector` function. The value is emitted only when the duration
 * Observable emits a value or completes, and if no other value was emitted on
 * the source Observable since the duration Observable was spawned. If a new
 * value appears before the duration Observable emits, the previous value will
 * be dropped and will not be emitted on the output Observable.
 *
 * Like {@link debounceTime}, this is a rate-limiting operator, and also a
 * delay-like operator since output emissions do not necessarily occur at the
 * same time as they did on the source Observable.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounce(() => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the timeout
 * duration for each source value, returned as an Observable or a Promise.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified duration Observable returned by
 * `durationSelector`, and may drop some values if they occur too frequently.
 * @method debounce
 * @owner Observable
 */function debounce(durationSelector){return this.lift(new DebounceOperator(durationSelector));}exports.debounce=debounce;var DebounceOperator=function(){function DebounceOperator(durationSelector){this.durationSelector=durationSelector;}DebounceOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceSubscriber(subscriber,this.durationSelector));};return DebounceOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DebounceSubscriber=function(_super){__extends(DebounceSubscriber,_super);function DebounceSubscriber(destination,durationSelector){_super.call(this,destination);this.durationSelector=durationSelector;this.hasValue=false;this.durationSubscription=null;}DebounceSubscriber.prototype._next=function(value){try{var result=this.durationSelector.call(this,value);if(result){this._tryNext(value,result);}}catch(err){this.destination.error(err);}};DebounceSubscriber.prototype._complete=function(){this.emitValue();this.destination.complete();};DebounceSubscriber.prototype._tryNext=function(value,duration){var subscription=this.durationSubscription;this.value=value;this.hasValue=true;if(subscription){subscription.unsubscribe();this.remove(subscription);}subscription=subscribeToResult_1.subscribeToResult(this,duration);if(!subscription.closed){this.add(this.durationSubscription=subscription);}};DebounceSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.emitValue();};DebounceSubscriber.prototype.notifyComplete=function(){this.emitValue();};DebounceSubscriber.prototype.emitValue=function(){if(this.hasValue){var value=this.value;var subscription=this.durationSubscription;if(subscription){this.durationSubscription=null;subscription.unsubscribe();this.remove(subscription);}this.value=null;this.hasValue=false;_super.prototype._next.call(this,value);}};return DebounceSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=debounce.js.map

/***/ }),
/* 498 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var debounceTime_1=__webpack_require__(499);Observable_1.Observable.prototype.debounceTime=debounceTime_1.debounceTime;//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 499 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var async_1=__webpack_require__(16);/**
 * Emits a value from the source Observable only after a particular time span
 * has passed without another source emission.
 *
 * <span class="informal">It's like {@link delay}, but passes only the most
 * recent value from each burst of emissions.</span>
 *
 * <img src="./img/debounceTime.png" width="100%">
 *
 * `debounceTime` delays values emitted by the source Observable, but drops
 * previous pending delayed emissions if a new value arrives on the source
 * Observable. This operator keeps track of the most recent value from the
 * source Observable, and emits that only when `dueTime` enough time has passed
 * without any other value appearing on the source Observable. If a new value
 * appears before `dueTime` silence occurs, the previous value will be dropped
 * and will not be emitted on the output Observable.
 *
 * This is a rate-limiting operator, because it is impossible for more than one
 * value to be emitted in any time window of duration `dueTime`, but it is also
 * a delay-like operator since output emissions do not occur at the same time as
 * they did on the source Observable. Optionally takes a {@link IScheduler} for
 * managing timers.
 *
 * @example <caption>Emit the most recent click after a burst of clicks</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.debounceTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} dueTime The timeout duration in milliseconds (or the time
 * unit determined internally by the optional `scheduler`) for the window of
 * time required to wait for emission silence before emitting the most recent
 * source value.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the timeout for each value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified `dueTime`, and may drop some values if they occur
 * too frequently.
 * @method debounceTime
 * @owner Observable
 */function debounceTime(dueTime,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return this.lift(new DebounceTimeOperator(dueTime,scheduler));}exports.debounceTime=debounceTime;var DebounceTimeOperator=function(){function DebounceTimeOperator(dueTime,scheduler){this.dueTime=dueTime;this.scheduler=scheduler;}DebounceTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new DebounceTimeSubscriber(subscriber,this.dueTime,this.scheduler));};return DebounceTimeOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DebounceTimeSubscriber=function(_super){__extends(DebounceTimeSubscriber,_super);function DebounceTimeSubscriber(destination,dueTime,scheduler){_super.call(this,destination);this.dueTime=dueTime;this.scheduler=scheduler;this.debouncedSubscription=null;this.lastValue=null;this.hasValue=false;}DebounceTimeSubscriber.prototype._next=function(value){this.clearDebounce();this.lastValue=value;this.hasValue=true;this.add(this.debouncedSubscription=this.scheduler.schedule(dispatchNext,this.dueTime,this));};DebounceTimeSubscriber.prototype._complete=function(){this.debouncedNext();this.destination.complete();};DebounceTimeSubscriber.prototype.debouncedNext=function(){this.clearDebounce();if(this.hasValue){this.destination.next(this.lastValue);this.lastValue=null;this.hasValue=false;}};DebounceTimeSubscriber.prototype.clearDebounce=function(){var debouncedSubscription=this.debouncedSubscription;if(debouncedSubscription!==null){this.remove(debouncedSubscription);debouncedSubscription.unsubscribe();this.debouncedSubscription=null;}};return DebounceTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchNext(subscriber){subscriber.debouncedNext();}//# sourceMappingURL=debounceTime.js.map

/***/ }),
/* 500 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var defaultIfEmpty_1=__webpack_require__(501);Observable_1.Observable.prototype.defaultIfEmpty=defaultIfEmpty_1.defaultIfEmpty;//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/* tslint:enable:max-line-length *//**
 * Emits a given value if the source Observable completes without emitting any
 * `next` value, otherwise mirrors the source Observable.
 *
 * <span class="informal">If the source Observable turns out to be empty, then
 * this operator will emit a default value.</span>
 *
 * <img src="./img/defaultIfEmpty.png" width="100%">
 *
 * `defaultIfEmpty` emits the values emitted by the source Observable or a
 * specified default value if the source Observable is empty (completes without
 * having emitted any `next` value).
 *
 * @example <caption>If no clicks happen in 5 seconds, then emit "no clicks"</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));
 * var result = clicksBeforeFive.defaultIfEmpty('no clicks');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link empty}
 * @see {@link last}
 *
 * @param {any} [defaultValue=null] The default value used if the source
 * Observable is empty.
 * @return {Observable} An Observable that emits either the specified
 * `defaultValue` if the source Observable emits no items, or the values emitted
 * by the source Observable.
 * @method defaultIfEmpty
 * @owner Observable
 */function defaultIfEmpty(defaultValue){if(defaultValue===void 0){defaultValue=null;}return this.lift(new DefaultIfEmptyOperator(defaultValue));}exports.defaultIfEmpty=defaultIfEmpty;var DefaultIfEmptyOperator=function(){function DefaultIfEmptyOperator(defaultValue){this.defaultValue=defaultValue;}DefaultIfEmptyOperator.prototype.call=function(subscriber,source){return source.subscribe(new DefaultIfEmptySubscriber(subscriber,this.defaultValue));};return DefaultIfEmptyOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DefaultIfEmptySubscriber=function(_super){__extends(DefaultIfEmptySubscriber,_super);function DefaultIfEmptySubscriber(destination,defaultValue){_super.call(this,destination);this.defaultValue=defaultValue;this.isEmpty=true;}DefaultIfEmptySubscriber.prototype._next=function(value){this.isEmpty=false;this.destination.next(value);};DefaultIfEmptySubscriber.prototype._complete=function(){if(this.isEmpty){this.destination.next(this.defaultValue);}this.destination.complete();};return DefaultIfEmptySubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=defaultIfEmpty.js.map

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var delay_1=__webpack_require__(503);Observable_1.Observable.prototype.delay=delay_1.delay;//# sourceMappingURL=delay.js.map

/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var async_1=__webpack_require__(16);var isDate_1=__webpack_require__(71);var Subscriber_1=__webpack_require__(2);var Notification_1=__webpack_require__(43);/**
 * Delays the emission of items from the source Observable by a given timeout or
 * until a given Date.
 *
 * <span class="informal">Time shifts each item by some specified amount of
 * milliseconds.</span>
 *
 * <img src="./img/delay.png" width="100%">
 *
 * If the delay argument is a Number, this operator time shifts the source
 * Observable by that amount of time expressed in milliseconds. The relative
 * time intervals between the values are preserved.
 *
 * If the delay argument is a Date, this operator time shifts the start of the
 * Observable execution until the given date occurs.
 *
 * @example <caption>Delay each click by one second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @example <caption>Delay all clicks until a future date happens</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var date = new Date('March 15, 2050 12:00:00'); // in the future
 * var delayedClicks = clicks.delay(date); // click emitted only after that date
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounceTime}
 * @see {@link delayWhen}
 *
 * @param {number|Date} delay The delay duration in milliseconds (a `number`) or
 * a `Date` until which the emission of the source items is delayed.
 * @param {Scheduler} [scheduler=async] The IScheduler to use for
 * managing the timers that handle the time-shift for each item.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by the specified timeout or Date.
 * @method delay
 * @owner Observable
 */function delay(delay,scheduler){if(scheduler===void 0){scheduler=async_1.async;}var absoluteDelay=isDate_1.isDate(delay);var delayFor=absoluteDelay?+delay-scheduler.now():Math.abs(delay);return this.lift(new DelayOperator(delayFor,scheduler));}exports.delay=delay;var DelayOperator=function(){function DelayOperator(delay,scheduler){this.delay=delay;this.scheduler=scheduler;}DelayOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelaySubscriber(subscriber,this.delay,this.scheduler));};return DelayOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DelaySubscriber=function(_super){__extends(DelaySubscriber,_super);function DelaySubscriber(destination,delay,scheduler){_super.call(this,destination);this.delay=delay;this.scheduler=scheduler;this.queue=[];this.active=false;this.errored=false;}DelaySubscriber.dispatch=function(state){var source=state.source;var queue=source.queue;var scheduler=state.scheduler;var destination=state.destination;while(queue.length>0&&queue[0].time-scheduler.now()<=0){queue.shift().notification.observe(destination);}if(queue.length>0){var delay_1=Math.max(0,queue[0].time-scheduler.now());this.schedule(state,delay_1);}else{source.active=false;}};DelaySubscriber.prototype._schedule=function(scheduler){this.active=true;this.add(scheduler.schedule(DelaySubscriber.dispatch,this.delay,{source:this,destination:this.destination,scheduler:scheduler}));};DelaySubscriber.prototype.scheduleNotification=function(notification){if(this.errored===true){return;}var scheduler=this.scheduler;var message=new DelayMessage(scheduler.now()+this.delay,notification);this.queue.push(message);if(this.active===false){this._schedule(scheduler);}};DelaySubscriber.prototype._next=function(value){this.scheduleNotification(Notification_1.Notification.createNext(value));};DelaySubscriber.prototype._error=function(err){this.errored=true;this.queue=[];this.destination.error(err);};DelaySubscriber.prototype._complete=function(){this.scheduleNotification(Notification_1.Notification.createComplete());};return DelaySubscriber;}(Subscriber_1.Subscriber);var DelayMessage=function(){function DelayMessage(time,notification){this.time=time;this.notification=notification;}return DelayMessage;}();//# sourceMappingURL=delay.js.map

/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var delayWhen_1=__webpack_require__(505);Observable_1.Observable.prototype.delayWhen=delayWhen_1.delayWhen;//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var Observable_1=__webpack_require__(0);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Delays the emission of items from the source Observable by a given time span
 * determined by the emissions of another Observable.
 *
 * <span class="informal">It's like {@link delay}, but the time span of the
 * delay duration is determined by a second Observable.</span>
 *
 * <img src="./img/delayWhen.png" width="100%">
 *
 * `delayWhen` time shifts each emitted value from the source Observable by a
 * time span determined by another Observable. When the source emits a value,
 * the `delayDurationSelector` function is called with the source value as
 * argument, and should return an Observable, called the "duration" Observable.
 * The source value is emitted on the output Observable only when the duration
 * Observable emits a value or completes.
 *
 * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which
 * is an Observable. When `subscriptionDelay` emits its first value or
 * completes, the source Observable is subscribed to and starts behaving like
 * described in the previous paragraph. If `subscriptionDelay` is not provided,
 * `delayWhen` will subscribe to the source Observable as soon as the output
 * Observable is subscribed.
 *
 * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var delayedClicks = clicks.delayWhen(event =>
 *   Rx.Observable.interval(Math.random() * 5000)
 * );
 * delayedClicks.subscribe(x => console.log(x));
 *
 * @see {@link debounce}
 * @see {@link delay}
 *
 * @param {function(value: T): Observable} delayDurationSelector A function that
 * returns an Observable for each value emitted by the source Observable, which
 * is then used to delay the emission of that item on the output Observable
 * until the Observable returned from this function emits a value.
 * @param {Observable} subscriptionDelay An Observable that triggers the
 * subscription to the source Observable once it emits any value.
 * @return {Observable} An Observable that delays the emissions of the source
 * Observable by an amount of time specified by the Observable returned by
 * `delayDurationSelector`.
 * @method delayWhen
 * @owner Observable
 */function delayWhen(delayDurationSelector,subscriptionDelay){if(subscriptionDelay){return new SubscriptionDelayObservable(this,subscriptionDelay).lift(new DelayWhenOperator(delayDurationSelector));}return this.lift(new DelayWhenOperator(delayDurationSelector));}exports.delayWhen=delayWhen;var DelayWhenOperator=function(){function DelayWhenOperator(delayDurationSelector){this.delayDurationSelector=delayDurationSelector;}DelayWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new DelayWhenSubscriber(subscriber,this.delayDurationSelector));};return DelayWhenOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DelayWhenSubscriber=function(_super){__extends(DelayWhenSubscriber,_super);function DelayWhenSubscriber(destination,delayDurationSelector){_super.call(this,destination);this.delayDurationSelector=delayDurationSelector;this.completed=false;this.delayNotifierSubscriptions=[];this.values=[];}DelayWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(outerValue);this.removeSubscription(innerSub);this.tryComplete();};DelayWhenSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};DelayWhenSubscriber.prototype.notifyComplete=function(innerSub){var value=this.removeSubscription(innerSub);if(value){this.destination.next(value);}this.tryComplete();};DelayWhenSubscriber.prototype._next=function(value){try{var delayNotifier=this.delayDurationSelector(value);if(delayNotifier){this.tryDelay(delayNotifier,value);}}catch(err){this.destination.error(err);}};DelayWhenSubscriber.prototype._complete=function(){this.completed=true;this.tryComplete();};DelayWhenSubscriber.prototype.removeSubscription=function(subscription){subscription.unsubscribe();var subscriptionIdx=this.delayNotifierSubscriptions.indexOf(subscription);var value=null;if(subscriptionIdx!==-1){value=this.values[subscriptionIdx];this.delayNotifierSubscriptions.splice(subscriptionIdx,1);this.values.splice(subscriptionIdx,1);}return value;};DelayWhenSubscriber.prototype.tryDelay=function(delayNotifier,value){var notifierSubscription=subscribeToResult_1.subscribeToResult(this,delayNotifier,value);if(notifierSubscription&&!notifierSubscription.closed){this.add(notifierSubscription);this.delayNotifierSubscriptions.push(notifierSubscription);}this.values.push(value);};DelayWhenSubscriber.prototype.tryComplete=function(){if(this.completed&&this.delayNotifierSubscriptions.length===0){this.destination.complete();}};return DelayWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SubscriptionDelayObservable=function(_super){__extends(SubscriptionDelayObservable,_super);function SubscriptionDelayObservable(source,subscriptionDelay){_super.call(this);this.source=source;this.subscriptionDelay=subscriptionDelay;}SubscriptionDelayObservable.prototype._subscribe=function(subscriber){this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber,this.source));};return SubscriptionDelayObservable;}(Observable_1.Observable);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SubscriptionDelaySubscriber=function(_super){__extends(SubscriptionDelaySubscriber,_super);function SubscriptionDelaySubscriber(parent,source){_super.call(this);this.parent=parent;this.source=source;this.sourceSubscribed=false;}SubscriptionDelaySubscriber.prototype._next=function(unused){this.subscribeToSource();};SubscriptionDelaySubscriber.prototype._error=function(err){this.unsubscribe();this.parent.error(err);};SubscriptionDelaySubscriber.prototype._complete=function(){this.subscribeToSource();};SubscriptionDelaySubscriber.prototype.subscribeToSource=function(){if(!this.sourceSubscribed){this.sourceSubscribed=true;this.unsubscribe();this.source.subscribe(this.parent);}};return SubscriptionDelaySubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=delayWhen.js.map

/***/ }),
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var distinct_1=__webpack_require__(507);Observable_1.Observable.prototype.distinct=distinct_1.distinct;//# sourceMappingURL=distinct.js.map

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);var Set_1=__webpack_require__(508);/**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.
 *
 * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will
 * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the
 * source observable directly with an equality check against previous values.
 *
 * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.
 *
 * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the
 * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`
 * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so
 * that the internal `Set` can be "flushed", basically clearing it of values.
 *
 * @example <caption>A simple example with numbers</caption>
 * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)
 *   .distinct()
 *   .subscribe(x => console.log(x)); // 1, 2, 3, 4
 *
 * @example <caption>An example using a keySelector function</caption>
 * interface Person {
 *    age: number,
 *    name: string
 * }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'})
 *     .distinct((p: Person) => p.name)
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 *
 * @see {@link distinctUntilChanged}
 * @see {@link distinctUntilKeyChanged}
 *
 * @param {function} [keySelector] Optional function to select which value you want to check as distinct.
 * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values.
 * @method distinct
 * @owner Observable
 */function distinct(keySelector,flushes){return this.lift(new DistinctOperator(keySelector,flushes));}exports.distinct=distinct;var DistinctOperator=function(){function DistinctOperator(keySelector,flushes){this.keySelector=keySelector;this.flushes=flushes;}DistinctOperator.prototype.call=function(subscriber,source){return source.subscribe(new DistinctSubscriber(subscriber,this.keySelector,this.flushes));};return DistinctOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DistinctSubscriber=function(_super){__extends(DistinctSubscriber,_super);function DistinctSubscriber(destination,keySelector,flushes){_super.call(this,destination);this.keySelector=keySelector;this.values=new Set_1.Set();if(flushes){this.add(subscribeToResult_1.subscribeToResult(this,flushes));}}DistinctSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values.clear();};DistinctSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};DistinctSubscriber.prototype._next=function(value){if(this.keySelector){this._useKeySelector(value);}else{this._finalizeNext(value,value);}};DistinctSubscriber.prototype._useKeySelector=function(value){var key;var destination=this.destination;try{key=this.keySelector(value);}catch(err){destination.error(err);return;}this._finalizeNext(key,value);};DistinctSubscriber.prototype._finalizeNext=function(key,value){var values=this.values;if(!values.has(key)){values.add(key);this.destination.next(value);}};return DistinctSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.DistinctSubscriber=DistinctSubscriber;//# sourceMappingURL=distinct.js.map

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);function minimalSetImpl(){// THIS IS NOT a full impl of Set, this is just the minimum
// bits of functionality we need for this library.
return function(){function MinimalSet(){this._values=[];}MinimalSet.prototype.add=function(value){if(!this.has(value)){this._values.push(value);}};MinimalSet.prototype.has=function(value){return this._values.indexOf(value)!==-1;};Object.defineProperty(MinimalSet.prototype,"size",{get:function get(){return this._values.length;},enumerable:true,configurable:true});MinimalSet.prototype.clear=function(){this._values.length=0;};return MinimalSet;}();}exports.minimalSetImpl=minimalSetImpl;exports.Set=root_1.root.Set||minimalSetImpl();//# sourceMappingURL=Set.js.map

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var distinctUntilChanged_1=__webpack_require__(175);Observable_1.Observable.prototype.distinctUntilChanged=distinctUntilChanged_1.distinctUntilChanged;//# sourceMappingURL=distinctUntilChanged.js.map

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var distinctUntilKeyChanged_1=__webpack_require__(511);Observable_1.Observable.prototype.distinctUntilKeyChanged=distinctUntilKeyChanged_1.distinctUntilKeyChanged;//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var distinctUntilChanged_1=__webpack_require__(175);/* tslint:enable:max-line-length *//**
 * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,
 * using a property accessed by using the key provided to check if the two items are distinct.
 *
 * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.
 *
 * If a comparator function is not provided, an equality check is used by default.
 *
 * @example <caption>An example comparing the name of persons</caption>
 *
 *  interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo'},
 *     { age: 6, name: 'Foo'})
 *     .distinctUntilKeyChanged('name')
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo' }
 *
 * @example <caption>An example comparing the first letters of the name</caption>
 *
 * interface Person {
 *     age: number,
 *     name: string
 *  }
 *
 * Observable.of<Person>(
 *     { age: 4, name: 'Foo1'},
 *     { age: 7, name: 'Bar'},
 *     { age: 5, name: 'Foo2'},
 *     { age: 6, name: 'Foo3'})
 *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))
 *     .subscribe(x => console.log(x));
 *
 * // displays:
 * // { age: 4, name: 'Foo1' }
 * // { age: 7, name: 'Bar' }
 * // { age: 5, name: 'Foo2' }
 *
 * @see {@link distinct}
 * @see {@link distinctUntilChanged}
 *
 * @param {string} key String key for object property lookup on each item.
 * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.
 * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.
 * @method distinctUntilKeyChanged
 * @owner Observable
 */function distinctUntilKeyChanged(key,compare){return distinctUntilChanged_1.distinctUntilChanged.call(this,function(x,y){if(compare){return compare(x[key],y[key]);}return x[key]===y[key];});}exports.distinctUntilKeyChanged=distinctUntilKeyChanged;//# sourceMappingURL=distinctUntilKeyChanged.js.map

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var do_1=__webpack_require__(513);Observable_1.Observable.prototype.do=do_1._do;Observable_1.Observable.prototype._do=do_1._do;//# sourceMappingURL=do.js.map

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/* tslint:enable:max-line-length *//**
 * Perform a side effect for every emission on the source Observable, but return
 * an Observable that is identical to the source.
 *
 * <span class="informal">Intercepts each emission on the source and runs a
 * function, but returns an output which is identical to the source as long as errors don't occur.</span>
 *
 * <img src="./img/do.png" width="100%">
 *
 * Returns a mirrored Observable of the source Observable, but modified so that
 * the provided Observer is called to perform a side effect for every value,
 * error, and completion emitted by the source. Any errors that are thrown in
 * the aforementioned Observer or handlers are safely sent down the error path
 * of the output Observable.
 *
 * This operator is useful for debugging your Observables for the correct values
 * or performing other side effects.
 *
 * Note: this is different to a `subscribe` on the Observable. If the Observable
 * returned by `do` is not subscribed, the side effects specified by the
 * Observer will never happen. `do` therefore simply spies on existing
 * execution, it does not trigger an execution to happen like `subscribe` does.
 *
 * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var positions = clicks
 *   .do(ev => console.log(ev))
 *   .map(ev => ev.clientX);
 * positions.subscribe(x => console.log(x));
 *
 * @see {@link map}
 * @see {@link subscribe}
 *
 * @param {Observer|function} [nextOrObserver] A normal Observer object or a
 * callback for `next`.
 * @param {function} [error] Callback for errors in the source.
 * @param {function} [complete] Callback for the completion of the source.
 * @return {Observable} An Observable identical to the source, but runs the
 * specified Observer or callback(s) for each item.
 * @method do
 * @name do
 * @owner Observable
 */function _do(nextOrObserver,error,complete){return this.lift(new DoOperator(nextOrObserver,error,complete));}exports._do=_do;var DoOperator=function(){function DoOperator(nextOrObserver,error,complete){this.nextOrObserver=nextOrObserver;this.error=error;this.complete=complete;}DoOperator.prototype.call=function(subscriber,source){return source.subscribe(new DoSubscriber(subscriber,this.nextOrObserver,this.error,this.complete));};return DoOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var DoSubscriber=function(_super){__extends(DoSubscriber,_super);function DoSubscriber(destination,nextOrObserver,error,complete){_super.call(this,destination);var safeSubscriber=new Subscriber_1.Subscriber(nextOrObserver,error,complete);safeSubscriber.syncErrorThrowable=true;this.add(safeSubscriber);this.safeSubscriber=safeSubscriber;}DoSubscriber.prototype._next=function(value){var safeSubscriber=this.safeSubscriber;safeSubscriber.next(value);if(safeSubscriber.syncErrorThrown){this.destination.error(safeSubscriber.syncErrorValue);}else{this.destination.next(value);}};DoSubscriber.prototype._error=function(err){var safeSubscriber=this.safeSubscriber;safeSubscriber.error(err);if(safeSubscriber.syncErrorThrown){this.destination.error(safeSubscriber.syncErrorValue);}else{this.destination.error(err);}};DoSubscriber.prototype._complete=function(){var safeSubscriber=this.safeSubscriber;safeSubscriber.complete();if(safeSubscriber.syncErrorThrown){this.destination.error(safeSubscriber.syncErrorValue);}else{this.destination.complete();}};return DoSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=do.js.map

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var exhaust_1=__webpack_require__(515);Observable_1.Observable.prototype.exhaust=exhaust_1.exhaust;//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Converts a higher-order Observable into a first-order Observable by dropping
 * inner Observables while the previous inner Observable has not yet completed.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * next inner Observables while the current inner is still executing.</span>
 *
 * <img src="./img/exhaust.png" width="100%">
 *
 * `exhaust` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable begins emitting the items emitted by that
 * inner Observable. So far, it behaves like {@link mergeAll}. However,
 * `exhaust` ignores every new inner Observable if the previous Observable has
 * not yet completed. Once that one completes, it will accept and flatten the
 * next inner Observable and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));
 * var result = higherOrder.exhaust();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link switch}
 * @see {@link mergeAll}
 * @see {@link exhaustMap}
 * @see {@link zipAll}
 *
 * @return {Observable} An Observable that takes a source of Observables and propagates the first observable
 * exclusively until it completes before subscribing to the next.
 * @method exhaust
 * @owner Observable
 */function exhaust(){return this.lift(new SwitchFirstOperator());}exports.exhaust=exhaust;var SwitchFirstOperator=function(){function SwitchFirstOperator(){}SwitchFirstOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchFirstSubscriber(subscriber));};return SwitchFirstOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SwitchFirstSubscriber=function(_super){__extends(SwitchFirstSubscriber,_super);function SwitchFirstSubscriber(destination){_super.call(this,destination);this.hasCompleted=false;this.hasSubscription=false;}SwitchFirstSubscriber.prototype._next=function(value){if(!this.hasSubscription){this.hasSubscription=true;this.add(subscribeToResult_1.subscribeToResult(this,value));}};SwitchFirstSubscriber.prototype._complete=function(){this.hasCompleted=true;if(!this.hasSubscription){this.destination.complete();}};SwitchFirstSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub);this.hasSubscription=false;if(this.hasCompleted){this.destination.complete();}};return SwitchFirstSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=exhaust.js.map

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var exhaustMap_1=__webpack_require__(517);Observable_1.Observable.prototype.exhaustMap=exhaustMap_1.exhaustMap;//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * Projects each source value to an Observable which is merged in the output
 * Observable only if the previous projected Observable has completed.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link exhaust}.</span>
 *
 * <img src="./img/exhaustMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. When it projects a source value to
 * an Observable, the output Observable begins emitting the items emitted by
 * that projected Observable. However, `exhaustMap` ignores every new projected
 * Observable if the previous projected Observable has not yet completed. Once
 * that one completes, it will accept and flatten the next projected Observable
 * and repeat this process.
 *
 * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaust}
 * @see {@link mergeMap}
 * @see {@link switchMap}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable containing projected Observables
 * of each item of the source, ignoring projected Observables that start before
 * their preceding Observable has completed.
 * @method exhaustMap
 * @owner Observable
 */function exhaustMap(project,resultSelector){return this.lift(new SwitchFirstMapOperator(project,resultSelector));}exports.exhaustMap=exhaustMap;var SwitchFirstMapOperator=function(){function SwitchFirstMapOperator(project,resultSelector){this.project=project;this.resultSelector=resultSelector;}SwitchFirstMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchFirstMapSubscriber(subscriber,this.project,this.resultSelector));};return SwitchFirstMapOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SwitchFirstMapSubscriber=function(_super){__extends(SwitchFirstMapSubscriber,_super);function SwitchFirstMapSubscriber(destination,project,resultSelector){_super.call(this,destination);this.project=project;this.resultSelector=resultSelector;this.hasSubscription=false;this.hasCompleted=false;this.index=0;}SwitchFirstMapSubscriber.prototype._next=function(value){if(!this.hasSubscription){this.tryNext(value);}};SwitchFirstMapSubscriber.prototype.tryNext=function(value){var index=this.index++;var destination=this.destination;try{var result=this.project(value,index);this.hasSubscription=true;this.add(subscribeToResult_1.subscribeToResult(this,result,value,index));}catch(err){destination.error(err);}};SwitchFirstMapSubscriber.prototype._complete=function(){this.hasCompleted=true;if(!this.hasSubscription){this.destination.complete();}};SwitchFirstMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;if(resultSelector){this.trySelectResult(outerValue,innerValue,outerIndex,innerIndex);}else{destination.next(innerValue);}};SwitchFirstMapSubscriber.prototype.trySelectResult=function(outerValue,innerValue,outerIndex,innerIndex){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;try{var result=resultSelector(outerValue,innerValue,outerIndex,innerIndex);destination.next(result);}catch(err){destination.error(err);}};SwitchFirstMapSubscriber.prototype.notifyError=function(err){this.destination.error(err);};SwitchFirstMapSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub);this.hasSubscription=false;if(this.hasCompleted){this.destination.complete();}};return SwitchFirstMapSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=exhaustMap.js.map

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var expand_1=__webpack_require__(519);Observable_1.Observable.prototype.expand=expand_1.expand;//# sourceMappingURL=expand.js.map

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * Recursively projects each source value to an Observable which is merged in
 * the output Observable.
 *
 * <span class="informal">It's similar to {@link mergeMap}, but applies the
 * projection function to every source value as well as every output value.
 * It's recursive.</span>
 *
 * <img src="./img/expand.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an Observable, and then merging those resulting Observables and
 * emitting the results of this merger. *Expand* will re-emit on the output
 * Observable every source value. Then, each output value is given to the
 * `project` function which returns an inner Observable to be merged on the
 * output Observable. Those output values resulting from the projection are also
 * given to the `project` function to produce new output values. This is how
 * *expand* behaves recursively.
 *
 * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var powersOfTwo = clicks
 *   .mapTo(1)
 *   .expand(x => Rx.Observable.of(2 * x).delay(1000))
 *   .take(10);
 * powersOfTwo.subscribe(x => console.log(x));
 *
 * @see {@link mergeMap}
 * @see {@link mergeScan}
 *
 * @param {function(value: T, index: number) => Observable} project A function
 * that, when applied to an item emitted by the source or the output Observable,
 * returns an Observable.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input
 * Observables being subscribed to concurrently.
 * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to
 * each projected inner Observable.
 * @return {Observable} An Observable that emits the source values and also
 * result of applying the projection function to each value emitted on the
 * output Observable and and merging the results of the Observables obtained
 * from this transformation.
 * @method expand
 * @owner Observable
 */function expand(project,concurrent,scheduler){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}if(scheduler===void 0){scheduler=undefined;}concurrent=(concurrent||0)<1?Number.POSITIVE_INFINITY:concurrent;return this.lift(new ExpandOperator(project,concurrent,scheduler));}exports.expand=expand;var ExpandOperator=function(){function ExpandOperator(project,concurrent,scheduler){this.project=project;this.concurrent=concurrent;this.scheduler=scheduler;}ExpandOperator.prototype.call=function(subscriber,source){return source.subscribe(new ExpandSubscriber(subscriber,this.project,this.concurrent,this.scheduler));};return ExpandOperator;}();exports.ExpandOperator=ExpandOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ExpandSubscriber=function(_super){__extends(ExpandSubscriber,_super);function ExpandSubscriber(destination,project,concurrent,scheduler){_super.call(this,destination);this.project=project;this.concurrent=concurrent;this.scheduler=scheduler;this.index=0;this.active=0;this.hasCompleted=false;if(concurrent<Number.POSITIVE_INFINITY){this.buffer=[];}}ExpandSubscriber.dispatch=function(arg){var subscriber=arg.subscriber,result=arg.result,value=arg.value,index=arg.index;subscriber.subscribeToProjection(result,value,index);};ExpandSubscriber.prototype._next=function(value){var destination=this.destination;if(destination.closed){this._complete();return;}var index=this.index++;if(this.active<this.concurrent){destination.next(value);var result=tryCatch_1.tryCatch(this.project)(value,index);if(result===errorObject_1.errorObject){destination.error(errorObject_1.errorObject.e);}else if(!this.scheduler){this.subscribeToProjection(result,value,index);}else{var state={subscriber:this,result:result,value:value,index:index};this.add(this.scheduler.schedule(ExpandSubscriber.dispatch,0,state));}}else{this.buffer.push(value);}};ExpandSubscriber.prototype.subscribeToProjection=function(result,value,index){this.active++;this.add(subscribeToResult_1.subscribeToResult(this,result,value,index));};ExpandSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.hasCompleted&&this.active===0){this.destination.complete();}};ExpandSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this._next(innerValue);};ExpandSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub);this.active--;if(buffer&&buffer.length>0){this._next(buffer.shift());}if(this.hasCompleted&&this.active===0){this.destination.complete();}};return ExpandSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.ExpandSubscriber=ExpandSubscriber;//# sourceMappingURL=expand.js.map

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var elementAt_1=__webpack_require__(521);Observable_1.Observable.prototype.elementAt=elementAt_1.elementAt;//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var ArgumentOutOfRangeError_1=__webpack_require__(46);/**
 * Emits the single value at the specified `index` in a sequence of emissions
 * from the source Observable.
 *
 * <span class="informal">Emits only the i-th value, then completes.</span>
 *
 * <img src="./img/elementAt.png" width="100%">
 *
 * `elementAt` returns an Observable that emits the item at the specified
 * `index` in the source Observable, or a default value if that `index` is out
 * of range and the `default` argument is provided. If the `default` argument is
 * not given and the `index` is out of range, the output Observable will emit an
 * `ArgumentOutOfRangeError` error.
 *
 * @example <caption>Emit only the third click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.elementAt(2);
 * result.subscribe(x => console.log(x));
 *
 * // Results in:
 * // click 1 = nothing
 * // click 2 = nothing
 * // click 3 = MouseEvent object logged to console
 *
 * @see {@link first}
 * @see {@link last}
 * @see {@link skip}
 * @see {@link single}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the
 * Observable has completed before emitting the i-th `next` notification.
 *
 * @param {number} index Is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {T} [defaultValue] The default value returned for missing indices.
 * @return {Observable} An Observable that emits a single item, if it is found.
 * Otherwise, will emit the default value if given. If not, then emits an error.
 * @method elementAt
 * @owner Observable
 */function elementAt(index,defaultValue){return this.lift(new ElementAtOperator(index,defaultValue));}exports.elementAt=elementAt;var ElementAtOperator=function(){function ElementAtOperator(index,defaultValue){this.index=index;this.defaultValue=defaultValue;if(index<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}}ElementAtOperator.prototype.call=function(subscriber,source){return source.subscribe(new ElementAtSubscriber(subscriber,this.index,this.defaultValue));};return ElementAtOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ElementAtSubscriber=function(_super){__extends(ElementAtSubscriber,_super);function ElementAtSubscriber(destination,index,defaultValue){_super.call(this,destination);this.index=index;this.defaultValue=defaultValue;}ElementAtSubscriber.prototype._next=function(x){if(this.index--===0){this.destination.next(x);this.destination.complete();}};ElementAtSubscriber.prototype._complete=function(){var destination=this.destination;if(this.index>=0){if(typeof this.defaultValue!=='undefined'){destination.next(this.defaultValue);}else{destination.error(new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError());}}destination.complete();};return ElementAtSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=elementAt.js.map

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var filter_1=__webpack_require__(176);Observable_1.Observable.prototype.filter=filter_1.filter;//# sourceMappingURL=filter.js.map

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var finally_1=__webpack_require__(524);Observable_1.Observable.prototype.finally=finally_1._finally;Observable_1.Observable.prototype._finally=finally_1._finally;//# sourceMappingURL=finally.js.map

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var Subscription_1=__webpack_require__(9);/**
 * Returns an Observable that mirrors the source Observable, but will call a specified function when
 * the source terminates on complete or error.
 * @param {function} callback Function to be called when source terminates.
 * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.
 * @method finally
 * @owner Observable
 */function _finally(callback){return this.lift(new FinallyOperator(callback));}exports._finally=_finally;var FinallyOperator=function(){function FinallyOperator(callback){this.callback=callback;}FinallyOperator.prototype.call=function(subscriber,source){return source.subscribe(new FinallySubscriber(subscriber,this.callback));};return FinallyOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var FinallySubscriber=function(_super){__extends(FinallySubscriber,_super);function FinallySubscriber(destination,callback){_super.call(this,destination);this.add(new Subscription_1.Subscription(callback));}return FinallySubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=finally.js.map

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var find_1=__webpack_require__(177);Observable_1.Observable.prototype.find=find_1.find;//# sourceMappingURL=find.js.map

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var findIndex_1=__webpack_require__(527);Observable_1.Observable.prototype.findIndex=findIndex_1.findIndex;//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var find_1=__webpack_require__(177);/**
 * Emits only the index of the first value emitted by the source Observable that
 * meets some condition.
 *
 * <span class="informal">It's like {@link find}, but emits the index of the
 * found value, not the value itself.</span>
 *
 * <img src="./img/findIndex.png" width="100%">
 *
 * `findIndex` searches for the first item in the source Observable that matches
 * the specified condition embodied by the `predicate`, and returns the
 * (zero-based) index of the first occurrence in the source. Unlike
 * {@link first}, the `predicate` is required in `findIndex`, and does not emit
 * an error if a valid value is not found.
 *
 * @example <caption>Emit the index of first click that happens on a DIV element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link first}
 * @see {@link take}
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate
 * A function called with each item to test for condition matching.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {Observable} An Observable of the index of the first item that
 * matches the condition.
 * @method find
 * @owner Observable
 */function findIndex(predicate,thisArg){return this.lift(new find_1.FindValueOperator(predicate,this,true,thisArg));}exports.findIndex=findIndex;//# sourceMappingURL=findIndex.js.map

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var first_1=__webpack_require__(529);Observable_1.Observable.prototype.first=first_1.first;//# sourceMappingURL=first.js.map

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var EmptyError_1=__webpack_require__(73);/**
 * Emits only the first value (or the first value that meets some condition)
 * emitted by the source Observable.
 *
 * <span class="informal">Emits only the first value. Or emits only the first
 * value that passes some test.</span>
 *
 * <img src="./img/first.png" width="100%">
 *
 * If called with no arguments, `first` emits the first value of the source
 * Observable, then completes. If called with a `predicate` function, `first`
 * emits the first value of the source that matches the specified condition. It
 * may also take a `resultSelector` function to produce the output value from
 * the input value, and a `defaultValue` to emit in case the source completes
 * before it is able to emit a valid value. Throws an error if `defaultValue`
 * was not provided and a matching element is not found.
 *
 * @example <caption>Emit only the first click that happens on the DOM</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first();
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Emits the first click that happens on a DIV</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.first(ev => ev.target.tagName === 'DIV');
 * result.subscribe(x => console.log(x));
 *
 * @see {@link filter}
 * @see {@link find}
 * @see {@link take}
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 *
 * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]
 * An optional function called with each item to test for condition matching.
 * @param {function(value: T, index: number): R} [resultSelector] A function to
 * produce the value on the output Observable based on the values
 * and the indices of the source Observable. The arguments passed to this
 * function are:
 * - `value`: the value that was emitted on the source.
 * - `index`: the "index" of the value from the source.
 * @param {R} [defaultValue] The default value emitted in case no valid value
 * was found on the source.
 * @return {Observable<T|R>} An Observable of the first item that matches the
 * condition.
 * @method first
 * @owner Observable
 */function first(predicate,resultSelector,defaultValue){return this.lift(new FirstOperator(predicate,resultSelector,defaultValue,this));}exports.first=first;var FirstOperator=function(){function FirstOperator(predicate,resultSelector,defaultValue,source){this.predicate=predicate;this.resultSelector=resultSelector;this.defaultValue=defaultValue;this.source=source;}FirstOperator.prototype.call=function(observer,source){return source.subscribe(new FirstSubscriber(observer,this.predicate,this.resultSelector,this.defaultValue,this.source));};return FirstOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var FirstSubscriber=function(_super){__extends(FirstSubscriber,_super);function FirstSubscriber(destination,predicate,resultSelector,defaultValue,source){_super.call(this,destination);this.predicate=predicate;this.resultSelector=resultSelector;this.defaultValue=defaultValue;this.source=source;this.index=0;this.hasCompleted=false;this._emitted=false;}FirstSubscriber.prototype._next=function(value){var index=this.index++;if(this.predicate){this._tryPredicate(value,index);}else{this._emit(value,index);}};FirstSubscriber.prototype._tryPredicate=function(value,index){var result;try{result=this.predicate(value,index,this.source);}catch(err){this.destination.error(err);return;}if(result){this._emit(value,index);}};FirstSubscriber.prototype._emit=function(value,index){if(this.resultSelector){this._tryResultSelector(value,index);return;}this._emitFinal(value);};FirstSubscriber.prototype._tryResultSelector=function(value,index){var result;try{result=this.resultSelector(value,index);}catch(err){this.destination.error(err);return;}this._emitFinal(result);};FirstSubscriber.prototype._emitFinal=function(value){var destination=this.destination;if(!this._emitted){this._emitted=true;destination.next(value);destination.complete();this.hasCompleted=true;}};FirstSubscriber.prototype._complete=function(){var destination=this.destination;if(!this.hasCompleted&&typeof this.defaultValue!=='undefined'){destination.next(this.defaultValue);destination.complete();}else if(!this.hasCompleted){destination.error(new EmptyError_1.EmptyError());}};return FirstSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=first.js.map

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var groupBy_1=__webpack_require__(531);Observable_1.Observable.prototype.groupBy=groupBy_1.groupBy;//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var Subscription_1=__webpack_require__(9);var Observable_1=__webpack_require__(0);var Subject_1=__webpack_require__(10);var Map_1=__webpack_require__(532);var FastMap_1=__webpack_require__(534);/* tslint:enable:max-line-length *//**
 * Groups the items emitted by an Observable according to a specified criterion,
 * and emits these grouped items as `GroupedObservables`, one
 * {@link GroupedObservable} per group.
 *
 * <img src="./img/groupBy.png" width="100%">
 *
 * @example <caption>Group objects by id and return as array</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs3'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *     )
 *     .groupBy(p => p.id)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // [ { id: 1, name: 'aze1' },
 * //   { id: 1, name: 'erg1' },
 * //   { id: 1, name: 'df1' } ]
 * //
 * // [ { id: 2, name: 'sf2' },
 * //   { id: 2, name: 'dg2' },
 * //   { id: 2, name: 'sfqfb2' },
 * //   { id: 2, name: 'qsgqsfg2' } ]
 * //
 * // [ { id: 3, name: 'qfs3' } ]
 *
 * @example <caption>Pivot data on the id field</caption>
 * Observable.of<Obj>({id: 1, name: 'aze1'},
 *                    {id: 2, name: 'sf2'},
 *                    {id: 2, name: 'dg2'},
 *                    {id: 1, name: 'erg1'},
 *                    {id: 1, name: 'df1'},
 *                    {id: 2, name: 'sfqfb2'},
 *                    {id: 3, name: 'qfs1'},
 *                    {id: 2, name: 'qsgqsfg2'}
 *                   )
 *     .groupBy(p => p.id, p => p.name)
 *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], ["" + group$.key]))
 *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))
 *     .subscribe(p => console.log(p));
 *
 * // displays:
 * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }
 * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }
 * // { id: 3, values: [ 'qfs1' ] }
 *
 * @param {function(value: T): K} keySelector A function that extracts the key
 * for each item.
 * @param {function(value: T): R} [elementSelector] A function that extracts the
 * return element for each item.
 * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]
 * A function that returns an Observable to determine how long each group should
 * exist.
 * @return {Observable<GroupedObservable<K,R>>} An Observable that emits
 * GroupedObservables, each of which corresponds to a unique key value and each
 * of which emits those items from the source Observable that share that key
 * value.
 * @method groupBy
 * @owner Observable
 */function groupBy(keySelector,elementSelector,durationSelector,subjectSelector){return this.lift(new GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector));}exports.groupBy=groupBy;var GroupByOperator=function(){function GroupByOperator(keySelector,elementSelector,durationSelector,subjectSelector){this.keySelector=keySelector;this.elementSelector=elementSelector;this.durationSelector=durationSelector;this.subjectSelector=subjectSelector;}GroupByOperator.prototype.call=function(subscriber,source){return source.subscribe(new GroupBySubscriber(subscriber,this.keySelector,this.elementSelector,this.durationSelector,this.subjectSelector));};return GroupByOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var GroupBySubscriber=function(_super){__extends(GroupBySubscriber,_super);function GroupBySubscriber(destination,keySelector,elementSelector,durationSelector,subjectSelector){_super.call(this,destination);this.keySelector=keySelector;this.elementSelector=elementSelector;this.durationSelector=durationSelector;this.subjectSelector=subjectSelector;this.groups=null;this.attemptedToUnsubscribe=false;this.count=0;}GroupBySubscriber.prototype._next=function(value){var key;try{key=this.keySelector(value);}catch(err){this.error(err);return;}this._group(value,key);};GroupBySubscriber.prototype._group=function(value,key){var groups=this.groups;if(!groups){groups=this.groups=typeof key==='string'?new FastMap_1.FastMap():new Map_1.Map();}var group=groups.get(key);var element;if(this.elementSelector){try{element=this.elementSelector(value);}catch(err){this.error(err);}}else{element=value;}if(!group){group=this.subjectSelector?this.subjectSelector():new Subject_1.Subject();groups.set(key,group);var groupedObservable=new GroupedObservable(key,group,this);this.destination.next(groupedObservable);if(this.durationSelector){var duration=void 0;try{duration=this.durationSelector(new GroupedObservable(key,group));}catch(err){this.error(err);return;}this.add(duration.subscribe(new GroupDurationSubscriber(key,group,this)));}}if(!group.closed){group.next(element);}};GroupBySubscriber.prototype._error=function(err){var groups=this.groups;if(groups){groups.forEach(function(group,key){group.error(err);});groups.clear();}this.destination.error(err);};GroupBySubscriber.prototype._complete=function(){var groups=this.groups;if(groups){groups.forEach(function(group,key){group.complete();});groups.clear();}this.destination.complete();};GroupBySubscriber.prototype.removeGroup=function(key){this.groups.delete(key);};GroupBySubscriber.prototype.unsubscribe=function(){if(!this.closed){this.attemptedToUnsubscribe=true;if(this.count===0){_super.prototype.unsubscribe.call(this);}}};return GroupBySubscriber;}(Subscriber_1.Subscriber);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var GroupDurationSubscriber=function(_super){__extends(GroupDurationSubscriber,_super);function GroupDurationSubscriber(key,group,parent){_super.call(this,group);this.key=key;this.group=group;this.parent=parent;}GroupDurationSubscriber.prototype._next=function(value){this.complete();};GroupDurationSubscriber.prototype._unsubscribe=function(){var _a=this,parent=_a.parent,key=_a.key;this.key=this.parent=null;if(parent){parent.removeGroup(key);}};return GroupDurationSubscriber;}(Subscriber_1.Subscriber);/**
 * An Observable representing values belonging to the same group represented by
 * a common key. The values emitted by a GroupedObservable come from the source
 * Observable. The common key is available as the field `key` on a
 * GroupedObservable instance.
 *
 * @class GroupedObservable<K, T>
 */var GroupedObservable=function(_super){__extends(GroupedObservable,_super);function GroupedObservable(key,groupSubject,refCountSubscription){_super.call(this);this.key=key;this.groupSubject=groupSubject;this.refCountSubscription=refCountSubscription;}GroupedObservable.prototype._subscribe=function(subscriber){var subscription=new Subscription_1.Subscription();var _a=this,refCountSubscription=_a.refCountSubscription,groupSubject=_a.groupSubject;if(refCountSubscription&&!refCountSubscription.closed){subscription.add(new InnerRefCountSubscription(refCountSubscription));}subscription.add(groupSubject.subscribe(subscriber));return subscription;};return GroupedObservable;}(Observable_1.Observable);exports.GroupedObservable=GroupedObservable;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var InnerRefCountSubscription=function(_super){__extends(InnerRefCountSubscription,_super);function InnerRefCountSubscription(parent){_super.call(this);this.parent=parent;parent.count++;}InnerRefCountSubscription.prototype.unsubscribe=function(){var parent=this.parent;if(!parent.closed&&!this.closed){_super.prototype.unsubscribe.call(this);parent.count-=1;if(parent.count===0&&parent.attemptedToUnsubscribe){parent.unsubscribe();}}};return InnerRefCountSubscription;}(Subscription_1.Subscription);//# sourceMappingURL=groupBy.js.map

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);var MapPolyfill_1=__webpack_require__(533);exports.Map=root_1.root.Map||function(){return MapPolyfill_1.MapPolyfill;}();//# sourceMappingURL=Map.js.map

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var MapPolyfill=function(){function MapPolyfill(){this.size=0;this._values=[];this._keys=[];}MapPolyfill.prototype.get=function(key){var i=this._keys.indexOf(key);return i===-1?undefined:this._values[i];};MapPolyfill.prototype.set=function(key,value){var i=this._keys.indexOf(key);if(i===-1){this._keys.push(key);this._values.push(value);this.size++;}else{this._values[i]=value;}return this;};MapPolyfill.prototype.delete=function(key){var i=this._keys.indexOf(key);if(i===-1){return false;}this._values.splice(i,1);this._keys.splice(i,1);this.size--;return true;};MapPolyfill.prototype.clear=function(){this._keys.length=0;this._values.length=0;this.size=0;};MapPolyfill.prototype.forEach=function(cb,thisArg){for(var i=0;i<this.size;i++){cb.call(thisArg,this._values[i],this._keys[i]);}};return MapPolyfill;}();exports.MapPolyfill=MapPolyfill;//# sourceMappingURL=MapPolyfill.js.map

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var FastMap=function(){function FastMap(){this.values={};}FastMap.prototype.delete=function(key){this.values[key]=null;return true;};FastMap.prototype.set=function(key,value){this.values[key]=value;return this;};FastMap.prototype.get=function(key){return this.values[key];};FastMap.prototype.forEach=function(cb,thisArg){var values=this.values;for(var key in values){if(values.hasOwnProperty(key)&&values[key]!==null){cb.call(thisArg,values[key],key);}}};FastMap.prototype.clear=function(){this.values={};};return FastMap;}();exports.FastMap=FastMap;//# sourceMappingURL=FastMap.js.map

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var ignoreElements_1=__webpack_require__(536);Observable_1.Observable.prototype.ignoreElements=ignoreElements_1.ignoreElements;//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var noop_1=__webpack_require__(169);/**
 * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.
 *
 * <img src="./img/ignoreElements.png" width="100%">
 *
 * @return {Observable} An empty Observable that only calls `complete`
 * or `error`, based on which one is called by the source Observable.
 * @method ignoreElements
 * @owner Observable
 */function ignoreElements(){return this.lift(new IgnoreElementsOperator());}exports.ignoreElements=ignoreElements;;var IgnoreElementsOperator=function(){function IgnoreElementsOperator(){}IgnoreElementsOperator.prototype.call=function(subscriber,source){return source.subscribe(new IgnoreElementsSubscriber(subscriber));};return IgnoreElementsOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var IgnoreElementsSubscriber=function(_super){__extends(IgnoreElementsSubscriber,_super);function IgnoreElementsSubscriber(){_super.apply(this,arguments);}IgnoreElementsSubscriber.prototype._next=function(unused){noop_1.noop();};return IgnoreElementsSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=ignoreElements.js.map

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var isEmpty_1=__webpack_require__(538);Observable_1.Observable.prototype.isEmpty=isEmpty_1.isEmpty;//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * If the source Observable is empty it returns an Observable that emits true, otherwise it emits false.
 *
 * <img src="./img/isEmpty.png" width="100%">
 *
 * @return {Observable} An Observable that emits a Boolean.
 * @method isEmpty
 * @owner Observable
 */function isEmpty(){return this.lift(new IsEmptyOperator());}exports.isEmpty=isEmpty;var IsEmptyOperator=function(){function IsEmptyOperator(){}IsEmptyOperator.prototype.call=function(observer,source){return source.subscribe(new IsEmptySubscriber(observer));};return IsEmptyOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var IsEmptySubscriber=function(_super){__extends(IsEmptySubscriber,_super);function IsEmptySubscriber(destination){_super.call(this,destination);}IsEmptySubscriber.prototype.notifyComplete=function(isEmpty){var destination=this.destination;destination.next(isEmpty);destination.complete();};IsEmptySubscriber.prototype._next=function(value){this.notifyComplete(false);};IsEmptySubscriber.prototype._complete=function(){this.notifyComplete(true);};return IsEmptySubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=isEmpty.js.map

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var audit_1=__webpack_require__(540);Observable_1.Observable.prototype.audit=audit_1.audit;//# sourceMappingURL=audit.js.map

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Ignores source values for a duration determined by another Observable, then
 * emits the most recent value from the source Observable, then repeats this
 * process.
 *
 * <span class="informal">It's like {@link auditTime}, but the silencing
 * duration is determined by a second Observable.</span>
 *
 * <img src="./img/audit.png" width="100%">
 *
 * `audit` is similar to `throttle`, but emits the last value from the silenced
 * time window, instead of the first value. `audit` emits the most recent value
 * from the source Observable on the output Observable as soon as its internal
 * timer becomes disabled, and ignores source values while the timer is enabled.
 * Initially, the timer is disabled. As soon as the first source value arrives,
 * the timer is enabled by calling the `durationSelector` function with the
 * source value, which returns the "duration" Observable. When the duration
 * Observable emits a value or completes, the timer is disabled, then the most
 * recent source value is emitted on the output Observable, and this process
 * repeats for the next source value.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.audit(ev => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounce}
 * @see {@link delayWhen}
 * @see {@link sample}
 * @see {@link throttle}
 *
 * @param {function(value: T): SubscribableOrPromise} durationSelector A function
 * that receives a value from the source Observable, for computing the silencing
 * duration, returned as an Observable or a Promise.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method audit
 * @owner Observable
 */function audit(durationSelector){return this.lift(new AuditOperator(durationSelector));}exports.audit=audit;var AuditOperator=function(){function AuditOperator(durationSelector){this.durationSelector=durationSelector;}AuditOperator.prototype.call=function(subscriber,source){return source.subscribe(new AuditSubscriber(subscriber,this.durationSelector));};return AuditOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var AuditSubscriber=function(_super){__extends(AuditSubscriber,_super);function AuditSubscriber(destination,durationSelector){_super.call(this,destination);this.durationSelector=durationSelector;this.hasValue=false;}AuditSubscriber.prototype._next=function(value){this.value=value;this.hasValue=true;if(!this.throttled){var duration=tryCatch_1.tryCatch(this.durationSelector)(value);if(duration===errorObject_1.errorObject){this.destination.error(errorObject_1.errorObject.e);}else{var innerSubscription=subscribeToResult_1.subscribeToResult(this,duration);if(innerSubscription.closed){this.clearThrottle();}else{this.add(this.throttled=innerSubscription);}}}};AuditSubscriber.prototype.clearThrottle=function(){var _a=this,value=_a.value,hasValue=_a.hasValue,throttled=_a.throttled;if(throttled){this.remove(throttled);this.throttled=null;throttled.unsubscribe();}if(hasValue){this.value=null;this.hasValue=false;this.destination.next(value);}};AuditSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex){this.clearThrottle();};AuditSubscriber.prototype.notifyComplete=function(){this.clearThrottle();};return AuditSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=audit.js.map

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var auditTime_1=__webpack_require__(542);Observable_1.Observable.prototype.auditTime=auditTime_1.auditTime;//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var async_1=__webpack_require__(16);var Subscriber_1=__webpack_require__(2);/**
 * Ignores source values for `duration` milliseconds, then emits the most recent
 * value from the source Observable, then repeats this process.
 *
 * <span class="informal">When it sees a source values, it ignores that plus
 * the next ones for `duration` milliseconds, and then it emits the most recent
 * value from the source.</span>
 *
 * <img src="./img/auditTime.png" width="100%">
 *
 * `auditTime` is similar to `throttleTime`, but emits the last value from the
 * silenced time window, instead of the first value. `auditTime` emits the most
 * recent value from the source Observable on the output Observable as soon as
 * its internal timer becomes disabled, and ignores source values while the
 * timer is enabled. Initially, the timer is disabled. As soon as the first
 * source value arrives, the timer is enabled. After `duration` milliseconds (or
 * the time unit determined internally by the optional `scheduler`) has passed,
 * the timer is disabled, then the most recent source value is emitted on the
 * output Observable, and this process repeats for the next source value.
 * Optionally takes a {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.auditTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttleTime}
 *
 * @param {number} duration Time to wait before emitting the most recent source
 * value, measured in milliseconds or the time unit determined internally
 * by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the rate-limiting behavior.
 * @return {Observable<T>} An Observable that performs rate-limiting of
 * emissions from the source Observable.
 * @method auditTime
 * @owner Observable
 */function auditTime(duration,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return this.lift(new AuditTimeOperator(duration,scheduler));}exports.auditTime=auditTime;var AuditTimeOperator=function(){function AuditTimeOperator(duration,scheduler){this.duration=duration;this.scheduler=scheduler;}AuditTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new AuditTimeSubscriber(subscriber,this.duration,this.scheduler));};return AuditTimeOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var AuditTimeSubscriber=function(_super){__extends(AuditTimeSubscriber,_super);function AuditTimeSubscriber(destination,duration,scheduler){_super.call(this,destination);this.duration=duration;this.scheduler=scheduler;this.hasValue=false;}AuditTimeSubscriber.prototype._next=function(value){this.value=value;this.hasValue=true;if(!this.throttled){this.add(this.throttled=this.scheduler.schedule(dispatchNext,this.duration,this));}};AuditTimeSubscriber.prototype.clearThrottle=function(){var _a=this,value=_a.value,hasValue=_a.hasValue,throttled=_a.throttled;if(throttled){this.remove(throttled);this.throttled=null;throttled.unsubscribe();}if(hasValue){this.value=null;this.hasValue=false;this.destination.next(value);}};return AuditTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchNext(subscriber){subscriber.clearThrottle();}//# sourceMappingURL=auditTime.js.map

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var last_1=__webpack_require__(544);Observable_1.Observable.prototype.last=last_1.last;//# sourceMappingURL=last.js.map

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var EmptyError_1=__webpack_require__(73);/* tslint:enable:max-line-length *//**
 * Returns an Observable that emits only the last item emitted by the source Observable.
 * It optionally takes a predicate function as a parameter, in which case, rather than emitting
 * the last item from the source Observable, the resulting Observable will emit the last item
 * from the source Observable that satisfies the predicate.
 *
 * <img src="./img/last.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {function} predicate - The condition any source emitted item has to satisfy.
 * @return {Observable} An Observable that emits only the last item satisfying the given condition
 * from the source, or an NoSuchElementException if no such items are emitted.
 * @throws - Throws if no items that match the predicate are emitted by the source Observable.
 * @method last
 * @owner Observable
 */function last(predicate,resultSelector,defaultValue){return this.lift(new LastOperator(predicate,resultSelector,defaultValue,this));}exports.last=last;var LastOperator=function(){function LastOperator(predicate,resultSelector,defaultValue,source){this.predicate=predicate;this.resultSelector=resultSelector;this.defaultValue=defaultValue;this.source=source;}LastOperator.prototype.call=function(observer,source){return source.subscribe(new LastSubscriber(observer,this.predicate,this.resultSelector,this.defaultValue,this.source));};return LastOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var LastSubscriber=function(_super){__extends(LastSubscriber,_super);function LastSubscriber(destination,predicate,resultSelector,defaultValue,source){_super.call(this,destination);this.predicate=predicate;this.resultSelector=resultSelector;this.defaultValue=defaultValue;this.source=source;this.hasValue=false;this.index=0;if(typeof defaultValue!=='undefined'){this.lastValue=defaultValue;this.hasValue=true;}}LastSubscriber.prototype._next=function(value){var index=this.index++;if(this.predicate){this._tryPredicate(value,index);}else{if(this.resultSelector){this._tryResultSelector(value,index);return;}this.lastValue=value;this.hasValue=true;}};LastSubscriber.prototype._tryPredicate=function(value,index){var result;try{result=this.predicate(value,index,this.source);}catch(err){this.destination.error(err);return;}if(result){if(this.resultSelector){this._tryResultSelector(value,index);return;}this.lastValue=value;this.hasValue=true;}};LastSubscriber.prototype._tryResultSelector=function(value,index){var result;try{result=this.resultSelector(value,index);}catch(err){this.destination.error(err);return;}this.lastValue=result;this.hasValue=true;};LastSubscriber.prototype._complete=function(){var destination=this.destination;if(this.hasValue){destination.next(this.lastValue);destination.complete();}else{destination.error(new EmptyError_1.EmptyError());}};return LastSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=last.js.map

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var let_1=__webpack_require__(546);Observable_1.Observable.prototype.let=let_1.letProto;Observable_1.Observable.prototype.letBind=let_1.letProto;//# sourceMappingURL=let.js.map

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * @param func
 * @return {Observable<R>}
 * @method let
 * @owner Observable
 */function letProto(func){return func(this);}exports.letProto=letProto;//# sourceMappingURL=let.js.map

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var every_1=__webpack_require__(548);Observable_1.Observable.prototype.every=every_1.every;//# sourceMappingURL=every.js.map

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.
 *
 * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>
 *  Observable.of(1, 2, 3, 4, 5, 6)
 *     .every(x => x < 5)
 *     .subscribe(x => console.log(x)); // -> false
 *
 * @param {function} predicate A function for determining if an item meets a specified condition.
 * @param {any} [thisArg] Optional object to use for `this` in the callback.
 * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.
 * @method every
 * @owner Observable
 */function every(predicate,thisArg){return this.lift(new EveryOperator(predicate,thisArg,this));}exports.every=every;var EveryOperator=function(){function EveryOperator(predicate,thisArg,source){this.predicate=predicate;this.thisArg=thisArg;this.source=source;}EveryOperator.prototype.call=function(observer,source){return source.subscribe(new EverySubscriber(observer,this.predicate,this.thisArg,this.source));};return EveryOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var EverySubscriber=function(_super){__extends(EverySubscriber,_super);function EverySubscriber(destination,predicate,thisArg,source){_super.call(this,destination);this.predicate=predicate;this.thisArg=thisArg;this.source=source;this.index=0;this.thisArg=thisArg||this;}EverySubscriber.prototype.notifyComplete=function(everyValueMatch){this.destination.next(everyValueMatch);this.destination.complete();};EverySubscriber.prototype._next=function(value){var result=false;try{result=this.predicate.call(this.thisArg,value,this.index++,this.source);}catch(err){this.destination.error(err);return;}if(!result){this.notifyComplete(false);}};EverySubscriber.prototype._complete=function(){this.notifyComplete(true);};return EverySubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=every.js.map

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var map_1=__webpack_require__(100);Observable_1.Observable.prototype.map=map_1.map;//# sourceMappingURL=map.js.map

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var mapTo_1=__webpack_require__(551);Observable_1.Observable.prototype.mapTo=mapTo_1.mapTo;//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Emits the given constant value on the output Observable every time the source
 * Observable emits a value.
 *
 * <span class="informal">Like {@link map}, but it maps every source value to
 * the same output value every time.</span>
 *
 * <img src="./img/mapTo.png" width="100%">
 *
 * Takes a constant `value` as argument, and emits that whenever the source
 * Observable emits a value. In other words, ignores the actual source value,
 * and simply uses the emission moment to know when to emit the given `value`.
 *
 * @example <caption>Map every click to the string 'Hi'</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var greetings = clicks.mapTo('Hi');
 * greetings.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {any} value The value to map each source value to.
 * @return {Observable} An Observable that emits the given `value` every time
 * the source Observable emits something.
 * @method mapTo
 * @owner Observable
 */function mapTo(value){return this.lift(new MapToOperator(value));}exports.mapTo=mapTo;var MapToOperator=function(){function MapToOperator(value){this.value=value;}MapToOperator.prototype.call=function(subscriber,source){return source.subscribe(new MapToSubscriber(subscriber,this.value));};return MapToOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var MapToSubscriber=function(_super){__extends(MapToSubscriber,_super);function MapToSubscriber(destination,value){_super.call(this,destination);this.value=value;}MapToSubscriber.prototype._next=function(x){this.destination.next(this.value);};return MapToSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=mapTo.js.map

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var materialize_1=__webpack_require__(553);Observable_1.Observable.prototype.materialize=materialize_1.materialize;//# sourceMappingURL=materialize.js.map

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var Notification_1=__webpack_require__(43);/**
 * Represents all of the notifications from the source Observable as `next`
 * emissions marked with their original types within {@link Notification}
 * objects.
 *
 * <span class="informal">Wraps `next`, `error` and `complete` emissions in
 * {@link Notification} objects, emitted as `next` on the output Observable.
 * </span>
 *
 * <img src="./img/materialize.png" width="100%">
 *
 * `materialize` returns an Observable that emits a `next` notification for each
 * `next`, `error`, or `complete` emission of the source Observable. When the
 * source Observable emits `complete`, the output Observable will emit `next` as
 * a Notification of type "complete", and then it will emit `complete` as well.
 * When the source Observable emits `error`, the output will emit `next` as a
 * Notification of type "error", and then `complete`.
 *
 * This operator is useful for producing metadata of the source Observable, to
 * be consumed as `next` emissions. Use it in conjunction with
 * {@link dematerialize}.
 *
 * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>
 * var letters = Rx.Observable.of('a', 'b', 13, 'd');
 * var upperCase = letters.map(x => x.toUpperCase());
 * var materialized = upperCase.materialize();
 * materialized.subscribe(x => console.log(x));
 *
 * // Results in the following:
 * // - Notification {kind: "N", value: "A", error: undefined, hasValue: true}
 * // - Notification {kind: "N", value: "B", error: undefined, hasValue: true}
 * // - Notification {kind: "E", value: undefined, error: TypeError:
 * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x
 * //   [as project] (http://1…, hasValue: false}
 *
 * @see {@link Notification}
 * @see {@link dematerialize}
 *
 * @return {Observable<Notification<T>>} An Observable that emits
 * {@link Notification} objects that wrap the original emissions from the source
 * Observable with metadata.
 * @method materialize
 * @owner Observable
 */function materialize(){return this.lift(new MaterializeOperator());}exports.materialize=materialize;var MaterializeOperator=function(){function MaterializeOperator(){}MaterializeOperator.prototype.call=function(subscriber,source){return source.subscribe(new MaterializeSubscriber(subscriber));};return MaterializeOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var MaterializeSubscriber=function(_super){__extends(MaterializeSubscriber,_super);function MaterializeSubscriber(destination){_super.call(this,destination);}MaterializeSubscriber.prototype._next=function(value){this.destination.next(Notification_1.Notification.createNext(value));};MaterializeSubscriber.prototype._error=function(err){var destination=this.destination;destination.next(Notification_1.Notification.createError(err));destination.complete();};MaterializeSubscriber.prototype._complete=function(){var destination=this.destination;destination.next(Notification_1.Notification.createComplete());destination.complete();};return MaterializeSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=materialize.js.map

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var max_1=__webpack_require__(555);Observable_1.Observable.prototype.max=max_1.max;//# sourceMappingURL=max.js.map

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var reduce_1=__webpack_require__(101);/**
 * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the largest value.
 *
 * <img src="./img/max.png" width="100%">
 *
 * @example <caption>Get the maximal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .max()
 *   .subscribe(x => console.log(x)); // -> 8
 *
 * @example <caption>Use a comparer function to get the maximal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'
 * }
 *
 * @see {@link min}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable} An Observable that emits item with the largest value.
 * @method max
 * @owner Observable
 */function max(comparer){var max=typeof comparer==='function'?function(x,y){return comparer(x,y)>0?x:y;}:function(x,y){return x>y?x:y;};return this.lift(new reduce_1.ReduceOperator(max));}exports.max=max;//# sourceMappingURL=max.js.map

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var merge_1=__webpack_require__(167);Observable_1.Observable.prototype.merge=merge_1.merge;//# sourceMappingURL=merge.js.map

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var mergeAll_1=__webpack_require__(69);Observable_1.Observable.prototype.mergeAll=mergeAll_1.mergeAll;//# sourceMappingURL=mergeAll.js.map

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var mergeMap_1=__webpack_require__(173);Observable_1.Observable.prototype.mergeMap=mergeMap_1.mergeMap;Observable_1.Observable.prototype.flatMap=mergeMap_1.mergeMap;//# sourceMappingURL=mergeMap.js.map

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var mergeMapTo_1=__webpack_require__(174);Observable_1.Observable.prototype.flatMapTo=mergeMapTo_1.mergeMapTo;Observable_1.Observable.prototype.mergeMapTo=mergeMapTo_1.mergeMapTo;//# sourceMappingURL=mergeMapTo.js.map

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var mergeScan_1=__webpack_require__(561);Observable_1.Observable.prototype.mergeScan=mergeScan_1.mergeScan;//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var subscribeToResult_1=__webpack_require__(6);var OuterSubscriber_1=__webpack_require__(5);/**
 * Applies an accumulator function over the source Observable where the
 * accumulator function itself returns an Observable, then each intermediate
 * Observable returned is merged into the output Observable.
 *
 * <span class="informal">It's like {@link scan}, but the Observables returned
 * by the accumulator are merged into the outer Observable.</span>
 *
 * @example <caption>Count the number of click events</caption>
 * const click$ = Rx.Observable.fromEvent(document, 'click');
 * const one$ = click$.mapTo(1);
 * const seed = 0;
 * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);
 * count$.subscribe(x => console.log(x));
 *
 * // Results:
 * 1
 * 2
 * 3
 * 4
 * // ...and so on for each click
 *
 * @param {function(acc: R, value: T): Observable<R>} accumulator
 * The accumulator function called on each source value.
 * @param seed The initial accumulation value.
 * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of
 * input Observables being subscribed to concurrently.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method mergeScan
 * @owner Observable
 */function mergeScan(accumulator,seed,concurrent){if(concurrent===void 0){concurrent=Number.POSITIVE_INFINITY;}return this.lift(new MergeScanOperator(accumulator,seed,concurrent));}exports.mergeScan=mergeScan;var MergeScanOperator=function(){function MergeScanOperator(accumulator,seed,concurrent){this.accumulator=accumulator;this.seed=seed;this.concurrent=concurrent;}MergeScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new MergeScanSubscriber(subscriber,this.accumulator,this.seed,this.concurrent));};return MergeScanOperator;}();exports.MergeScanOperator=MergeScanOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var MergeScanSubscriber=function(_super){__extends(MergeScanSubscriber,_super);function MergeScanSubscriber(destination,accumulator,acc,concurrent){_super.call(this,destination);this.accumulator=accumulator;this.acc=acc;this.concurrent=concurrent;this.hasValue=false;this.hasCompleted=false;this.buffer=[];this.active=0;this.index=0;}MergeScanSubscriber.prototype._next=function(value){if(this.active<this.concurrent){var index=this.index++;var ish=tryCatch_1.tryCatch(this.accumulator)(this.acc,value);var destination=this.destination;if(ish===errorObject_1.errorObject){destination.error(errorObject_1.errorObject.e);}else{this.active++;this._innerSub(ish,value,index);}}else{this.buffer.push(value);}};MergeScanSubscriber.prototype._innerSub=function(ish,value,index){this.add(subscribeToResult_1.subscribeToResult(this,ish,value,index));};MergeScanSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0&&this.buffer.length===0){if(this.hasValue===false){this.destination.next(this.acc);}this.destination.complete();}};MergeScanSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var destination=this.destination;this.acc=innerValue;this.hasValue=true;destination.next(innerValue);};MergeScanSubscriber.prototype.notifyComplete=function(innerSub){var buffer=this.buffer;this.remove(innerSub);this.active--;if(buffer.length>0){this._next(buffer.shift());}else if(this.active===0&&this.hasCompleted){if(this.hasValue===false){this.destination.next(this.acc);}this.destination.complete();}};return MergeScanSubscriber;}(OuterSubscriber_1.OuterSubscriber);exports.MergeScanSubscriber=MergeScanSubscriber;//# sourceMappingURL=mergeScan.js.map

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var min_1=__webpack_require__(563);Observable_1.Observable.prototype.min=min_1.min;//# sourceMappingURL=min.js.map

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var reduce_1=__webpack_require__(101);/**
 * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),
 * and when source Observable completes it emits a single item: the item with the smallest value.
 *
 * <img src="./img/min.png" width="100%">
 *
 * @example <caption>Get the minimal value of a series of numbers</caption>
 * Rx.Observable.of(5, 4, 7, 2, 8)
 *   .min()
 *   .subscribe(x => console.log(x)); // -> 2
 *
 * @example <caption>Use a comparer function to get the minimal item</caption>
 * interface Person {
 *   age: number,
 *   name: string
 * }
 * Observable.of<Person>({age: 7, name: 'Foo'},
 *                       {age: 5, name: 'Bar'},
 *                       {age: 9, name: 'Beer'})
 *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)
 *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'
 * }
 *
 * @see {@link max}
 *
 * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the
 * value of two items.
 * @return {Observable<R>} An Observable that emits item with the smallest value.
 * @method min
 * @owner Observable
 */function min(comparer){var min=typeof comparer==='function'?function(x,y){return comparer(x,y)<0?x:y;}:function(x,y){return x<y?x:y;};return this.lift(new reduce_1.ReduceOperator(min));}exports.min=min;//# sourceMappingURL=min.js.map

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var multicast_1=__webpack_require__(32);Observable_1.Observable.prototype.multicast=multicast_1.multicast;//# sourceMappingURL=multicast.js.map

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var observeOn_1=__webpack_require__(98);Observable_1.Observable.prototype.observeOn=observeOn_1.observeOn;//# sourceMappingURL=observeOn.js.map

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var onErrorResumeNext_1=__webpack_require__(170);Observable_1.Observable.prototype.onErrorResumeNext=onErrorResumeNext_1.onErrorResumeNext;//# sourceMappingURL=onErrorResumeNext.js.map

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var pairwise_1=__webpack_require__(568);Observable_1.Observable.prototype.pairwise=pairwise_1.pairwise;//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Groups pairs of consecutive emissions together and emits them as an array of
 * two values.
 *
 * <span class="informal">Puts the current value and previous value together as
 * an array, and emits that.</span>
 *
 * <img src="./img/pairwise.png" width="100%">
 *
 * The Nth emission from the source Observable will cause the output Observable
 * to emit an array [(N-1)th, Nth] of the previous and the current value, as a
 * pair. For this reason, `pairwise` emits on the second and subsequent
 * emissions from the source Observable, but not on the first emission, because
 * there is no previous value in that case.
 *
 * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var pairs = clicks.pairwise();
 * var distance = pairs.map(pair => {
 *   var x0 = pair[0].clientX;
 *   var y0 = pair[0].clientY;
 *   var x1 = pair[1].clientX;
 *   var y1 = pair[1].clientY;
 *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));
 * });
 * distance.subscribe(x => console.log(x));
 *
 * @see {@link buffer}
 * @see {@link bufferCount}
 *
 * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of
 * consecutive values from the source Observable.
 * @method pairwise
 * @owner Observable
 */function pairwise(){return this.lift(new PairwiseOperator());}exports.pairwise=pairwise;var PairwiseOperator=function(){function PairwiseOperator(){}PairwiseOperator.prototype.call=function(subscriber,source){return source.subscribe(new PairwiseSubscriber(subscriber));};return PairwiseOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var PairwiseSubscriber=function(_super){__extends(PairwiseSubscriber,_super);function PairwiseSubscriber(destination){_super.call(this,destination);this.hasPrev=false;}PairwiseSubscriber.prototype._next=function(value){if(this.hasPrev){this.destination.next([this.prev,value]);}else{this.hasPrev=true;}this.prev=value;};return PairwiseSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=pairwise.js.map

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var partition_1=__webpack_require__(570);Observable_1.Observable.prototype.partition=partition_1.partition;//# sourceMappingURL=partition.js.map

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var not_1=__webpack_require__(571);var filter_1=__webpack_require__(176);/**
 * Splits the source Observable into two, one with values that satisfy a
 * predicate, and another with values that don't satisfy the predicate.
 *
 * <span class="informal">It's like {@link filter}, but returns two Observables:
 * one like the output of {@link filter}, and the other with values that did not
 * pass the condition.</span>
 *
 * <img src="./img/partition.png" width="100%">
 *
 * `partition` outputs an array with two Observables that partition the values
 * from the source Observable through the given `predicate` function. The first
 * Observable in that array emits source values for which the predicate argument
 * returns true. The second Observable emits source values for which the
 * predicate returns false. The first behaves like {@link filter} and the second
 * behaves like {@link filter} with the predicate negated.
 *
 * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');
 * var clicksOnDivs = parts[0];
 * var clicksElsewhere = parts[1];
 * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));
 * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));
 *
 * @see {@link filter}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates each value emitted by the source Observable. If it returns `true`,
 * the value is emitted on the first Observable in the returned array, if
 * `false` the value is emitted on the second Observable in the array. The
 * `index` parameter is the number `i` for the i-th source emission that has
 * happened since the subscription, starting from the number `0`.
 * @param {any} [thisArg] An optional argument to determine the value of `this`
 * in the `predicate` function.
 * @return {[Observable<T>, Observable<T>]} An array with two Observables: one
 * with values that passed the predicate, and another with values that did not
 * pass the predicate.
 * @method partition
 * @owner Observable
 */function partition(predicate,thisArg){return[filter_1.filter.call(this,predicate,thisArg),filter_1.filter.call(this,not_1.not(predicate,thisArg))];}exports.partition=partition;//# sourceMappingURL=partition.js.map

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
function not(pred,thisArg){function notPred(){return!notPred.pred.apply(notPred.thisArg,arguments);}notPred.pred=pred;notPred.thisArg=thisArg;return notPred;}exports.not=not;//# sourceMappingURL=not.js.map

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var pluck_1=__webpack_require__(573);Observable_1.Observable.prototype.pluck=pluck_1.pluck;//# sourceMappingURL=pluck.js.map

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var map_1=__webpack_require__(100);/**
 * Maps each source value (an object) to its specified nested property.
 *
 * <span class="informal">Like {@link map}, but meant only for picking one of
 * the nested properties of every emitted object.</span>
 *
 * <img src="./img/pluck.png" width="100%">
 *
 * Given a list of strings describing a path to an object property, retrieves
 * the value of a specified nested property from all values in the source
 * Observable. If a property can't be resolved, it will return `undefined` for
 * that value.
 *
 * @example <caption>Map every click to the tagName of the clicked target element</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var tagNames = clicks.pluck('target', 'tagName');
 * tagNames.subscribe(x => console.log(x));
 *
 * @see {@link map}
 *
 * @param {...string} properties The nested properties to pluck from each source
 * value (an object).
 * @return {Observable} A new Observable of property values from the source values.
 * @method pluck
 * @owner Observable
 */function pluck(){var properties=[];for(var _i=0;_i<arguments.length;_i++){properties[_i-0]=arguments[_i];}var length=properties.length;if(length===0){throw new Error('list of properties cannot be empty.');}return map_1.map.call(this,plucker(properties,length));}exports.pluck=pluck;function plucker(props,length){var mapper=function mapper(x){var currentProp=x;for(var i=0;i<length;i++){var p=currentProp[props[i]];if(typeof p!=='undefined'){currentProp=p;}else{return undefined;}}return currentProp;};return mapper;}//# sourceMappingURL=pluck.js.map

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var publish_1=__webpack_require__(575);Observable_1.Observable.prototype.publish=publish_1.publish;//# sourceMappingURL=publish.js.map

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Subject_1=__webpack_require__(10);var multicast_1=__webpack_require__(32);/* tslint:enable:max-line-length *//**
 * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called
 * before it begins emitting items to those Observers that have subscribed to it.
 *
 * <img src="./img/publish.png" width="100%">
 *
 * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times
 * as needed, without causing multiple subscriptions to the source sequence.
 * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.
 * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.
 * @method publish
 * @owner Observable
 */function publish(selector){return selector?multicast_1.multicast.call(this,function(){return new Subject_1.Subject();},selector):multicast_1.multicast.call(this,new Subject_1.Subject());}exports.publish=publish;//# sourceMappingURL=publish.js.map

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var publishBehavior_1=__webpack_require__(577);Observable_1.Observable.prototype.publishBehavior=publishBehavior_1.publishBehavior;//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var BehaviorSubject_1=__webpack_require__(179);var multicast_1=__webpack_require__(32);/**
 * @param value
 * @return {ConnectableObservable<T>}
 * @method publishBehavior
 * @owner Observable
 */function publishBehavior(value){return multicast_1.multicast.call(this,new BehaviorSubject_1.BehaviorSubject(value));}exports.publishBehavior=publishBehavior;//# sourceMappingURL=publishBehavior.js.map

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var publishReplay_1=__webpack_require__(579);Observable_1.Observable.prototype.publishReplay=publishReplay_1.publishReplay;//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var ReplaySubject_1=__webpack_require__(72);var multicast_1=__webpack_require__(32);/**
 * @param bufferSize
 * @param windowTime
 * @param scheduler
 * @return {ConnectableObservable<T>}
 * @method publishReplay
 * @owner Observable
 */function publishReplay(bufferSize,windowTime,scheduler){if(bufferSize===void 0){bufferSize=Number.POSITIVE_INFINITY;}if(windowTime===void 0){windowTime=Number.POSITIVE_INFINITY;}return multicast_1.multicast.call(this,new ReplaySubject_1.ReplaySubject(bufferSize,windowTime,scheduler));}exports.publishReplay=publishReplay;//# sourceMappingURL=publishReplay.js.map

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var publishLast_1=__webpack_require__(581);Observable_1.Observable.prototype.publishLast=publishLast_1.publishLast;//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var AsyncSubject_1=__webpack_require__(68);var multicast_1=__webpack_require__(32);/**
 * @return {ConnectableObservable<T>}
 * @method publishLast
 * @owner Observable
 */function publishLast(){return multicast_1.multicast.call(this,new AsyncSubject_1.AsyncSubject());}exports.publishLast=publishLast;//# sourceMappingURL=publishLast.js.map

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var race_1=__webpack_require__(168);Observable_1.Observable.prototype.race=race_1.race;//# sourceMappingURL=race.js.map

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var reduce_1=__webpack_require__(101);Observable_1.Observable.prototype.reduce=reduce_1.reduce;//# sourceMappingURL=reduce.js.map

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var repeat_1=__webpack_require__(585);Observable_1.Observable.prototype.repeat=repeat_1.repeat;//# sourceMappingURL=repeat.js.map

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var EmptyObservable_1=__webpack_require__(29);/**
 * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.
 *
 * <img src="./img/repeat.png" width="100%">
 *
 * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield
 * an empty Observable.
 * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most
 * count times.
 * @method repeat
 * @owner Observable
 */function repeat(count){if(count===void 0){count=-1;}if(count===0){return new EmptyObservable_1.EmptyObservable();}else if(count<0){return this.lift(new RepeatOperator(-1,this));}else{return this.lift(new RepeatOperator(count-1,this));}}exports.repeat=repeat;var RepeatOperator=function(){function RepeatOperator(count,source){this.count=count;this.source=source;}RepeatOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatSubscriber(subscriber,this.count,this.source));};return RepeatOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var RepeatSubscriber=function(_super){__extends(RepeatSubscriber,_super);function RepeatSubscriber(destination,count,source){_super.call(this,destination);this.count=count;this.source=source;}RepeatSubscriber.prototype.complete=function(){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(count===0){return _super.prototype.complete.call(this);}else if(count>-1){this.count=count-1;}source.subscribe(this._unsubscribeAndRecycle());}};return RepeatSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=repeat.js.map

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var repeatWhen_1=__webpack_require__(587);Observable_1.Observable.prototype.repeatWhen=repeatWhen_1.repeatWhen;//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source
 * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable
 * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise
 * this method will resubscribe to the source Observable.
 *
 * <img src="./img/repeatWhen.png" width="100%">
 *
 * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with
 * which a user can `complete` or `error`, aborting the repetition.
 * @return {Observable} The source Observable modified with repeat logic.
 * @method repeatWhen
 * @owner Observable
 */function repeatWhen(notifier){return this.lift(new RepeatWhenOperator(notifier));}exports.repeatWhen=repeatWhen;var RepeatWhenOperator=function(){function RepeatWhenOperator(notifier){this.notifier=notifier;}RepeatWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RepeatWhenSubscriber(subscriber,this.notifier,source));};return RepeatWhenOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var RepeatWhenSubscriber=function(_super){__extends(RepeatWhenSubscriber,_super);function RepeatWhenSubscriber(destination,notifier,source){_super.call(this,destination);this.notifier=notifier;this.source=source;this.sourceIsBeingSubscribedTo=true;}RepeatWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.sourceIsBeingSubscribedTo=true;this.source.subscribe(this);};RepeatWhenSubscriber.prototype.notifyComplete=function(innerSub){if(this.sourceIsBeingSubscribedTo===false){return _super.prototype.complete.call(this);}};RepeatWhenSubscriber.prototype.complete=function(){this.sourceIsBeingSubscribedTo=false;if(!this.isStopped){if(!this.retries){this.subscribeToRetries();}else if(this.retriesSubscription.closed){return _super.prototype.complete.call(this);}this._unsubscribeAndRecycle();this.notifications.next();}};RepeatWhenSubscriber.prototype._unsubscribe=function(){var _a=this,notifications=_a.notifications,retriesSubscription=_a.retriesSubscription;if(notifications){notifications.unsubscribe();this.notifications=null;}if(retriesSubscription){retriesSubscription.unsubscribe();this.retriesSubscription=null;}this.retries=null;};RepeatWhenSubscriber.prototype._unsubscribeAndRecycle=function(){var _a=this,notifications=_a.notifications,retries=_a.retries,retriesSubscription=_a.retriesSubscription;this.notifications=null;this.retries=null;this.retriesSubscription=null;_super.prototype._unsubscribeAndRecycle.call(this);this.notifications=notifications;this.retries=retries;this.retriesSubscription=retriesSubscription;return this;};RepeatWhenSubscriber.prototype.subscribeToRetries=function(){this.notifications=new Subject_1.Subject();var retries=tryCatch_1.tryCatch(this.notifier)(this.notifications);if(retries===errorObject_1.errorObject){return _super.prototype.complete.call(this);}this.retries=retries;this.retriesSubscription=subscribeToResult_1.subscribeToResult(this,retries);};return RepeatWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=repeatWhen.js.map

/***/ }),
/* 588 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var retry_1=__webpack_require__(589);Observable_1.Observable.prototype.retry=retry_1.retry;//# sourceMappingURL=retry.js.map

/***/ }),
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given
 * as a number parameter) rather than propagating the `error` call.
 *
 * <img src="./img/retry.png" width="100%">
 *
 * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted
 * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second
 * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications
 * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].
 * @param {number} count - Number of retry attempts before failing.
 * @return {Observable} The source Observable modified with the retry logic.
 * @method retry
 * @owner Observable
 */function retry(count){if(count===void 0){count=-1;}return this.lift(new RetryOperator(count,this));}exports.retry=retry;var RetryOperator=function(){function RetryOperator(count,source){this.count=count;this.source=source;}RetryOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetrySubscriber(subscriber,this.count,this.source));};return RetryOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var RetrySubscriber=function(_super){__extends(RetrySubscriber,_super);function RetrySubscriber(destination,count,source){_super.call(this,destination);this.count=count;this.source=source;}RetrySubscriber.prototype.error=function(err){if(!this.isStopped){var _a=this,source=_a.source,count=_a.count;if(count===0){return _super.prototype.error.call(this,err);}else if(count>-1){this.count=count-1;}source.subscribe(this._unsubscribeAndRecycle());}};return RetrySubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=retry.js.map

/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var retryWhen_1=__webpack_require__(591);Observable_1.Observable.prototype.retryWhen=retryWhen_1.retryWhen;//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable
 * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.
 * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child
 * subscription. Otherwise this method will resubscribe to the source Observable.
 *
 * <img src="./img/retryWhen.png" width="100%">
 *
 * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a
 * user can `complete` or `error`, aborting the retry.
 * @return {Observable} The source Observable modified with retry logic.
 * @method retryWhen
 * @owner Observable
 */function retryWhen(notifier){return this.lift(new RetryWhenOperator(notifier,this));}exports.retryWhen=retryWhen;var RetryWhenOperator=function(){function RetryWhenOperator(notifier,source){this.notifier=notifier;this.source=source;}RetryWhenOperator.prototype.call=function(subscriber,source){return source.subscribe(new RetryWhenSubscriber(subscriber,this.notifier,this.source));};return RetryWhenOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var RetryWhenSubscriber=function(_super){__extends(RetryWhenSubscriber,_super);function RetryWhenSubscriber(destination,notifier,source){_super.call(this,destination);this.notifier=notifier;this.source=source;}RetryWhenSubscriber.prototype.error=function(err){if(!this.isStopped){var errors=this.errors;var retries=this.retries;var retriesSubscription=this.retriesSubscription;if(!retries){errors=new Subject_1.Subject();retries=tryCatch_1.tryCatch(this.notifier)(errors);if(retries===errorObject_1.errorObject){return _super.prototype.error.call(this,errorObject_1.errorObject.e);}retriesSubscription=subscribeToResult_1.subscribeToResult(this,retries);}else{this.errors=null;this.retriesSubscription=null;}this._unsubscribeAndRecycle();this.errors=errors;this.retries=retries;this.retriesSubscription=retriesSubscription;errors.next(err);}};RetryWhenSubscriber.prototype._unsubscribe=function(){var _a=this,errors=_a.errors,retriesSubscription=_a.retriesSubscription;if(errors){errors.unsubscribe();this.errors=null;}if(retriesSubscription){retriesSubscription.unsubscribe();this.retriesSubscription=null;}this.retries=null;};RetryWhenSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,errors=_a.errors,retries=_a.retries,retriesSubscription=_a.retriesSubscription;this.errors=null;this.retries=null;this.retriesSubscription=null;this._unsubscribeAndRecycle();this.errors=errors;this.retries=retries;this.retriesSubscription=retriesSubscription;this.source.subscribe(this);};return RetryWhenSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=retryWhen.js.map

/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var sample_1=__webpack_require__(593);Observable_1.Observable.prototype.sample=sample_1.sample;//# sourceMappingURL=sample.js.map

/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Emits the most recently emitted value from the source Observable whenever
 * another Observable, the `notifier`, emits.
 *
 * <span class="informal">It's like {@link sampleTime}, but samples whenever
 * the `notifier` Observable emits something.</span>
 *
 * <img src="./img/sample.png" width="100%">
 *
 * Whenever the `notifier` Observable emits a value or completes, `sample`
 * looks at the source Observable and emits whichever value it has most recently
 * emitted since the previous sampling, unless the source has not emitted
 * anything since the previous sampling. The `notifier` is subscribed to as soon
 * as the output Observable is subscribed.
 *
 * @example <caption>On every click, sample the most recent "seconds" timer</caption>
 * var seconds = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = seconds.sample(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link audit}
 * @see {@link debounce}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {Observable<any>} notifier The Observable to use for sampling the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable whenever the notifier Observable
 * emits value or completes.
 * @method sample
 * @owner Observable
 */function sample(notifier){return this.lift(new SampleOperator(notifier));}exports.sample=sample;var SampleOperator=function(){function SampleOperator(notifier){this.notifier=notifier;}SampleOperator.prototype.call=function(subscriber,source){var sampleSubscriber=new SampleSubscriber(subscriber);var subscription=source.subscribe(sampleSubscriber);subscription.add(subscribeToResult_1.subscribeToResult(sampleSubscriber,this.notifier));return subscription;};return SampleOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SampleSubscriber=function(_super){__extends(SampleSubscriber,_super);function SampleSubscriber(){_super.apply(this,arguments);this.hasValue=false;}SampleSubscriber.prototype._next=function(value){this.value=value;this.hasValue=true;};SampleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.emitValue();};SampleSubscriber.prototype.notifyComplete=function(){this.emitValue();};SampleSubscriber.prototype.emitValue=function(){if(this.hasValue){this.hasValue=false;this.destination.next(this.value);}};return SampleSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=sample.js.map

/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var sampleTime_1=__webpack_require__(595);Observable_1.Observable.prototype.sampleTime=sampleTime_1.sampleTime;//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var async_1=__webpack_require__(16);/**
 * Emits the most recently emitted value from the source Observable within
 * periodic time intervals.
 *
 * <span class="informal">Samples the source Observable at periodic time
 * intervals, emitting what it samples.</span>
 *
 * <img src="./img/sampleTime.png" width="100%">
 *
 * `sampleTime` periodically looks at the source Observable and emits whichever
 * value it has most recently emitted since the previous sampling, unless the
 * source has not emitted anything since the previous sampling. The sampling
 * happens periodically in time every `period` milliseconds (or the time unit
 * defined by the optional `scheduler` argument). The sampling starts as soon as
 * the output Observable is subscribed.
 *
 * @example <caption>Every second, emit the most recent click at most once</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.sampleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sample}
 * @see {@link throttleTime}
 *
 * @param {number} period The sampling period expressed in milliseconds or the
 * time unit determined internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the sampling.
 * @return {Observable<T>} An Observable that emits the results of sampling the
 * values emitted by the source Observable at the specified time interval.
 * @method sampleTime
 * @owner Observable
 */function sampleTime(period,scheduler){if(scheduler===void 0){scheduler=async_1.async;}return this.lift(new SampleTimeOperator(period,scheduler));}exports.sampleTime=sampleTime;var SampleTimeOperator=function(){function SampleTimeOperator(period,scheduler){this.period=period;this.scheduler=scheduler;}SampleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new SampleTimeSubscriber(subscriber,this.period,this.scheduler));};return SampleTimeOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SampleTimeSubscriber=function(_super){__extends(SampleTimeSubscriber,_super);function SampleTimeSubscriber(destination,period,scheduler){_super.call(this,destination);this.period=period;this.scheduler=scheduler;this.hasValue=false;this.add(scheduler.schedule(dispatchNotification,period,{subscriber:this,period:period}));}SampleTimeSubscriber.prototype._next=function(value){this.lastValue=value;this.hasValue=true;};SampleTimeSubscriber.prototype.notifyNext=function(){if(this.hasValue){this.hasValue=false;this.destination.next(this.lastValue);}};return SampleTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchNotification(state){var subscriber=state.subscriber,period=state.period;subscriber.notifyNext();this.schedule(state,period);}//# sourceMappingURL=sampleTime.js.map

/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var scan_1=__webpack_require__(597);Observable_1.Observable.prototype.scan=scan_1.scan;//# sourceMappingURL=scan.js.map

/***/ }),
/* 597 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/* tslint:enable:max-line-length *//**
 * Applies an accumulator function over the source Observable, and returns each
 * intermediate result, with an optional seed value.
 *
 * <span class="informal">It's like {@link reduce}, but emits the current
 * accumulation whenever the source emits a value.</span>
 *
 * <img src="./img/scan.png" width="100%">
 *
 * Combines together all values emitted on the source, using an accumulator
 * function that knows how to join a new source value into the accumulation from
 * the past. Is similar to {@link reduce}, but emits the intermediate
 * accumulations.
 *
 * Returns an Observable that applies a specified `accumulator` function to each
 * item emitted by the source Observable. If a `seed` value is specified, then
 * that value will be used as the initial value for the accumulator. If no seed
 * value is specified, the first item of the source is used as the seed.
 *
 * @example <caption>Count the number of click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var ones = clicks.mapTo(1);
 * var seed = 0;
 * var count = ones.scan((acc, one) => acc + one, seed);
 * count.subscribe(x => console.log(x));
 *
 * @see {@link expand}
 * @see {@link mergeScan}
 * @see {@link reduce}
 *
 * @param {function(acc: R, value: T, index: number): R} accumulator
 * The accumulator function called on each source value.
 * @param {T|R} [seed] The initial accumulation value.
 * @return {Observable<R>} An observable of the accumulated values.
 * @method scan
 * @owner Observable
 */function scan(accumulator,seed){var hasSeed=false;// providing a seed of `undefined` *should* be valid and trigger
// hasSeed! so don't use `seed !== undefined` checks!
// For this reason, we have to check it here at the original call site
// otherwise inside Operator/Subscriber we won't know if `undefined`
// means they didn't provide anything or if they literally provided `undefined`
if(arguments.length>=2){hasSeed=true;}return this.lift(new ScanOperator(accumulator,seed,hasSeed));}exports.scan=scan;var ScanOperator=function(){function ScanOperator(accumulator,seed,hasSeed){if(hasSeed===void 0){hasSeed=false;}this.accumulator=accumulator;this.seed=seed;this.hasSeed=hasSeed;}ScanOperator.prototype.call=function(subscriber,source){return source.subscribe(new ScanSubscriber(subscriber,this.accumulator,this.seed,this.hasSeed));};return ScanOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ScanSubscriber=function(_super){__extends(ScanSubscriber,_super);function ScanSubscriber(destination,accumulator,_seed,hasSeed){_super.call(this,destination);this.accumulator=accumulator;this._seed=_seed;this.hasSeed=hasSeed;this.index=0;}Object.defineProperty(ScanSubscriber.prototype,"seed",{get:function get(){return this._seed;},set:function set(value){this.hasSeed=true;this._seed=value;},enumerable:true,configurable:true});ScanSubscriber.prototype._next=function(value){if(!this.hasSeed){this.seed=value;this.destination.next(value);}else{return this._tryNext(value);}};ScanSubscriber.prototype._tryNext=function(value){var index=this.index++;var result;try{result=this.accumulator(this.seed,value,index);}catch(err){this.destination.error(err);}this.seed=result;this.destination.next(result);};return ScanSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=scan.js.map

/***/ }),
/* 598 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var sequenceEqual_1=__webpack_require__(599);Observable_1.Observable.prototype.sequenceEqual=sequenceEqual_1.sequenceEqual;//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 599 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);/**
 * Compares all values of two observables in sequence using an optional comparor function
 * and returns an observable of a single boolean value representing whether or not the two sequences
 * are equal.
 *
 * <span class="informal">Checks to see of all values emitted by both observables are equal, in order.</span>
 *
 * <img src="./img/sequenceEqual.png" width="100%">
 *
 * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either
 * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom
 * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the
 * observables completes, the operator will wait for the other observable to complete; If the other
 * observable emits before completing, the returned observable will emit `false` and complete. If one observable never
 * completes or emits after the other complets, the returned observable will never complete.
 *
 * @example <caption>figure out if the Konami code matches</caption>
 * var code = Rx.Observable.from([
 *  "ArrowUp",
 *  "ArrowUp",
 *  "ArrowDown",
 *  "ArrowDown",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "ArrowLeft",
 *  "ArrowRight",
 *  "KeyB",
 *  "KeyA",
 *  "Enter" // no start key, clearly.
 * ]);
 *
 * var keys = Rx.Observable.fromEvent(document, 'keyup')
 *  .map(e => e.code);
 * var matches = keys.bufferCount(11, 1)
 *  .mergeMap(
 *    last11 =>
 *      Rx.Observable.from(last11)
 *        .sequenceEqual(code)
 *   );
 * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));
 *
 * @see {@link combineLatest}
 * @see {@link zip}
 * @see {@link withLatestFrom}
 *
 * @param {Observable} compareTo The observable sequence to compare the source sequence to.
 * @param {function} [comparor] An optional function to compare each value pair
 * @return {Observable} An Observable of a single boolean value representing whether or not
 * the values emitted by both observables were equal in sequence.
 * @method sequenceEqual
 * @owner Observable
 */function sequenceEqual(compareTo,comparor){return this.lift(new SequenceEqualOperator(compareTo,comparor));}exports.sequenceEqual=sequenceEqual;var SequenceEqualOperator=function(){function SequenceEqualOperator(compareTo,comparor){this.compareTo=compareTo;this.comparor=comparor;}SequenceEqualOperator.prototype.call=function(subscriber,source){return source.subscribe(new SequenceEqualSubscriber(subscriber,this.compareTo,this.comparor));};return SequenceEqualOperator;}();exports.SequenceEqualOperator=SequenceEqualOperator;/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SequenceEqualSubscriber=function(_super){__extends(SequenceEqualSubscriber,_super);function SequenceEqualSubscriber(destination,compareTo,comparor){_super.call(this,destination);this.compareTo=compareTo;this.comparor=comparor;this._a=[];this._b=[];this._oneComplete=false;this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination,this)));}SequenceEqualSubscriber.prototype._next=function(value){if(this._oneComplete&&this._b.length===0){this.emit(false);}else{this._a.push(value);this.checkValues();}};SequenceEqualSubscriber.prototype._complete=function(){if(this._oneComplete){this.emit(this._a.length===0&&this._b.length===0);}else{this._oneComplete=true;}};SequenceEqualSubscriber.prototype.checkValues=function(){var _c=this,_a=_c._a,_b=_c._b,comparor=_c.comparor;while(_a.length>0&&_b.length>0){var a=_a.shift();var b=_b.shift();var areEqual=false;if(comparor){areEqual=tryCatch_1.tryCatch(comparor)(a,b);if(areEqual===errorObject_1.errorObject){this.destination.error(errorObject_1.errorObject.e);}}else{areEqual=a===b;}if(!areEqual){this.emit(false);}}};SequenceEqualSubscriber.prototype.emit=function(value){var destination=this.destination;destination.next(value);destination.complete();};SequenceEqualSubscriber.prototype.nextB=function(value){if(this._oneComplete&&this._a.length===0){this.emit(false);}else{this._b.push(value);this.checkValues();}};return SequenceEqualSubscriber;}(Subscriber_1.Subscriber);exports.SequenceEqualSubscriber=SequenceEqualSubscriber;var SequenceEqualCompareToSubscriber=function(_super){__extends(SequenceEqualCompareToSubscriber,_super);function SequenceEqualCompareToSubscriber(destination,parent){_super.call(this,destination);this.parent=parent;}SequenceEqualCompareToSubscriber.prototype._next=function(value){this.parent.nextB(value);};SequenceEqualCompareToSubscriber.prototype._error=function(err){this.parent.error(err);};SequenceEqualCompareToSubscriber.prototype._complete=function(){this.parent._complete();};return SequenceEqualCompareToSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=sequenceEqual.js.map

/***/ }),
/* 600 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var share_1=__webpack_require__(601);Observable_1.Observable.prototype.share=share_1.share;//# sourceMappingURL=share.js.map

/***/ }),
/* 601 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var multicast_1=__webpack_require__(32);var Subject_1=__webpack_require__(10);function shareSubjectFactory(){return new Subject_1.Subject();}/**
 * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one
 * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will
 * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.
 * This is an alias for .publish().refCount().
 *
 * <img src="./img/share.png" width="100%">
 *
 * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.
 * @method share
 * @owner Observable
 */function share(){return multicast_1.multicast.call(this,shareSubjectFactory).refCount();}exports.share=share;;//# sourceMappingURL=share.js.map

/***/ }),
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var shareReplay_1=__webpack_require__(603);Observable_1.Observable.prototype.shareReplay=shareReplay_1.shareReplay;//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 603 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var multicast_1=__webpack_require__(32);var ReplaySubject_1=__webpack_require__(72);/**
 * @method shareReplay
 * @owner Observable
 */function shareReplay(bufferSize,windowTime,scheduler){var subject;var connectable=multicast_1.multicast.call(this,function shareReplaySubjectFactory(){if(this._isComplete){return subject;}else{return subject=new ReplaySubject_1.ReplaySubject(bufferSize,windowTime,scheduler);}});return connectable.refCount();}exports.shareReplay=shareReplay;;//# sourceMappingURL=shareReplay.js.map

/***/ }),
/* 604 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var single_1=__webpack_require__(605);Observable_1.Observable.prototype.single=single_1.single;//# sourceMappingURL=single.js.map

/***/ }),
/* 605 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var EmptyError_1=__webpack_require__(73);/**
 * Returns an Observable that emits the single item emitted by the source Observable that matches a specified
 * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no
 * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.
 *
 * <img src="./img/single.png" width="100%">
 *
 * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`
 * callback if the Observable completes before any `next` notification was sent.
 * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches
 * the predicate.
 .
 * @method single
 * @owner Observable
 */function single(predicate){return this.lift(new SingleOperator(predicate,this));}exports.single=single;var SingleOperator=function(){function SingleOperator(predicate,source){this.predicate=predicate;this.source=source;}SingleOperator.prototype.call=function(subscriber,source){return source.subscribe(new SingleSubscriber(subscriber,this.predicate,this.source));};return SingleOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SingleSubscriber=function(_super){__extends(SingleSubscriber,_super);function SingleSubscriber(destination,predicate,source){_super.call(this,destination);this.predicate=predicate;this.source=source;this.seenValue=false;this.index=0;}SingleSubscriber.prototype.applySingleValue=function(value){if(this.seenValue){this.destination.error('Sequence contains more than one element');}else{this.seenValue=true;this.singleValue=value;}};SingleSubscriber.prototype._next=function(value){var index=this.index++;if(this.predicate){this.tryNext(value,index);}else{this.applySingleValue(value);}};SingleSubscriber.prototype.tryNext=function(value,index){try{if(this.predicate(value,index,this.source)){this.applySingleValue(value);}}catch(err){this.destination.error(err);}};SingleSubscriber.prototype._complete=function(){var destination=this.destination;if(this.index>0){destination.next(this.seenValue?this.singleValue:undefined);destination.complete();}else{destination.error(new EmptyError_1.EmptyError());}};return SingleSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=single.js.map

/***/ }),
/* 606 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var skip_1=__webpack_require__(607);Observable_1.Observable.prototype.skip=skip_1.skip;//# sourceMappingURL=skip.js.map

/***/ }),
/* 607 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Returns an Observable that skips the first `count` items emitted by the source Observable.
 *
 * <img src="./img/skip.png" width="100%">
 *
 * @param {Number} count - The number of times, items emitted by source Observable should be skipped.
 * @return {Observable} An Observable that skips values emitted by the source Observable.
 *
 * @method skip
 * @owner Observable
 */function skip(count){return this.lift(new SkipOperator(count));}exports.skip=skip;var SkipOperator=function(){function SkipOperator(total){this.total=total;}SkipOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipSubscriber(subscriber,this.total));};return SkipOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SkipSubscriber=function(_super){__extends(SkipSubscriber,_super);function SkipSubscriber(destination,total){_super.call(this,destination);this.total=total;this.count=0;}SkipSubscriber.prototype._next=function(x){if(++this.count>this.total){this.destination.next(x);}};return SkipSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=skip.js.map

/***/ }),
/* 608 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var skipLast_1=__webpack_require__(609);Observable_1.Observable.prototype.skipLast=skipLast_1.skipLast;//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 609 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var ArgumentOutOfRangeError_1=__webpack_require__(46);/**
 * Skip the last `count` values emitted by the source Observable.
 *
 * <img src="./img/skipLast.png" width="100%">
 *
 * `skipLast` returns an Observable that accumulates a queue with a length
 * enough to store the first `count` values. As more values are received,
 * values are taken from the front of the queue and produced on the result
 * sequence. This causes values to be delayed.
 *
 * @example <caption>Skip the last 2 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 5);
 * var skipLastTwo = many.skipLast(2);
 * skipLastTwo.subscribe(x => console.log(x));
 *
 * // Results in:
 * // 1 2 3
 *
 * @see {@link skip}
 * @see {@link skipUntil}
 * @see {@link skipWhile}
 * @see {@link take}
 *
 * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws
 * ArgumentOutOrRangeError if `i < 0`.
 *
 * @param {number} count Number of elements to skip from the end of the source Observable.
 * @returns {Observable<T>} An Observable that skips the last count values
 * emitted by the source Observable.
 * @method skipLast
 * @owner Observable
 */function skipLast(count){return this.lift(new SkipLastOperator(count));}exports.skipLast=skipLast;var SkipLastOperator=function(){function SkipLastOperator(_skipCount){this._skipCount=_skipCount;if(this._skipCount<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}}SkipLastOperator.prototype.call=function(subscriber,source){if(this._skipCount===0){// If we don't want to skip any values then just subscribe
// to Subscriber without any further logic.
return source.subscribe(new Subscriber_1.Subscriber(subscriber));}else{return source.subscribe(new SkipLastSubscriber(subscriber,this._skipCount));}};return SkipLastOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SkipLastSubscriber=function(_super){__extends(SkipLastSubscriber,_super);function SkipLastSubscriber(destination,_skipCount){_super.call(this,destination);this._skipCount=_skipCount;this._count=0;this._ring=new Array(_skipCount);}SkipLastSubscriber.prototype._next=function(value){var skipCount=this._skipCount;var count=this._count++;if(count<skipCount){this._ring[count]=value;}else{var currentIndex=count%skipCount;var ring=this._ring;var oldValue=ring[currentIndex];ring[currentIndex]=value;this.destination.next(oldValue);}};return SkipLastSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=skipLast.js.map

/***/ }),
/* 610 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var skipUntil_1=__webpack_require__(611);Observable_1.Observable.prototype.skipUntil=skipUntil_1.skipUntil;//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 611 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.
 *
 * <img src="./img/skipUntil.png" width="100%">
 *
 * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to
 * be mirrored by the resulting Observable.
 * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits
 * an item, then emits the remaining items.
 * @method skipUntil
 * @owner Observable
 */function skipUntil(notifier){return this.lift(new SkipUntilOperator(notifier));}exports.skipUntil=skipUntil;var SkipUntilOperator=function(){function SkipUntilOperator(notifier){this.notifier=notifier;}SkipUntilOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipUntilSubscriber(subscriber,this.notifier));};return SkipUntilOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SkipUntilSubscriber=function(_super){__extends(SkipUntilSubscriber,_super);function SkipUntilSubscriber(destination,notifier){_super.call(this,destination);this.hasValue=false;this.isInnerStopped=false;this.add(subscribeToResult_1.subscribeToResult(this,notifier));}SkipUntilSubscriber.prototype._next=function(value){if(this.hasValue){_super.prototype._next.call(this,value);}};SkipUntilSubscriber.prototype._complete=function(){if(this.isInnerStopped){_super.prototype._complete.call(this);}else{this.unsubscribe();}};SkipUntilSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.hasValue=true;};SkipUntilSubscriber.prototype.notifyComplete=function(){this.isInnerStopped=true;if(this.isStopped){_super.prototype._complete.call(this);}};return SkipUntilSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=skipUntil.js.map

/***/ }),
/* 612 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var skipWhile_1=__webpack_require__(613);Observable_1.Observable.prototype.skipWhile=skipWhile_1.skipWhile;//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 613 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds
 * true, but emits all further source items as soon as the condition becomes false.
 *
 * <img src="./img/skipWhile.png" width="100%">
 *
 * @param {Function} predicate - A function to test each item emitted from the source Observable.
 * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the
 * specified predicate becomes false.
 * @method skipWhile
 * @owner Observable
 */function skipWhile(predicate){return this.lift(new SkipWhileOperator(predicate));}exports.skipWhile=skipWhile;var SkipWhileOperator=function(){function SkipWhileOperator(predicate){this.predicate=predicate;}SkipWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new SkipWhileSubscriber(subscriber,this.predicate));};return SkipWhileOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SkipWhileSubscriber=function(_super){__extends(SkipWhileSubscriber,_super);function SkipWhileSubscriber(destination,predicate){_super.call(this,destination);this.predicate=predicate;this.skipping=true;this.index=0;}SkipWhileSubscriber.prototype._next=function(value){var destination=this.destination;if(this.skipping){this.tryCallPredicate(value);}if(!this.skipping){destination.next(value);}};SkipWhileSubscriber.prototype.tryCallPredicate=function(value){try{var result=this.predicate(value,this.index++);this.skipping=Boolean(result);}catch(err){this.destination.error(err);}};return SkipWhileSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=skipWhile.js.map

/***/ }),
/* 614 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var startWith_1=__webpack_require__(615);Observable_1.Observable.prototype.startWith=startWith_1.startWith;//# sourceMappingURL=startWith.js.map

/***/ }),
/* 615 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var ArrayObservable_1=__webpack_require__(26);var ScalarObservable_1=__webpack_require__(95);var EmptyObservable_1=__webpack_require__(29);var concat_1=__webpack_require__(97);var isScheduler_1=__webpack_require__(25);/* tslint:enable:max-line-length *//**
 * Returns an Observable that emits the items you specify as arguments before it begins to emit
 * items emitted by the source Observable.
 *
 * <img src="./img/startWith.png" width="100%">
 *
 * @param {...T} values - Items you want the modified Observable to emit first.
 * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling
 * the emissions of the `next` notifications.
 * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items
 * emitted by the source Observable.
 * @method startWith
 * @owner Observable
 */function startWith(){var array=[];for(var _i=0;_i<arguments.length;_i++){array[_i-0]=arguments[_i];}var scheduler=array[array.length-1];if(isScheduler_1.isScheduler(scheduler)){array.pop();}else{scheduler=null;}var len=array.length;if(len===1){return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0],scheduler),this);}else if(len>1){return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array,scheduler),this);}else{return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler),this);}}exports.startWith=startWith;//# sourceMappingURL=startWith.js.map

/***/ }),
/* 616 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var subscribeOn_1=__webpack_require__(617);Observable_1.Observable.prototype.subscribeOn=subscribeOn_1.subscribeOn;//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 617 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var SubscribeOnObservable_1=__webpack_require__(618);/**
 * Asynchronously subscribes Observers to this Observable on the specified IScheduler.
 *
 * <img src="./img/subscribeOn.png" width="100%">
 *
 * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.
 * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.
 .
 * @method subscribeOn
 * @owner Observable
 */function subscribeOn(scheduler,delay){if(delay===void 0){delay=0;}return this.lift(new SubscribeOnOperator(scheduler,delay));}exports.subscribeOn=subscribeOn;var SubscribeOnOperator=function(){function SubscribeOnOperator(scheduler,delay){this.scheduler=scheduler;this.delay=delay;}SubscribeOnOperator.prototype.call=function(subscriber,source){return new SubscribeOnObservable_1.SubscribeOnObservable(source,this.delay,this.scheduler).subscribe(subscriber);};return SubscribeOnOperator;}();//# sourceMappingURL=subscribeOn.js.map

/***/ }),
/* 618 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var asap_1=__webpack_require__(180);var isNumeric_1=__webpack_require__(70);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @extends {Ignored}
 * @hide true
 */var SubscribeOnObservable=function(_super){__extends(SubscribeOnObservable,_super);function SubscribeOnObservable(source,delayTime,scheduler){if(delayTime===void 0){delayTime=0;}if(scheduler===void 0){scheduler=asap_1.asap;}_super.call(this);this.source=source;this.delayTime=delayTime;this.scheduler=scheduler;if(!isNumeric_1.isNumeric(delayTime)||delayTime<0){this.delayTime=0;}if(!scheduler||typeof scheduler.schedule!=='function'){this.scheduler=asap_1.asap;}}SubscribeOnObservable.create=function(source,delay,scheduler){if(delay===void 0){delay=0;}if(scheduler===void 0){scheduler=asap_1.asap;}return new SubscribeOnObservable(source,delay,scheduler);};SubscribeOnObservable.dispatch=function(arg){var source=arg.source,subscriber=arg.subscriber;return this.add(source.subscribe(subscriber));};SubscribeOnObservable.prototype._subscribe=function(subscriber){var delay=this.delayTime;var source=this.source;var scheduler=this.scheduler;return scheduler.schedule(SubscribeOnObservable.dispatch,delay,{source:source,subscriber:subscriber});};return SubscribeOnObservable;}(Observable_1.Observable);exports.SubscribeOnObservable=SubscribeOnObservable;//# sourceMappingURL=SubscribeOnObservable.js.map

/***/ }),
/* 619 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Immediate_1=__webpack_require__(620);var AsyncAction_1=__webpack_require__(44);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var AsapAction=function(_super){__extends(AsapAction,_super);function AsapAction(scheduler,work){_super.call(this,scheduler,work);this.scheduler=scheduler;this.work=work;}AsapAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}// If delay is greater than 0, request as an async action.
if(delay!==null&&delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}// Push the action to the end of the scheduler queue.
scheduler.actions.push(this);// If a microtask has already been scheduled, don't schedule another
// one. If a microtask hasn't been scheduled yet, schedule one now. Return
// the current scheduled microtask id.
return scheduler.scheduled||(scheduler.scheduled=Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler,null)));};AsapAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}// If delay exists and is greater than 0, or if the delay is null (the
// action wasn't rescheduled) but was originally scheduled as an async
// action, then recycle as an async action.
if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);}// If the scheduler queue is empty, cancel the requested microtask and
// set the scheduled flag to undefined so the next AsapAction will schedule
// its own.
if(scheduler.actions.length===0){Immediate_1.Immediate.clearImmediate(id);scheduler.scheduled=undefined;}// Return undefined so the action knows to request a new async id if it's rescheduled.
return undefined;};return AsapAction;}(AsyncAction_1.AsyncAction);exports.AsapAction=AsapAction;//# sourceMappingURL=AsapAction.js.map

/***/ }),
/* 620 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(clearImmediate, setImmediate) {/**
Some credit for this helper goes to http://github.com/YuzuJS/setImmediate
*/var root_1=__webpack_require__(12);var ImmediateDefinition=function(){function ImmediateDefinition(root){this.root=root;if(root.setImmediate&&typeof root.setImmediate==='function'){this.setImmediate=root.setImmediate.bind(root);this.clearImmediate=root.clearImmediate.bind(root);}else{this.nextHandle=1;this.tasksByHandle={};this.currentlyRunningATask=false;// Don't get fooled by e.g. browserify environments.
if(this.canUseProcessNextTick()){// For Node.js before 0.9
this.setImmediate=this.createProcessNextTickSetImmediate();}else if(this.canUsePostMessage()){// For non-IE10 modern browsers
this.setImmediate=this.createPostMessageSetImmediate();}else if(this.canUseMessageChannel()){// For web workers, where supported
this.setImmediate=this.createMessageChannelSetImmediate();}else if(this.canUseReadyStateChange()){// For IE 6–8
this.setImmediate=this.createReadyStateChangeSetImmediate();}else{// For older browsers
this.setImmediate=this.createSetTimeoutSetImmediate();}var ci=function clearImmediate(handle){delete clearImmediate.instance.tasksByHandle[handle];};ci.instance=this;this.clearImmediate=ci;}}ImmediateDefinition.prototype.identify=function(o){return this.root.Object.prototype.toString.call(o);};ImmediateDefinition.prototype.canUseProcessNextTick=function(){return this.identify(this.root.process)==='[object process]';};ImmediateDefinition.prototype.canUseMessageChannel=function(){return Boolean(this.root.MessageChannel);};ImmediateDefinition.prototype.canUseReadyStateChange=function(){var document=this.root.document;return Boolean(document&&'onreadystatechange'in document.createElement('script'));};ImmediateDefinition.prototype.canUsePostMessage=function(){var root=this.root;// The test against `importScripts` prevents this implementation from being installed inside a web worker,
// where `root.postMessage` means something completely different and can't be used for this purpose.
if(root.postMessage&&!root.importScripts){var postMessageIsAsynchronous_1=true;var oldOnMessage=root.onmessage;root.onmessage=function(){postMessageIsAsynchronous_1=false;};root.postMessage('','*');root.onmessage=oldOnMessage;return postMessageIsAsynchronous_1;}return false;};// This function accepts the same arguments as setImmediate, but
// returns a function that requires no arguments.
ImmediateDefinition.prototype.partiallyApplied=function(handler){var args=[];for(var _i=1;_i<arguments.length;_i++){args[_i-1]=arguments[_i];}var fn=function result(){var _a=result,handler=_a.handler,args=_a.args;if(typeof handler==='function'){handler.apply(undefined,args);}else{new Function(''+handler)();}};fn.handler=handler;fn.args=args;return fn;};ImmediateDefinition.prototype.addFromSetImmediateArguments=function(args){this.tasksByHandle[this.nextHandle]=this.partiallyApplied.apply(undefined,args);return this.nextHandle++;};ImmediateDefinition.prototype.createProcessNextTickSetImmediate=function(){var fn=function setImmediate(){var instance=setImmediate.instance;var handle=instance.addFromSetImmediateArguments(arguments);instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent,handle));return handle;};fn.instance=this;return fn;};ImmediateDefinition.prototype.createPostMessageSetImmediate=function(){// Installs an event handler on `global` for the `message` event: see
// * https://developer.mozilla.org/en/DOM/window.postMessage
// * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
var root=this.root;var messagePrefix='setImmediate$'+root.Math.random()+'$';var onGlobalMessage=function globalMessageHandler(event){var instance=globalMessageHandler.instance;if(event.source===root&&typeof event.data==='string'&&event.data.indexOf(messagePrefix)===0){instance.runIfPresent(+event.data.slice(messagePrefix.length));}};onGlobalMessage.instance=this;root.addEventListener('message',onGlobalMessage,false);var fn=function setImmediate(){var _a=setImmediate,messagePrefix=_a.messagePrefix,instance=_a.instance;var handle=instance.addFromSetImmediateArguments(arguments);instance.root.postMessage(messagePrefix+handle,'*');return handle;};fn.instance=this;fn.messagePrefix=messagePrefix;return fn;};ImmediateDefinition.prototype.runIfPresent=function(handle){// From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'
// So if we're currently running a task, we'll need to delay this invocation.
if(this.currentlyRunningATask){// Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
// 'too much recursion' error.
this.root.setTimeout(this.partiallyApplied(this.runIfPresent,handle),0);}else{var task=this.tasksByHandle[handle];if(task){this.currentlyRunningATask=true;try{task();}finally{this.clearImmediate(handle);this.currentlyRunningATask=false;}}}};ImmediateDefinition.prototype.createMessageChannelSetImmediate=function(){var _this=this;var channel=new this.root.MessageChannel();channel.port1.onmessage=function(event){var handle=event.data;_this.runIfPresent(handle);};var fn=function setImmediate(){var _a=setImmediate,channel=_a.channel,instance=_a.instance;var handle=instance.addFromSetImmediateArguments(arguments);channel.port2.postMessage(handle);return handle;};fn.channel=channel;fn.instance=this;return fn;};ImmediateDefinition.prototype.createReadyStateChangeSetImmediate=function(){var fn=function setImmediate(){var instance=setImmediate.instance;var root=instance.root;var doc=root.document;var html=doc.documentElement;var handle=instance.addFromSetImmediateArguments(arguments);// Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
// into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
var script=doc.createElement('script');script.onreadystatechange=function(){instance.runIfPresent(handle);script.onreadystatechange=null;html.removeChild(script);script=null;};html.appendChild(script);return handle;};fn.instance=this;return fn;};ImmediateDefinition.prototype.createSetTimeoutSetImmediate=function(){var fn=function setImmediate(){var instance=setImmediate.instance;var handle=instance.addFromSetImmediateArguments(arguments);instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent,handle),0);return handle;};fn.instance=this;return fn;};return ImmediateDefinition;}();exports.ImmediateDefinition=ImmediateDefinition;exports.Immediate=new ImmediateDefinition(root_1.root);//# sourceMappingURL=Immediate.js.map
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(181).clearImmediate, __webpack_require__(181).setImmediate))

/***/ }),
/* 621 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {(function(global,undefined){"use strict";if(global.setImmediate){return;}var nextHandle=1;// Spec says greater than zero
var tasksByHandle={};var currentlyRunningATask=false;var doc=global.document;var registerImmediate;function setImmediate(callback){// Callback can either be a function or a string
if(typeof callback!=="function"){callback=new Function(""+callback);}// Copy function arguments
var args=new Array(arguments.length-1);for(var i=0;i<args.length;i++){args[i]=arguments[i+1];}// Store and register the task
var task={callback:callback,args:args};tasksByHandle[nextHandle]=task;registerImmediate(nextHandle);return nextHandle++;}function clearImmediate(handle){delete tasksByHandle[handle];}function run(task){var callback=task.callback;var args=task.args;switch(args.length){case 0:callback();break;case 1:callback(args[0]);break;case 2:callback(args[0],args[1]);break;case 3:callback(args[0],args[1],args[2]);break;default:callback.apply(undefined,args);break;}}function runIfPresent(handle){// From the spec: "Wait until any invocations of this algorithm started before this one have completed."
// So if we're currently running a task, we'll need to delay this invocation.
if(currentlyRunningATask){// Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
// "too much recursion" error.
setTimeout(runIfPresent,0,handle);}else{var task=tasksByHandle[handle];if(task){currentlyRunningATask=true;try{run(task);}finally{clearImmediate(handle);currentlyRunningATask=false;}}}}function installNextTickImplementation(){registerImmediate=function registerImmediate(handle){process.nextTick(function(){runIfPresent(handle);});};}function canUsePostMessage(){// The test against `importScripts` prevents this implementation from being installed inside a web worker,
// where `global.postMessage` means something completely different and can't be used for this purpose.
if(global.postMessage&&!global.importScripts){var postMessageIsAsynchronous=true;var oldOnMessage=global.onmessage;global.onmessage=function(){postMessageIsAsynchronous=false;};global.postMessage("","*");global.onmessage=oldOnMessage;return postMessageIsAsynchronous;}}function installPostMessageImplementation(){// Installs an event handler on `global` for the `message` event: see
// * https://developer.mozilla.org/en/DOM/window.postMessage
// * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages
var messagePrefix="setImmediate$"+Math.random()+"$";var onGlobalMessage=function onGlobalMessage(event){if(event.source===global&&typeof event.data==="string"&&event.data.indexOf(messagePrefix)===0){runIfPresent(+event.data.slice(messagePrefix.length));}};if(global.addEventListener){global.addEventListener("message",onGlobalMessage,false);}else{global.attachEvent("onmessage",onGlobalMessage);}registerImmediate=function registerImmediate(handle){global.postMessage(messagePrefix+handle,"*");};}function installMessageChannelImplementation(){var channel=new MessageChannel();channel.port1.onmessage=function(event){var handle=event.data;runIfPresent(handle);};registerImmediate=function registerImmediate(handle){channel.port2.postMessage(handle);};}function installReadyStateChangeImplementation(){var html=doc.documentElement;registerImmediate=function registerImmediate(handle){// Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
// into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
var script=doc.createElement("script");script.onreadystatechange=function(){runIfPresent(handle);script.onreadystatechange=null;html.removeChild(script);script=null;};html.appendChild(script);};}function installSetTimeoutImplementation(){registerImmediate=function registerImmediate(handle){setTimeout(runIfPresent,0,handle);};}// If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
var attachTo=Object.getPrototypeOf&&Object.getPrototypeOf(global);attachTo=attachTo&&attachTo.setTimeout?attachTo:global;// Don't get fooled by e.g. browserify environments.
if({}.toString.call(global.process)==="[object process]"){// For Node.js before 0.9
installNextTickImplementation();}else if(canUsePostMessage()){// For non-IE10 modern browsers
installPostMessageImplementation();}else if(global.MessageChannel){// For web workers, where supported
installMessageChannelImplementation();}else if(doc&&"onreadystatechange"in doc.createElement("script")){// For IE 6–8
installReadyStateChangeImplementation();}else{// For older browsers
installSetTimeoutImplementation();}attachTo.setImmediate=setImmediate;attachTo.clearImmediate=clearImmediate;})(typeof self==="undefined"?typeof global==="undefined"?undefined:global:self);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(94), __webpack_require__(622)))

/***/ }),
/* 622 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// shim for using process in browser
var process=module.exports={};// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error('setTimeout has not been defined');}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations
return setTimeout(fun,0);}// if setTimeout wasn't available but was latter defined
if((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
return cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
return cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations
return clearTimeout(marker);}// if clearTimeout wasn't available but was latter defined
if((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness
return cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
return cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
// Some versions of I.E. have different rules for clearTimeout vs setTimeout
return cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};// v8 likes predictible objects
function Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';// empty string to avoid regexp issues
process.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[];};process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return'/';};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};

/***/ }),
/* 623 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var AsyncScheduler_1=__webpack_require__(45);var AsapScheduler=function(_super){__extends(AsapScheduler,_super);function AsapScheduler(){_super.apply(this,arguments);}AsapScheduler.prototype.flush=function(action){this.active=true;this.scheduled=undefined;var actions=this.actions;var error;var index=-1;var count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay)){break;}}while(++index<count&&(action=actions.shift()));this.active=false;if(error){while(++index<count&&(action=actions.shift())){action.unsubscribe();}throw error;}};return AsapScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.AsapScheduler=AsapScheduler;//# sourceMappingURL=AsapScheduler.js.map

/***/ }),
/* 624 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var switch_1=__webpack_require__(625);Observable_1.Observable.prototype.switch=switch_1._switch;Observable_1.Observable.prototype._switch=switch_1._switch;//# sourceMappingURL=switch.js.map

/***/ }),
/* 625 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Converts a higher-order Observable into a first-order Observable by
 * subscribing to only the most recently emitted of those inner Observables.
 *
 * <span class="informal">Flattens an Observable-of-Observables by dropping the
 * previous inner Observable once a new one appears.</span>
 *
 * <img src="./img/switch.png" width="100%">
 *
 * `switch` subscribes to an Observable that emits Observables, also known as a
 * higher-order Observable. Each time it observes one of these emitted inner
 * Observables, the output Observable subscribes to the inner Observable and
 * begins emitting the items emitted by that. So far, it behaves
 * like {@link mergeAll}. However, when a new inner Observable is emitted,
 * `switch` unsubscribes from the earlier-emitted inner Observable and
 * subscribes to the new inner Observable and begins emitting items from it. It
 * continues to behave like this for subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * // Each click event is mapped to an Observable that ticks every second
 * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));
 * var switched = higherOrder.switch();
 * // The outcome is that `switched` is essentially a timer that restarts
 * // on every click. The interval Observables from older clicks do not merge
 * // with the current interval Observable.
 * switched.subscribe(x => console.log(x));
 *
 * @see {@link combineAll}
 * @see {@link concatAll}
 * @see {@link exhaust}
 * @see {@link mergeAll}
 * @see {@link switchMap}
 * @see {@link switchMapTo}
 * @see {@link zipAll}
 *
 * @return {Observable<T>} An Observable that emits the items emitted by the
 * Observable most recently emitted by the source Observable.
 * @method switch
 * @name switch
 * @owner Observable
 */function _switch(){return this.lift(new SwitchOperator());}exports._switch=_switch;var SwitchOperator=function(){function SwitchOperator(){}SwitchOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchSubscriber(subscriber));};return SwitchOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SwitchSubscriber=function(_super){__extends(SwitchSubscriber,_super);function SwitchSubscriber(destination){_super.call(this,destination);this.active=0;this.hasCompleted=false;}SwitchSubscriber.prototype._next=function(value){this.unsubscribeInner();this.active++;this.add(this.innerSubscription=subscribeToResult_1.subscribeToResult(this,value));};SwitchSubscriber.prototype._complete=function(){this.hasCompleted=true;if(this.active===0){this.destination.complete();}};SwitchSubscriber.prototype.unsubscribeInner=function(){this.active=this.active>0?this.active-1:0;var innerSubscription=this.innerSubscription;if(innerSubscription){innerSubscription.unsubscribe();this.remove(innerSubscription);}};SwitchSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.destination.next(innerValue);};SwitchSubscriber.prototype.notifyError=function(err){this.destination.error(err);};SwitchSubscriber.prototype.notifyComplete=function(){this.unsubscribeInner();if(this.hasCompleted&&this.active===0){this.destination.complete();}};return SwitchSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=switch.js.map

/***/ }),
/* 626 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var switchMap_1=__webpack_require__(627);Observable_1.Observable.prototype.switchMap=switchMap_1.switchMap;//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 627 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * Projects each source value to an Observable which is merged in the output
 * Observable, emitting values only from the most recently projected Observable.
 *
 * <span class="informal">Maps each value to an Observable, then flattens all of
 * these inner Observables using {@link switch}.</span>
 *
 * <img src="./img/switchMap.png" width="100%">
 *
 * Returns an Observable that emits items based on applying a function that you
 * supply to each item emitted by the source Observable, where that function
 * returns an (so-called "inner") Observable. Each time it observes one of these
 * inner Observables, the output Observable begins emitting the items emitted by
 * that inner Observable. When a new inner Observable is emitted, `switchMap`
 * stops emitting items from the earlier-emitted inner Observable and begins
 * emitting items from the new one. It continues to behave like this for
 * subsequent inner Observables.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMap}
 * @see {@link exhaustMap}
 * @see {@link mergeMap}
 * @see {@link switch}
 * @see {@link switchMapTo}
 *
 * @param {function(value: T, ?index: number): ObservableInput} project A function
 * that, when applied to an item emitted by the source Observable, returns an
 * Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits the result of applying the
 * projection function (and the optional `resultSelector`) to each item emitted
 * by the source Observable and taking only the values from the most recently
 * projected inner Observable.
 * @method switchMap
 * @owner Observable
 */function switchMap(project,resultSelector){return this.lift(new SwitchMapOperator(project,resultSelector));}exports.switchMap=switchMap;var SwitchMapOperator=function(){function SwitchMapOperator(project,resultSelector){this.project=project;this.resultSelector=resultSelector;}SwitchMapOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchMapSubscriber(subscriber,this.project,this.resultSelector));};return SwitchMapOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SwitchMapSubscriber=function(_super){__extends(SwitchMapSubscriber,_super);function SwitchMapSubscriber(destination,project,resultSelector){_super.call(this,destination);this.project=project;this.resultSelector=resultSelector;this.index=0;}SwitchMapSubscriber.prototype._next=function(value){var result;var index=this.index++;try{result=this.project(value,index);}catch(error){this.destination.error(error);return;}this._innerSub(result,value,index);};SwitchMapSubscriber.prototype._innerSub=function(result,value,index){var innerSubscription=this.innerSubscription;if(innerSubscription){innerSubscription.unsubscribe();}this.add(this.innerSubscription=subscribeToResult_1.subscribeToResult(this,result,value,index));};SwitchMapSubscriber.prototype._complete=function(){var innerSubscription=this.innerSubscription;if(!innerSubscription||innerSubscription.closed){_super.prototype._complete.call(this);}};SwitchMapSubscriber.prototype._unsubscribe=function(){this.innerSubscription=null;};SwitchMapSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub);this.innerSubscription=null;if(this.isStopped){_super.prototype._complete.call(this);}};SwitchMapSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(this.resultSelector){this._tryNotifyNext(outerValue,innerValue,outerIndex,innerIndex);}else{this.destination.next(innerValue);}};SwitchMapSubscriber.prototype._tryNotifyNext=function(outerValue,innerValue,outerIndex,innerIndex){var result;try{result=this.resultSelector(outerValue,innerValue,outerIndex,innerIndex);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return SwitchMapSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=switchMap.js.map

/***/ }),
/* 628 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var switchMapTo_1=__webpack_require__(629);Observable_1.Observable.prototype.switchMapTo=switchMapTo_1.switchMapTo;//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 629 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * Projects each source value to the same Observable which is flattened multiple
 * times with {@link switch} in the output Observable.
 *
 * <span class="informal">It's like {@link switchMap}, but maps each value
 * always to the same inner Observable.</span>
 *
 * <img src="./img/switchMapTo.png" width="100%">
 *
 * Maps each source value to the given Observable `innerObservable` regardless
 * of the source value, and then flattens those resulting Observables into one
 * single Observable, which is the output Observable. The output Observables
 * emits values only from the most recently emitted instance of
 * `innerObservable`.
 *
 * @example <caption>Rerun an interval Observable on every click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.switchMapTo(Rx.Observable.interval(1000));
 * result.subscribe(x => console.log(x));
 *
 * @see {@link concatMapTo}
 * @see {@link switch}
 * @see {@link switchMap}
 * @see {@link mergeMapTo}
 *
 * @param {ObservableInput} innerObservable An Observable to replace each value from
 * the source Observable.
 * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]
 * A function to produce the value on the output Observable based on the values
 * and the indices of the source (outer) emission and the inner Observable
 * emission. The arguments passed to this function are:
 * - `outerValue`: the value that came from the source
 * - `innerValue`: the value that came from the projected Observable
 * - `outerIndex`: the "index" of the value that came from the source
 * - `innerIndex`: the "index" of the value from the projected Observable
 * @return {Observable} An Observable that emits items from the given
 * `innerObservable` (and optionally transformed through `resultSelector`) every
 * time a value is emitted on the source Observable, and taking only the values
 * from the most recently projected inner Observable.
 * @method switchMapTo
 * @owner Observable
 */function switchMapTo(innerObservable,resultSelector){return this.lift(new SwitchMapToOperator(innerObservable,resultSelector));}exports.switchMapTo=switchMapTo;var SwitchMapToOperator=function(){function SwitchMapToOperator(observable,resultSelector){this.observable=observable;this.resultSelector=resultSelector;}SwitchMapToOperator.prototype.call=function(subscriber,source){return source.subscribe(new SwitchMapToSubscriber(subscriber,this.observable,this.resultSelector));};return SwitchMapToOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var SwitchMapToSubscriber=function(_super){__extends(SwitchMapToSubscriber,_super);function SwitchMapToSubscriber(destination,inner,resultSelector){_super.call(this,destination);this.inner=inner;this.resultSelector=resultSelector;this.index=0;}SwitchMapToSubscriber.prototype._next=function(value){var innerSubscription=this.innerSubscription;if(innerSubscription){innerSubscription.unsubscribe();}this.add(this.innerSubscription=subscribeToResult_1.subscribeToResult(this,this.inner,value,this.index++));};SwitchMapToSubscriber.prototype._complete=function(){var innerSubscription=this.innerSubscription;if(!innerSubscription||innerSubscription.closed){_super.prototype._complete.call(this);}};SwitchMapToSubscriber.prototype._unsubscribe=function(){this.innerSubscription=null;};SwitchMapToSubscriber.prototype.notifyComplete=function(innerSub){this.remove(innerSub);this.innerSubscription=null;if(this.isStopped){_super.prototype._complete.call(this);}};SwitchMapToSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;if(resultSelector){this.tryResultSelector(outerValue,innerValue,outerIndex,innerIndex);}else{destination.next(innerValue);}};SwitchMapToSubscriber.prototype.tryResultSelector=function(outerValue,innerValue,outerIndex,innerIndex){var _a=this,resultSelector=_a.resultSelector,destination=_a.destination;var result;try{result=resultSelector(outerValue,innerValue,outerIndex,innerIndex);}catch(err){destination.error(err);return;}destination.next(result);};return SwitchMapToSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=switchMapTo.js.map

/***/ }),
/* 630 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var take_1=__webpack_require__(631);Observable_1.Observable.prototype.take=take_1.take;//# sourceMappingURL=take.js.map

/***/ }),
/* 631 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var ArgumentOutOfRangeError_1=__webpack_require__(46);var EmptyObservable_1=__webpack_require__(29);/**
 * Emits only the first `count` values emitted by the source Observable.
 *
 * <span class="informal">Takes the first `count` values from the source, then
 * completes.</span>
 *
 * <img src="./img/take.png" width="100%">
 *
 * `take` returns an Observable that emits only the first `count` values emitted
 * by the source Observable. If the source emits fewer than `count` values then
 * all of its values are emitted. After that, it completes, regardless if the
 * source completes.
 *
 * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>
 * var interval = Rx.Observable.interval(1000);
 * var five = interval.take(5);
 * five.subscribe(x => console.log(x));
 *
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of `next` values to emit.
 * @return {Observable<T>} An Observable that emits only the first `count`
 * values emitted by the source Observable, or all of the values from the source
 * if the source emits fewer than `count` values.
 * @method take
 * @owner Observable
 */function take(count){if(count===0){return new EmptyObservable_1.EmptyObservable();}else{return this.lift(new TakeOperator(count));}}exports.take=take;var TakeOperator=function(){function TakeOperator(total){this.total=total;if(this.total<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}}TakeOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeSubscriber(subscriber,this.total));};return TakeOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var TakeSubscriber=function(_super){__extends(TakeSubscriber,_super);function TakeSubscriber(destination,total){_super.call(this,destination);this.total=total;this.count=0;}TakeSubscriber.prototype._next=function(value){var total=this.total;var count=++this.count;if(count<=total){this.destination.next(value);if(count===total){this.destination.complete();this.unsubscribe();}}};return TakeSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=take.js.map

/***/ }),
/* 632 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var takeLast_1=__webpack_require__(633);Observable_1.Observable.prototype.takeLast=takeLast_1.takeLast;//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 633 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var ArgumentOutOfRangeError_1=__webpack_require__(46);var EmptyObservable_1=__webpack_require__(29);/**
 * Emits only the last `count` values emitted by the source Observable.
 *
 * <span class="informal">Remembers the latest `count` values, then emits those
 * only when the source completes.</span>
 *
 * <img src="./img/takeLast.png" width="100%">
 *
 * `takeLast` returns an Observable that emits at most the last `count` values
 * emitted by the source Observable. If the source emits fewer than `count`
 * values then all of its values are emitted. This operator must wait until the
 * `complete` notification emission from the source in order to emit the `next`
 * values on the output Observable, because otherwise it is impossible to know
 * whether or not more values will be emitted on the source. For this reason,
 * all values are emitted synchronously, followed by the complete notification.
 *
 * @example <caption>Take the last 3 values of an Observable with many values</caption>
 * var many = Rx.Observable.range(1, 100);
 * var lastThree = many.takeLast(3);
 * lastThree.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeUntil}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an
 * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.
 *
 * @param {number} count The maximum number of values to emit from the end of
 * the sequence of values emitted by the source Observable.
 * @return {Observable<T>} An Observable that emits at most the last count
 * values emitted by the source Observable.
 * @method takeLast
 * @owner Observable
 */function takeLast(count){if(count===0){return new EmptyObservable_1.EmptyObservable();}else{return this.lift(new TakeLastOperator(count));}}exports.takeLast=takeLast;var TakeLastOperator=function(){function TakeLastOperator(total){this.total=total;if(this.total<0){throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();}}TakeLastOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeLastSubscriber(subscriber,this.total));};return TakeLastOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var TakeLastSubscriber=function(_super){__extends(TakeLastSubscriber,_super);function TakeLastSubscriber(destination,total){_super.call(this,destination);this.total=total;this.ring=new Array();this.count=0;}TakeLastSubscriber.prototype._next=function(value){var ring=this.ring;var total=this.total;var count=this.count++;if(ring.length<total){ring.push(value);}else{var index=count%total;ring[index]=value;}};TakeLastSubscriber.prototype._complete=function(){var destination=this.destination;var count=this.count;if(count>0){var total=this.count>=this.total?this.total:this.count;var ring=this.ring;for(var i=0;i<total;i++){var idx=count++%total;destination.next(ring[idx]);}}destination.complete();};return TakeLastSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=takeLast.js.map

/***/ }),
/* 634 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var takeUntil_1=__webpack_require__(635);Observable_1.Observable.prototype.takeUntil=takeUntil_1.takeUntil;//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 635 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Emits the values emitted by the source Observable until a `notifier`
 * Observable emits a value.
 *
 * <span class="informal">Lets values pass until a second Observable,
 * `notifier`, emits something. Then, it completes.</span>
 *
 * <img src="./img/takeUntil.png" width="100%">
 *
 * `takeUntil` subscribes and begins mirroring the source Observable. It also
 * monitors a second Observable, `notifier` that you provide. If the `notifier`
 * emits a value or a complete notification, the output Observable stops
 * mirroring the source Observable and completes.
 *
 * @example <caption>Tick every second until the first click happens</caption>
 * var interval = Rx.Observable.interval(1000);
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = interval.takeUntil(clicks);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeWhile}
 * @see {@link skip}
 *
 * @param {Observable} notifier The Observable whose first emitted value will
 * cause the output Observable of `takeUntil` to stop emitting values from the
 * source Observable.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable until such time as `notifier` emits its first value.
 * @method takeUntil
 * @owner Observable
 */function takeUntil(notifier){return this.lift(new TakeUntilOperator(notifier));}exports.takeUntil=takeUntil;var TakeUntilOperator=function(){function TakeUntilOperator(notifier){this.notifier=notifier;}TakeUntilOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeUntilSubscriber(subscriber,this.notifier));};return TakeUntilOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var TakeUntilSubscriber=function(_super){__extends(TakeUntilSubscriber,_super);function TakeUntilSubscriber(destination,notifier){_super.call(this,destination);this.notifier=notifier;this.add(subscribeToResult_1.subscribeToResult(this,notifier));}TakeUntilSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.complete();};TakeUntilSubscriber.prototype.notifyComplete=function(){// noop
};return TakeUntilSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=takeUntil.js.map

/***/ }),
/* 636 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var takeWhile_1=__webpack_require__(637);Observable_1.Observable.prototype.takeWhile=takeWhile_1.takeWhile;//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 637 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * Emits values emitted by the source Observable so long as each value satisfies
 * the given `predicate`, and then completes as soon as this `predicate` is not
 * satisfied.
 *
 * <span class="informal">Takes values from the source only while they pass the
 * condition given. When the first value does not satisfy, it completes.</span>
 *
 * <img src="./img/takeWhile.png" width="100%">
 *
 * `takeWhile` subscribes and begins mirroring the source Observable. Each value
 * emitted on the source is given to the `predicate` function which returns a
 * boolean, representing a condition to be satisfied by the source values. The
 * output Observable emits the source values until such time as the `predicate`
 * returns false, at which point `takeWhile` stops mirroring the source
 * Observable and completes the output Observable.
 *
 * @example <caption>Emit click events only while the clientX property is greater than 200</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.takeWhile(ev => ev.clientX > 200);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link take}
 * @see {@link takeLast}
 * @see {@link takeUntil}
 * @see {@link skip}
 *
 * @param {function(value: T, index: number): boolean} predicate A function that
 * evaluates a value emitted by the source Observable and returns a boolean.
 * Also takes the (zero-based) index as the second argument.
 * @return {Observable<T>} An Observable that emits the values from the source
 * Observable so long as each value satisfies the condition defined by the
 * `predicate`, then completes.
 * @method takeWhile
 * @owner Observable
 */function takeWhile(predicate){return this.lift(new TakeWhileOperator(predicate));}exports.takeWhile=takeWhile;var TakeWhileOperator=function(){function TakeWhileOperator(predicate){this.predicate=predicate;}TakeWhileOperator.prototype.call=function(subscriber,source){return source.subscribe(new TakeWhileSubscriber(subscriber,this.predicate));};return TakeWhileOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var TakeWhileSubscriber=function(_super){__extends(TakeWhileSubscriber,_super);function TakeWhileSubscriber(destination,predicate){_super.call(this,destination);this.predicate=predicate;this.index=0;}TakeWhileSubscriber.prototype._next=function(value){var destination=this.destination;var result;try{result=this.predicate(value,this.index++);}catch(err){destination.error(err);return;}this.nextOrComplete(value,result);};TakeWhileSubscriber.prototype.nextOrComplete=function(value,predicateResult){var destination=this.destination;if(Boolean(predicateResult)){destination.next(value);}else{destination.complete();}};return TakeWhileSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=takeWhile.js.map

/***/ }),
/* 638 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var throttle_1=__webpack_require__(182);Observable_1.Observable.prototype.throttle=throttle_1.throttle;//# sourceMappingURL=throttle.js.map

/***/ }),
/* 639 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var throttleTime_1=__webpack_require__(640);Observable_1.Observable.prototype.throttleTime=throttleTime_1.throttleTime;//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 640 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var async_1=__webpack_require__(16);var throttle_1=__webpack_require__(182);/**
 * Emits a value from the source Observable, then ignores subsequent source
 * values for `duration` milliseconds, then repeats this process.
 *
 * <span class="informal">Lets a value pass, then ignores source values for the
 * next `duration` milliseconds.</span>
 *
 * <img src="./img/throttleTime.png" width="100%">
 *
 * `throttleTime` emits the source Observable values on the output Observable
 * when its internal timer is disabled, and ignores source values when the timer
 * is enabled. Initially, the timer is disabled. As soon as the first source
 * value arrives, it is forwarded to the output Observable, and then the timer
 * is enabled. After `duration` milliseconds (or the time unit determined
 * internally by the optional `scheduler`) has passed, the timer is disabled,
 * and this process repeats for the next source value. Optionally takes a
 * {@link IScheduler} for managing timers.
 *
 * @example <caption>Emit clicks at a rate of at most one click per second</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.throttleTime(1000);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link auditTime}
 * @see {@link debounceTime}
 * @see {@link delay}
 * @see {@link sampleTime}
 * @see {@link throttle}
 *
 * @param {number} duration Time to wait before emitting another value after
 * emitting the last value, measured in milliseconds or the time unit determined
 * internally by the optional `scheduler`.
 * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for
 * managing the timers that handle the throttling.
 * @return {Observable<T>} An Observable that performs the throttle operation to
 * limit the rate of emissions from the source.
 * @method throttleTime
 * @owner Observable
 */function throttleTime(duration,scheduler,config){if(scheduler===void 0){scheduler=async_1.async;}if(config===void 0){config=throttle_1.defaultThrottleConfig;}return this.lift(new ThrottleTimeOperator(duration,scheduler,config.leading,config.trailing));}exports.throttleTime=throttleTime;var ThrottleTimeOperator=function(){function ThrottleTimeOperator(duration,scheduler,leading,trailing){this.duration=duration;this.scheduler=scheduler;this.leading=leading;this.trailing=trailing;}ThrottleTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new ThrottleTimeSubscriber(subscriber,this.duration,this.scheduler,this.leading,this.trailing));};return ThrottleTimeOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ThrottleTimeSubscriber=function(_super){__extends(ThrottleTimeSubscriber,_super);function ThrottleTimeSubscriber(destination,duration,scheduler,leading,trailing){_super.call(this,destination);this.duration=duration;this.scheduler=scheduler;this.leading=leading;this.trailing=trailing;this._hasTrailingValue=false;this._trailingValue=null;}ThrottleTimeSubscriber.prototype._next=function(value){if(this.throttled){if(this.trailing){this._trailingValue=value;this._hasTrailingValue=true;}}else{this.add(this.throttled=this.scheduler.schedule(dispatchNext,this.duration,{subscriber:this}));if(this.leading){this.destination.next(value);}}};ThrottleTimeSubscriber.prototype.clearThrottle=function(){var throttled=this.throttled;if(throttled){if(this.trailing&&this._hasTrailingValue){this.destination.next(this._trailingValue);this._trailingValue=null;this._hasTrailingValue=false;}throttled.unsubscribe();this.remove(throttled);this.throttled=null;}};return ThrottleTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchNext(arg){var subscriber=arg.subscriber;subscriber.clearThrottle();}//# sourceMappingURL=throttleTime.js.map

/***/ }),
/* 641 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var timeInterval_1=__webpack_require__(183);Observable_1.Observable.prototype.timeInterval=timeInterval_1.timeInterval;//# sourceMappingURL=timeInterval.js.map

/***/ }),
/* 642 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var timeout_1=__webpack_require__(643);Observable_1.Observable.prototype.timeout=timeout_1.timeout;//# sourceMappingURL=timeout.js.map

/***/ }),
/* 643 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var async_1=__webpack_require__(16);var isDate_1=__webpack_require__(71);var Subscriber_1=__webpack_require__(2);var TimeoutError_1=__webpack_require__(184);/**
 *
 * Errors if Observable does not emit a value in given time span.
 *
 * <span class="informal">Timeouts on Observable that doesn't emit values fast enough.</span>
 *
 * <img src="./img/timeout.png" width="100%">
 *
 * `timeout` operator accepts as an argument either a number or a Date.
 *
 * If number was provided, it returns an Observable that behaves like a source
 * Observable, unless there is a period of time where there is no value emitted.
 * So if you provide `100` as argument and first value comes after 50ms from
 * the moment of subscription, this value will be simply re-emitted by the resulting
 * Observable. If however after that 100ms passes without a second value being emitted,
 * stream will end with an error and source Observable will be unsubscribed.
 * These checks are performed throughout whole lifecycle of Observable - from the moment
 * it was subscribed to, until it completes or errors itself. Thus every value must be
 * emitted within specified period since previous value.
 *
 * If provided argument was Date, returned Observable behaves differently. It throws
 * if Observable did not complete before provided Date. This means that periods between
 * emission of particular values do not matter in this case. If Observable did not complete
 * before provided Date, source Observable will be unsubscribed. Other than that, resulting
 * stream behaves just as source Observable.
 *
 * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)
 * when returned Observable will check if source stream emitted value or completed.
 *
 * @example <caption>Check if ticks are emitted within certain timespan</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(1100) // Let's use bigger timespan to be safe,
 *                       // since `interval` might fire a bit later then scheduled.
 * .subscribe(
 *     value => console.log(value), // Will emit numbers just as regular `interval` would.
 *     err => console.log(err) // Will never be called.
 * );
 *
 * seconds.timeout(900).subscribe(
 *     value => console.log(value), // Will never be called.
 *     err => console.log(err) // Will emit error before even first value is emitted,
 *                             // since it did not arrive within 900ms period.
 * );
 *
 * @example <caption>Use Date to check if Observable completed</caption>
 * const seconds = Rx.Observable.interval(1000);
 *
 * seconds.timeout(new Date("December 17, 2020 03:24:00"))
 * .subscribe(
 *     value => console.log(value), // Will emit values as regular `interval` would
 *                                  // until December 17, 2020 at 03:24:00.
 *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,
 *                             // since Observable did not complete by then.
 * );
 *
 * @see {@link timeoutWith}
 *
 * @param {number|Date} due Number specifying period within which Observable must emit values
 *                          or Date specifying before when Observable should complete
 * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.
 * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.
 * @method timeout
 * @owner Observable
 */function timeout(due,scheduler){if(scheduler===void 0){scheduler=async_1.async;}var absoluteTimeout=isDate_1.isDate(due);var waitFor=absoluteTimeout?+due-scheduler.now():Math.abs(due);return this.lift(new TimeoutOperator(waitFor,absoluteTimeout,scheduler,new TimeoutError_1.TimeoutError()));}exports.timeout=timeout;var TimeoutOperator=function(){function TimeoutOperator(waitFor,absoluteTimeout,scheduler,errorInstance){this.waitFor=waitFor;this.absoluteTimeout=absoluteTimeout;this.scheduler=scheduler;this.errorInstance=errorInstance;}TimeoutOperator.prototype.call=function(subscriber,source){return source.subscribe(new TimeoutSubscriber(subscriber,this.absoluteTimeout,this.waitFor,this.scheduler,this.errorInstance));};return TimeoutOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var TimeoutSubscriber=function(_super){__extends(TimeoutSubscriber,_super);function TimeoutSubscriber(destination,absoluteTimeout,waitFor,scheduler,errorInstance){_super.call(this,destination);this.absoluteTimeout=absoluteTimeout;this.waitFor=waitFor;this.scheduler=scheduler;this.errorInstance=errorInstance;this.action=null;this.scheduleTimeout();}TimeoutSubscriber.dispatchTimeout=function(subscriber){subscriber.error(subscriber.errorInstance);};TimeoutSubscriber.prototype.scheduleTimeout=function(){var action=this.action;if(action){// Recycle the action if we've already scheduled one. All the production
// Scheduler Actions mutate their state/delay time and return themeselves.
// VirtualActions are immutable, so they create and return a clone. In this
// case, we need to set the action reference to the most recent VirtualAction,
// to ensure that's the one we clone from next time.
this.action=action.schedule(this,this.waitFor);}else{this.add(this.action=this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout,this.waitFor,this));}};TimeoutSubscriber.prototype._next=function(value){if(!this.absoluteTimeout){this.scheduleTimeout();}_super.prototype._next.call(this,value);};TimeoutSubscriber.prototype._unsubscribe=function(){this.action=null;this.scheduler=null;this.errorInstance=null;};return TimeoutSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=timeout.js.map

/***/ }),
/* 644 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var timeoutWith_1=__webpack_require__(645);Observable_1.Observable.prototype.timeoutWith=timeoutWith_1.timeoutWith;//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 645 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var async_1=__webpack_require__(16);var isDate_1=__webpack_require__(71);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * @param due
 * @param withObservable
 * @param scheduler
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method timeoutWith
 * @owner Observable
 */function timeoutWith(due,withObservable,scheduler){if(scheduler===void 0){scheduler=async_1.async;}var absoluteTimeout=isDate_1.isDate(due);var waitFor=absoluteTimeout?+due-scheduler.now():Math.abs(due);return this.lift(new TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler));}exports.timeoutWith=timeoutWith;var TimeoutWithOperator=function(){function TimeoutWithOperator(waitFor,absoluteTimeout,withObservable,scheduler){this.waitFor=waitFor;this.absoluteTimeout=absoluteTimeout;this.withObservable=withObservable;this.scheduler=scheduler;}TimeoutWithOperator.prototype.call=function(subscriber,source){return source.subscribe(new TimeoutWithSubscriber(subscriber,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler));};return TimeoutWithOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var TimeoutWithSubscriber=function(_super){__extends(TimeoutWithSubscriber,_super);function TimeoutWithSubscriber(destination,absoluteTimeout,waitFor,withObservable,scheduler){_super.call(this,destination);this.absoluteTimeout=absoluteTimeout;this.waitFor=waitFor;this.withObservable=withObservable;this.scheduler=scheduler;this.action=null;this.scheduleTimeout();}TimeoutWithSubscriber.dispatchTimeout=function(subscriber){var withObservable=subscriber.withObservable;subscriber._unsubscribeAndRecycle();subscriber.add(subscribeToResult_1.subscribeToResult(subscriber,withObservable));};TimeoutWithSubscriber.prototype.scheduleTimeout=function(){var action=this.action;if(action){// Recycle the action if we've already scheduled one. All the production
// Scheduler Actions mutate their state/delay time and return themeselves.
// VirtualActions are immutable, so they create and return a clone. In this
// case, we need to set the action reference to the most recent VirtualAction,
// to ensure that's the one we clone from next time.
this.action=action.schedule(this,this.waitFor);}else{this.add(this.action=this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout,this.waitFor,this));}};TimeoutWithSubscriber.prototype._next=function(value){if(!this.absoluteTimeout){this.scheduleTimeout();}_super.prototype._next.call(this,value);};TimeoutWithSubscriber.prototype._unsubscribe=function(){this.action=null;this.scheduler=null;this.withObservable=null;};return TimeoutWithSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=timeoutWith.js.map

/***/ }),
/* 646 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var timestamp_1=__webpack_require__(185);Observable_1.Observable.prototype.timestamp=timestamp_1.timestamp;//# sourceMappingURL=timestamp.js.map

/***/ }),
/* 647 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var toArray_1=__webpack_require__(648);Observable_1.Observable.prototype.toArray=toArray_1.toArray;//# sourceMappingURL=toArray.js.map

/***/ }),
/* 648 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);/**
 * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}
 * @method toArray
 * @owner Observable
 */function toArray(){return this.lift(new ToArrayOperator());}exports.toArray=toArray;var ToArrayOperator=function(){function ToArrayOperator(){}ToArrayOperator.prototype.call=function(subscriber,source){return source.subscribe(new ToArraySubscriber(subscriber));};return ToArrayOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ToArraySubscriber=function(_super){__extends(ToArraySubscriber,_super);function ToArraySubscriber(destination){_super.call(this,destination);this.array=[];}ToArraySubscriber.prototype._next=function(x){this.array.push(x);};ToArraySubscriber.prototype._complete=function(){this.destination.next(this.array);this.destination.complete();};return ToArraySubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=toArray.js.map

/***/ }),
/* 649 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var toPromise_1=__webpack_require__(650);Observable_1.Observable.prototype.toPromise=toPromise_1.toPromise;//# sourceMappingURL=toPromise.js.map

/***/ }),
/* 650 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);/* tslint:enable:max-line-length *//**
 * Converts an Observable sequence to a ES2015 compliant promise.
 *
 * @example
 * // Using normal ES2015
 * let source = Rx.Observable
 *   .of(42)
 *   .toPromise();
 *
 * source.then((value) => console.log('Value: %s', value));
 * // => Value: 42
 *
 * // Rejected Promise
 * // Using normal ES2015
 * let source = Rx.Observable
 *   .throw(new Error('woops'))
 *   .toPromise();
 *
 * source
 *   .then((value) => console.log('Value: %s', value))
 *   .catch((err) => console.log('Error: %s', err));
 * // => Error: Error: woops
 *
 * // Setting via the config
 * Rx.config.Promise = RSVP.Promise;
 *
 * let source = Rx.Observable
 *   .of(42)
 *   .toPromise();
 *
 * source.then((value) => console.log('Value: %s', value));
 * // => Value: 42
 *
 * // Setting via the method
 * let source = Rx.Observable
 *   .of(42)
 *   .toPromise(RSVP.Promise);
 *
 * source.then((value) => console.log('Value: %s', value));
 * // => Value: 42
 *
 * @param {PromiseConstructor} [PromiseCtor] The constructor of the promise. If not provided,
 * it will look for a constructor first in Rx.config.Promise then fall back to
 * the native Promise constructor if available.
 * @return {Promise<T>} An ES2015 compatible promise with the last value from
 * the observable sequence.
 * @method toPromise
 * @owner Observable
 */function toPromise(PromiseCtor){var _this=this;if(!PromiseCtor){if(root_1.root.Rx&&root_1.root.Rx.config&&root_1.root.Rx.config.Promise){PromiseCtor=root_1.root.Rx.config.Promise;}else if(root_1.root.Promise){PromiseCtor=root_1.root.Promise;}}if(!PromiseCtor){throw new Error('no Promise impl found');}return new PromiseCtor(function(resolve,reject){var value;_this.subscribe(function(x){return value=x;},function(err){return reject(err);},function(){return resolve(value);});});}exports.toPromise=toPromise;//# sourceMappingURL=toPromise.js.map

/***/ }),
/* 651 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var window_1=__webpack_require__(652);Observable_1.Observable.prototype.window=window_1.window;//# sourceMappingURL=window.js.map

/***/ }),
/* 652 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Branch out the source Observable values as a nested Observable whenever
 * `windowBoundaries` emits.
 *
 * <span class="informal">It's like {@link buffer}, but emits a nested Observable
 * instead of an array.</span>
 *
 * <img src="./img/window.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping
 * windows. It emits the current window and opens a new one whenever the
 * Observable `windowBoundaries` emits an item. Because each window is an
 * Observable, the output is a higher-order Observable.
 *
 * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var interval = Rx.Observable.interval(1000);
 * var result = clicks.window(interval)
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link buffer}
 *
 * @param {Observable<any>} windowBoundaries An Observable that completes the
 * previous window and starts a new window.
 * @return {Observable<Observable<T>>} An Observable of windows, which are
 * Observables emitting values of the source Observable.
 * @method window
 * @owner Observable
 */function window(windowBoundaries){return this.lift(new WindowOperator(windowBoundaries));}exports.window=window;var WindowOperator=function(){function WindowOperator(windowBoundaries){this.windowBoundaries=windowBoundaries;}WindowOperator.prototype.call=function(subscriber,source){var windowSubscriber=new WindowSubscriber(subscriber);var sourceSubscription=source.subscribe(windowSubscriber);if(!sourceSubscription.closed){windowSubscriber.add(subscribeToResult_1.subscribeToResult(windowSubscriber,this.windowBoundaries));}return sourceSubscription;};return WindowOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var WindowSubscriber=function(_super){__extends(WindowSubscriber,_super);function WindowSubscriber(destination){_super.call(this,destination);this.window=new Subject_1.Subject();destination.next(this.window);}WindowSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openWindow();};WindowSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};WindowSubscriber.prototype.notifyComplete=function(innerSub){this._complete();};WindowSubscriber.prototype._next=function(value){this.window.next(value);};WindowSubscriber.prototype._error=function(err){this.window.error(err);this.destination.error(err);};WindowSubscriber.prototype._complete=function(){this.window.complete();this.destination.complete();};WindowSubscriber.prototype._unsubscribe=function(){this.window=null;};WindowSubscriber.prototype.openWindow=function(){var prevWindow=this.window;if(prevWindow){prevWindow.complete();}var destination=this.destination;var newWindow=this.window=new Subject_1.Subject();destination.next(newWindow);};return WindowSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=window.js.map

/***/ }),
/* 653 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var windowCount_1=__webpack_require__(654);Observable_1.Observable.prototype.windowCount=windowCount_1.windowCount;//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 654 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subscriber_1=__webpack_require__(2);var Subject_1=__webpack_require__(10);/**
 * Branch out the source Observable values as a nested Observable with each
 * nested Observable emitting at most `windowSize` values.
 *
 * <span class="informal">It's like {@link bufferCount}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowCount.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows every `startWindowEvery`
 * items, each containing no more than `windowSize` items. When the source
 * Observable completes or encounters an error, the output Observable emits
 * the current window and propagates the notification from the source
 * Observable. If `startWindowEvery` is not provided, then new windows are
 * started immediately at the start of the source and when each window completes
 * with size `windowSize`.
 *
 * @example <caption>Ignore every 3rd click event, starting from the first one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(3)
 *   .map(win => win.skip(1)) // skip first of every 3 clicks
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @example <caption>Ignore every 3rd click event, starting from the third one</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks.windowCount(2, 3)
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link windowWhen}
 * @see {@link bufferCount}
 *
 * @param {number} windowSize The maximum number of values emitted by each
 * window.
 * @param {number} [startWindowEvery] Interval at which to start a new window.
 * For example if `startWindowEvery` is `2`, then a new window will be started
 * on every other value from the source. A new window is started at the
 * beginning of the source by default.
 * @return {Observable<Observable<T>>} An Observable of windows, which in turn
 * are Observable of values.
 * @method windowCount
 * @owner Observable
 */function windowCount(windowSize,startWindowEvery){if(startWindowEvery===void 0){startWindowEvery=0;}return this.lift(new WindowCountOperator(windowSize,startWindowEvery));}exports.windowCount=windowCount;var WindowCountOperator=function(){function WindowCountOperator(windowSize,startWindowEvery){this.windowSize=windowSize;this.startWindowEvery=startWindowEvery;}WindowCountOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowCountSubscriber(subscriber,this.windowSize,this.startWindowEvery));};return WindowCountOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var WindowCountSubscriber=function(_super){__extends(WindowCountSubscriber,_super);function WindowCountSubscriber(destination,windowSize,startWindowEvery){_super.call(this,destination);this.destination=destination;this.windowSize=windowSize;this.startWindowEvery=startWindowEvery;this.windows=[new Subject_1.Subject()];this.count=0;destination.next(this.windows[0]);}WindowCountSubscriber.prototype._next=function(value){var startWindowEvery=this.startWindowEvery>0?this.startWindowEvery:this.windowSize;var destination=this.destination;var windowSize=this.windowSize;var windows=this.windows;var len=windows.length;for(var i=0;i<len&&!this.closed;i++){windows[i].next(value);}var c=this.count-windowSize+1;if(c>=0&&c%startWindowEvery===0&&!this.closed){windows.shift().complete();}if(++this.count%startWindowEvery===0&&!this.closed){var window_1=new Subject_1.Subject();windows.push(window_1);destination.next(window_1);}};WindowCountSubscriber.prototype._error=function(err){var windows=this.windows;if(windows){while(windows.length>0&&!this.closed){windows.shift().error(err);}}this.destination.error(err);};WindowCountSubscriber.prototype._complete=function(){var windows=this.windows;if(windows){while(windows.length>0&&!this.closed){windows.shift().complete();}}this.destination.complete();};WindowCountSubscriber.prototype._unsubscribe=function(){this.count=0;this.windows=null;};return WindowCountSubscriber;}(Subscriber_1.Subscriber);//# sourceMappingURL=windowCount.js.map

/***/ }),
/* 655 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var windowTime_1=__webpack_require__(656);Observable_1.Observable.prototype.windowTime=windowTime_1.windowTime;//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 656 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var async_1=__webpack_require__(16);var Subscriber_1=__webpack_require__(2);var isNumeric_1=__webpack_require__(70);var isScheduler_1=__webpack_require__(25);function windowTime(windowTimeSpan){var scheduler=async_1.async;var windowCreationInterval=null;var maxWindowSize=Number.POSITIVE_INFINITY;if(isScheduler_1.isScheduler(arguments[3])){scheduler=arguments[3];}if(isScheduler_1.isScheduler(arguments[2])){scheduler=arguments[2];}else if(isNumeric_1.isNumeric(arguments[2])){maxWindowSize=arguments[2];}if(isScheduler_1.isScheduler(arguments[1])){scheduler=arguments[1];}else if(isNumeric_1.isNumeric(arguments[1])){windowCreationInterval=arguments[1];}return this.lift(new WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler));}exports.windowTime=windowTime;var WindowTimeOperator=function(){function WindowTimeOperator(windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){this.windowTimeSpan=windowTimeSpan;this.windowCreationInterval=windowCreationInterval;this.maxWindowSize=maxWindowSize;this.scheduler=scheduler;}WindowTimeOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowTimeSubscriber(subscriber,this.windowTimeSpan,this.windowCreationInterval,this.maxWindowSize,this.scheduler));};return WindowTimeOperator;}();var CountedSubject=function(_super){__extends(CountedSubject,_super);function CountedSubject(){_super.apply(this,arguments);this._numberOfNextedValues=0;}CountedSubject.prototype.next=function(value){this._numberOfNextedValues++;_super.prototype.next.call(this,value);};Object.defineProperty(CountedSubject.prototype,"numberOfNextedValues",{get:function get(){return this._numberOfNextedValues;},enumerable:true,configurable:true});return CountedSubject;}(Subject_1.Subject);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var WindowTimeSubscriber=function(_super){__extends(WindowTimeSubscriber,_super);function WindowTimeSubscriber(destination,windowTimeSpan,windowCreationInterval,maxWindowSize,scheduler){_super.call(this,destination);this.destination=destination;this.windowTimeSpan=windowTimeSpan;this.windowCreationInterval=windowCreationInterval;this.maxWindowSize=maxWindowSize;this.scheduler=scheduler;this.windows=[];var window=this.openWindow();if(windowCreationInterval!==null&&windowCreationInterval>=0){var closeState={subscriber:this,window:window,context:null};var creationState={windowTimeSpan:windowTimeSpan,windowCreationInterval:windowCreationInterval,subscriber:this,scheduler:scheduler};this.add(scheduler.schedule(dispatchWindowClose,windowTimeSpan,closeState));this.add(scheduler.schedule(dispatchWindowCreation,windowCreationInterval,creationState));}else{var timeSpanOnlyState={subscriber:this,window:window,windowTimeSpan:windowTimeSpan};this.add(scheduler.schedule(dispatchWindowTimeSpanOnly,windowTimeSpan,timeSpanOnlyState));}}WindowTimeSubscriber.prototype._next=function(value){var windows=this.windows;var len=windows.length;for(var i=0;i<len;i++){var window_1=windows[i];if(!window_1.closed){window_1.next(value);if(window_1.numberOfNextedValues>=this.maxWindowSize){this.closeWindow(window_1);}}}};WindowTimeSubscriber.prototype._error=function(err){var windows=this.windows;while(windows.length>0){windows.shift().error(err);}this.destination.error(err);};WindowTimeSubscriber.prototype._complete=function(){var windows=this.windows;while(windows.length>0){var window_2=windows.shift();if(!window_2.closed){window_2.complete();}}this.destination.complete();};WindowTimeSubscriber.prototype.openWindow=function(){var window=new CountedSubject();this.windows.push(window);var destination=this.destination;destination.next(window);return window;};WindowTimeSubscriber.prototype.closeWindow=function(window){window.complete();var windows=this.windows;windows.splice(windows.indexOf(window),1);};return WindowTimeSubscriber;}(Subscriber_1.Subscriber);function dispatchWindowTimeSpanOnly(state){var subscriber=state.subscriber,windowTimeSpan=state.windowTimeSpan,window=state.window;if(window){subscriber.closeWindow(window);}state.window=subscriber.openWindow();this.schedule(state,windowTimeSpan);}function dispatchWindowCreation(state){var windowTimeSpan=state.windowTimeSpan,subscriber=state.subscriber,scheduler=state.scheduler,windowCreationInterval=state.windowCreationInterval;var window=subscriber.openWindow();var action=this;var context={action:action,subscription:null};var timeSpanState={subscriber:subscriber,window:window,context:context};context.subscription=scheduler.schedule(dispatchWindowClose,windowTimeSpan,timeSpanState);action.add(context.subscription);action.schedule(state,windowCreationInterval);}function dispatchWindowClose(state){var subscriber=state.subscriber,window=state.window,context=state.context;if(context&&context.action&&context.subscription){context.action.remove(context.subscription);}subscriber.closeWindow(window);}//# sourceMappingURL=windowTime.js.map

/***/ }),
/* 657 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var windowToggle_1=__webpack_require__(658);Observable_1.Observable.prototype.windowToggle=windowToggle_1.windowToggle;//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 658 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var Subscription_1=__webpack_require__(9);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Branch out the source Observable values as a nested Observable starting from
 * an emission from `openings` and ending when the output of `closingSelector`
 * emits.
 *
 * <span class="informal">It's like {@link bufferToggle}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowToggle.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits windows that contain those items
 * emitted by the source Observable between the time when the `openings`
 * Observable emits an item and when the Observable returned by
 * `closingSelector` emits an item.
 *
 * @example <caption>Every other second, emit the click events from the next 500ms</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var openings = Rx.Observable.interval(1000);
 * var result = clicks.windowToggle(openings, i =>
 *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()
 * ).mergeAll();
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowWhen}
 * @see {@link bufferToggle}
 *
 * @param {Observable<O>} openings An observable of notifications to start new
 * windows.
 * @param {function(value: O): Observable} closingSelector A function that takes
 * the value emitted by the `openings` observable and returns an Observable,
 * which, when it emits (either `next` or `complete`), signals that the
 * associated window should complete.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowToggle
 * @owner Observable
 */function windowToggle(openings,closingSelector){return this.lift(new WindowToggleOperator(openings,closingSelector));}exports.windowToggle=windowToggle;var WindowToggleOperator=function(){function WindowToggleOperator(openings,closingSelector){this.openings=openings;this.closingSelector=closingSelector;}WindowToggleOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowToggleSubscriber(subscriber,this.openings,this.closingSelector));};return WindowToggleOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var WindowToggleSubscriber=function(_super){__extends(WindowToggleSubscriber,_super);function WindowToggleSubscriber(destination,openings,closingSelector){_super.call(this,destination);this.openings=openings;this.closingSelector=closingSelector;this.contexts=[];this.add(this.openSubscription=subscribeToResult_1.subscribeToResult(this,openings,openings));}WindowToggleSubscriber.prototype._next=function(value){var contexts=this.contexts;if(contexts){var len=contexts.length;for(var i=0;i<len;i++){contexts[i].window.next(value);}}};WindowToggleSubscriber.prototype._error=function(err){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context=contexts[index];context.window.error(err);context.subscription.unsubscribe();}}_super.prototype._error.call(this,err);};WindowToggleSubscriber.prototype._complete=function(){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context=contexts[index];context.window.complete();context.subscription.unsubscribe();}}_super.prototype._complete.call(this);};WindowToggleSubscriber.prototype._unsubscribe=function(){var contexts=this.contexts;this.contexts=null;if(contexts){var len=contexts.length;var index=-1;while(++index<len){var context=contexts[index];context.window.unsubscribe();context.subscription.unsubscribe();}}};WindowToggleSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){if(outerValue===this.openings){var closingSelector=this.closingSelector;var closingNotifier=tryCatch_1.tryCatch(closingSelector)(innerValue);if(closingNotifier===errorObject_1.errorObject){return this.error(errorObject_1.errorObject.e);}else{var window_1=new Subject_1.Subject();var subscription=new Subscription_1.Subscription();var context={window:window_1,subscription:subscription};this.contexts.push(context);var innerSubscription=subscribeToResult_1.subscribeToResult(this,closingNotifier,context);if(innerSubscription.closed){this.closeWindow(this.contexts.length-1);}else{innerSubscription.context=context;subscription.add(innerSubscription);}this.destination.next(window_1);}}else{this.closeWindow(this.contexts.indexOf(outerValue));}};WindowToggleSubscriber.prototype.notifyError=function(err){this.error(err);};WindowToggleSubscriber.prototype.notifyComplete=function(inner){if(inner!==this.openSubscription){this.closeWindow(this.contexts.indexOf(inner.context));}};WindowToggleSubscriber.prototype.closeWindow=function(index){if(index===-1){return;}var contexts=this.contexts;var context=contexts[index];var window=context.window,subscription=context.subscription;contexts.splice(index,1);window.complete();subscription.unsubscribe();};return WindowToggleSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=windowToggle.js.map

/***/ }),
/* 659 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var windowWhen_1=__webpack_require__(660);Observable_1.Observable.prototype.windowWhen=windowWhen_1.windowWhen;//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 660 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var tryCatch_1=__webpack_require__(13);var errorObject_1=__webpack_require__(11);var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/**
 * Branch out the source Observable values as a nested Observable using a
 * factory function of closing Observables to determine when to start a new
 * window.
 *
 * <span class="informal">It's like {@link bufferWhen}, but emits a nested
 * Observable instead of an array.</span>
 *
 * <img src="./img/windowWhen.png" width="100%">
 *
 * Returns an Observable that emits windows of items it collects from the source
 * Observable. The output Observable emits connected, non-overlapping windows.
 * It emits the current window and opens a new one whenever the Observable
 * produced by the specified `closingSelector` function emits an item. The first
 * window is opened immediately when subscribing to the output Observable.
 *
 * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var result = clicks
 *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))
 *   .map(win => win.take(2)) // each window has at most 2 emissions
 *   .mergeAll(); // flatten the Observable-of-Observables
 * result.subscribe(x => console.log(x));
 *
 * @see {@link window}
 * @see {@link windowCount}
 * @see {@link windowTime}
 * @see {@link windowToggle}
 * @see {@link bufferWhen}
 *
 * @param {function(): Observable} closingSelector A function that takes no
 * arguments and returns an Observable that signals (on either `next` or
 * `complete`) when to close the previous window and start a new one.
 * @return {Observable<Observable<T>>} An observable of windows, which in turn
 * are Observables.
 * @method windowWhen
 * @owner Observable
 */function windowWhen(closingSelector){return this.lift(new WindowOperator(closingSelector));}exports.windowWhen=windowWhen;var WindowOperator=function(){function WindowOperator(closingSelector){this.closingSelector=closingSelector;}WindowOperator.prototype.call=function(subscriber,source){return source.subscribe(new WindowSubscriber(subscriber,this.closingSelector));};return WindowOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var WindowSubscriber=function(_super){__extends(WindowSubscriber,_super);function WindowSubscriber(destination,closingSelector){_super.call(this,destination);this.destination=destination;this.closingSelector=closingSelector;this.openWindow();}WindowSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.openWindow(innerSub);};WindowSubscriber.prototype.notifyError=function(error,innerSub){this._error(error);};WindowSubscriber.prototype.notifyComplete=function(innerSub){this.openWindow(innerSub);};WindowSubscriber.prototype._next=function(value){this.window.next(value);};WindowSubscriber.prototype._error=function(err){this.window.error(err);this.destination.error(err);this.unsubscribeClosingNotification();};WindowSubscriber.prototype._complete=function(){this.window.complete();this.destination.complete();this.unsubscribeClosingNotification();};WindowSubscriber.prototype.unsubscribeClosingNotification=function(){if(this.closingNotification){this.closingNotification.unsubscribe();}};WindowSubscriber.prototype.openWindow=function(innerSub){if(innerSub===void 0){innerSub=null;}if(innerSub){this.remove(innerSub);innerSub.unsubscribe();}var prevWindow=this.window;if(prevWindow){prevWindow.complete();}var window=this.window=new Subject_1.Subject();this.destination.next(window);var closingNotifier=tryCatch_1.tryCatch(this.closingSelector)();if(closingNotifier===errorObject_1.errorObject){var err=errorObject_1.errorObject.e;this.destination.error(err);this.window.error(err);}else{this.add(this.closingNotification=subscribeToResult_1.subscribeToResult(this,closingNotifier));}};return WindowSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=windowWhen.js.map

/***/ }),
/* 661 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var withLatestFrom_1=__webpack_require__(662);Observable_1.Observable.prototype.withLatestFrom=withLatestFrom_1.withLatestFrom;//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 662 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var OuterSubscriber_1=__webpack_require__(5);var subscribeToResult_1=__webpack_require__(6);/* tslint:enable:max-line-length *//**
 * Combines the source Observable with other Observables to create an Observable
 * whose values are calculated from the latest values of each, only when the
 * source emits.
 *
 * <span class="informal">Whenever the source Observable emits a value, it
 * computes a formula using that value plus the latest values from other input
 * Observables, then emits the output of that formula.</span>
 *
 * <img src="./img/withLatestFrom.png" width="100%">
 *
 * `withLatestFrom` combines each value from the source Observable (the
 * instance) with the latest values from the other input Observables only when
 * the source emits a value, optionally using a `project` function to determine
 * the value to be emitted on the output Observable. All input Observables must
 * emit at least one value before the output Observable will emit a value.
 *
 * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>
 * var clicks = Rx.Observable.fromEvent(document, 'click');
 * var timer = Rx.Observable.interval(1000);
 * var result = clicks.withLatestFrom(timer);
 * result.subscribe(x => console.log(x));
 *
 * @see {@link combineLatest}
 *
 * @param {ObservableInput} other An input Observable to combine with the source
 * Observable. More than one input Observables may be given as argument.
 * @param {Function} [project] Projection function for combining values
 * together. Receives all values in order of the Observables passed, where the
 * first parameter is a value from the source Observable. (e.g.
 * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not
 * passed, arrays will be emitted on the output Observable.
 * @return {Observable} An Observable of projected values from the most recent
 * values from each input Observable, or an array of the most recent values from
 * each input Observable.
 * @method withLatestFrom
 * @owner Observable
 */function withLatestFrom(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i-0]=arguments[_i];}var project;if(typeof args[args.length-1]==='function'){project=args.pop();}var observables=args;return this.lift(new WithLatestFromOperator(observables,project));}exports.withLatestFrom=withLatestFrom;var WithLatestFromOperator=function(){function WithLatestFromOperator(observables,project){this.observables=observables;this.project=project;}WithLatestFromOperator.prototype.call=function(subscriber,source){return source.subscribe(new WithLatestFromSubscriber(subscriber,this.observables,this.project));};return WithLatestFromOperator;}();/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var WithLatestFromSubscriber=function(_super){__extends(WithLatestFromSubscriber,_super);function WithLatestFromSubscriber(destination,observables,project){_super.call(this,destination);this.observables=observables;this.project=project;this.toRespond=[];var len=observables.length;this.values=new Array(len);for(var i=0;i<len;i++){this.toRespond.push(i);}for(var i=0;i<len;i++){var observable=observables[i];this.add(subscribeToResult_1.subscribeToResult(this,observable,observable,i));}}WithLatestFromSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values[outerIndex]=innerValue;var toRespond=this.toRespond;if(toRespond.length>0){var found=toRespond.indexOf(outerIndex);if(found!==-1){toRespond.splice(found,1);}}};WithLatestFromSubscriber.prototype.notifyComplete=function(){// noop
};WithLatestFromSubscriber.prototype._next=function(value){if(this.toRespond.length===0){var args=[value].concat(this.values);if(this.project){this._tryProject(args);}else{this.destination.next(args);}}};WithLatestFromSubscriber.prototype._tryProject=function(args){var result;try{result=this.project.apply(this,args);}catch(err){this.destination.error(err);return;}this.destination.next(result);};return WithLatestFromSubscriber;}(OuterSubscriber_1.OuterSubscriber);//# sourceMappingURL=withLatestFrom.js.map

/***/ }),
/* 663 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var zip_1=__webpack_require__(99);Observable_1.Observable.prototype.zip=zip_1.zipProto;//# sourceMappingURL=zip.js.map

/***/ }),
/* 664 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var Observable_1=__webpack_require__(0);var zipAll_1=__webpack_require__(665);Observable_1.Observable.prototype.zipAll=zipAll_1.zipAll;//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 665 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var zip_1=__webpack_require__(99);/**
 * @param project
 * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}
 * @method zipAll
 * @owner Observable
 */function zipAll(project){return this.lift(new zip_1.ZipOperator(project));}exports.zipAll=zipAll;//# sourceMappingURL=zipAll.js.map

/***/ }),
/* 666 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var Notification_1=__webpack_require__(43);var ColdObservable_1=__webpack_require__(667);var HotObservable_1=__webpack_require__(668);var SubscriptionLog_1=__webpack_require__(187);var VirtualTimeScheduler_1=__webpack_require__(189);var defaultMaxFrame=750;var TestScheduler=function(_super){__extends(TestScheduler,_super);function TestScheduler(assertDeepEqual){_super.call(this,VirtualTimeScheduler_1.VirtualAction,defaultMaxFrame);this.assertDeepEqual=assertDeepEqual;this.hotObservables=[];this.coldObservables=[];this.flushTests=[];}TestScheduler.prototype.createTime=function(marbles){var indexOf=marbles.indexOf('|');if(indexOf===-1){throw new Error('marble diagram for time should have a completion marker "|"');}return indexOf*TestScheduler.frameTimeFactor;};TestScheduler.prototype.createColdObservable=function(marbles,values,error){if(marbles.indexOf('^')!==-1){throw new Error('cold observable cannot have subscription offset "^"');}if(marbles.indexOf('!')!==-1){throw new Error('cold observable cannot have unsubscription marker "!"');}var messages=TestScheduler.parseMarbles(marbles,values,error);var cold=new ColdObservable_1.ColdObservable(messages,this);this.coldObservables.push(cold);return cold;};TestScheduler.prototype.createHotObservable=function(marbles,values,error){if(marbles.indexOf('!')!==-1){throw new Error('hot observable cannot have unsubscription marker "!"');}var messages=TestScheduler.parseMarbles(marbles,values,error);var subject=new HotObservable_1.HotObservable(messages,this);this.hotObservables.push(subject);return subject;};TestScheduler.prototype.materializeInnerObservable=function(observable,outerFrame){var _this=this;var messages=[];observable.subscribe(function(value){messages.push({frame:_this.frame-outerFrame,notification:Notification_1.Notification.createNext(value)});},function(err){messages.push({frame:_this.frame-outerFrame,notification:Notification_1.Notification.createError(err)});},function(){messages.push({frame:_this.frame-outerFrame,notification:Notification_1.Notification.createComplete()});});return messages;};TestScheduler.prototype.expectObservable=function(observable,unsubscriptionMarbles){var _this=this;if(unsubscriptionMarbles===void 0){unsubscriptionMarbles=null;}var actual=[];var flushTest={actual:actual,ready:false};var unsubscriptionFrame=TestScheduler.parseMarblesAsSubscriptions(unsubscriptionMarbles).unsubscribedFrame;var subscription;this.schedule(function(){subscription=observable.subscribe(function(x){var value=x;// Support Observable-of-Observables
if(x instanceof Observable_1.Observable){value=_this.materializeInnerObservable(value,_this.frame);}actual.push({frame:_this.frame,notification:Notification_1.Notification.createNext(value)});},function(err){actual.push({frame:_this.frame,notification:Notification_1.Notification.createError(err)});},function(){actual.push({frame:_this.frame,notification:Notification_1.Notification.createComplete()});});},0);if(unsubscriptionFrame!==Number.POSITIVE_INFINITY){this.schedule(function(){return subscription.unsubscribe();},unsubscriptionFrame);}this.flushTests.push(flushTest);return{toBe:function toBe(marbles,values,errorValue){flushTest.ready=true;flushTest.expected=TestScheduler.parseMarbles(marbles,values,errorValue,true);}};};TestScheduler.prototype.expectSubscriptions=function(actualSubscriptionLogs){var flushTest={actual:actualSubscriptionLogs,ready:false};this.flushTests.push(flushTest);return{toBe:function toBe(marbles){var marblesArray=typeof marbles==='string'?[marbles]:marbles;flushTest.ready=true;flushTest.expected=marblesArray.map(function(marbles){return TestScheduler.parseMarblesAsSubscriptions(marbles);});}};};TestScheduler.prototype.flush=function(){var hotObservables=this.hotObservables;while(hotObservables.length>0){hotObservables.shift().setup();}_super.prototype.flush.call(this);var readyFlushTests=this.flushTests.filter(function(test){return test.ready;});while(readyFlushTests.length>0){var test=readyFlushTests.shift();this.assertDeepEqual(test.actual,test.expected);}};TestScheduler.parseMarblesAsSubscriptions=function(marbles){if(typeof marbles!=='string'){return new SubscriptionLog_1.SubscriptionLog(Number.POSITIVE_INFINITY);}var len=marbles.length;var groupStart=-1;var subscriptionFrame=Number.POSITIVE_INFINITY;var unsubscriptionFrame=Number.POSITIVE_INFINITY;for(var i=0;i<len;i++){var frame=i*this.frameTimeFactor;var c=marbles[i];switch(c){case'-':case' ':break;case'(':groupStart=frame;break;case')':groupStart=-1;break;case'^':if(subscriptionFrame!==Number.POSITIVE_INFINITY){throw new Error('found a second subscription point \'^\' in a '+'subscription marble diagram. There can only be one.');}subscriptionFrame=groupStart>-1?groupStart:frame;break;case'!':if(unsubscriptionFrame!==Number.POSITIVE_INFINITY){throw new Error('found a second subscription point \'^\' in a '+'subscription marble diagram. There can only be one.');}unsubscriptionFrame=groupStart>-1?groupStart:frame;break;default:throw new Error('there can only be \'^\' and \'!\' markers in a '+'subscription marble diagram. Found instead \''+c+'\'.');}}if(unsubscriptionFrame<0){return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame);}else{return new SubscriptionLog_1.SubscriptionLog(subscriptionFrame,unsubscriptionFrame);}};TestScheduler.parseMarbles=function(marbles,values,errorValue,materializeInnerObservables){if(materializeInnerObservables===void 0){materializeInnerObservables=false;}if(marbles.indexOf('!')!==-1){throw new Error('conventional marble diagrams cannot have the '+'unsubscription marker "!"');}var len=marbles.length;var testMessages=[];var subIndex=marbles.indexOf('^');var frameOffset=subIndex===-1?0:subIndex*-this.frameTimeFactor;var getValue=(typeof values==='undefined'?'undefined':_typeof(values))!=='object'?function(x){return x;}:function(x){// Support Observable-of-Observables
if(materializeInnerObservables&&values[x]instanceof ColdObservable_1.ColdObservable){return values[x].messages;}return values[x];};var groupStart=-1;for(var i=0;i<len;i++){var frame=i*this.frameTimeFactor+frameOffset;var notification=void 0;var c=marbles[i];switch(c){case'-':case' ':break;case'(':groupStart=frame;break;case')':groupStart=-1;break;case'|':notification=Notification_1.Notification.createComplete();break;case'^':break;case'#':notification=Notification_1.Notification.createError(errorValue||'error');break;default:notification=Notification_1.Notification.createNext(getValue(c));break;}if(notification){testMessages.push({frame:groupStart>-1?groupStart:frame,notification:notification});}}return testMessages;};return TestScheduler;}(VirtualTimeScheduler_1.VirtualTimeScheduler);exports.TestScheduler=TestScheduler;//# sourceMappingURL=TestScheduler.js.map

/***/ }),
/* 667 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Observable_1=__webpack_require__(0);var Subscription_1=__webpack_require__(9);var SubscriptionLoggable_1=__webpack_require__(186);var applyMixins_1=__webpack_require__(188);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var ColdObservable=function(_super){__extends(ColdObservable,_super);function ColdObservable(messages,scheduler){_super.call(this,function(subscriber){var observable=this;var index=observable.logSubscribedFrame();subscriber.add(new Subscription_1.Subscription(function(){observable.logUnsubscribedFrame(index);}));observable.scheduleMessages(subscriber);return subscriber;});this.messages=messages;this.subscriptions=[];this.scheduler=scheduler;}ColdObservable.prototype.scheduleMessages=function(subscriber){var messagesLength=this.messages.length;for(var i=0;i<messagesLength;i++){var message=this.messages[i];subscriber.add(this.scheduler.schedule(function(_a){var message=_a.message,subscriber=_a.subscriber;message.notification.observe(subscriber);},message.frame,{message:message,subscriber:subscriber}));}};return ColdObservable;}(Observable_1.Observable);exports.ColdObservable=ColdObservable;applyMixins_1.applyMixins(ColdObservable,[SubscriptionLoggable_1.SubscriptionLoggable]);//# sourceMappingURL=ColdObservable.js.map

/***/ }),
/* 668 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var Subject_1=__webpack_require__(10);var Subscription_1=__webpack_require__(9);var SubscriptionLoggable_1=__webpack_require__(186);var applyMixins_1=__webpack_require__(188);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var HotObservable=function(_super){__extends(HotObservable,_super);function HotObservable(messages,scheduler){_super.call(this);this.messages=messages;this.subscriptions=[];this.scheduler=scheduler;}HotObservable.prototype._subscribe=function(subscriber){var subject=this;var index=subject.logSubscribedFrame();subscriber.add(new Subscription_1.Subscription(function(){subject.logUnsubscribedFrame(index);}));return _super.prototype._subscribe.call(this,subscriber);};HotObservable.prototype.setup=function(){var subject=this;var messagesLength=subject.messages.length;/* tslint:disable:no-var-keyword */for(var i=0;i<messagesLength;i++){(function(){var message=subject.messages[i];/* tslint:enable */subject.scheduler.schedule(function(){message.notification.observe(subject);},message.frame);})();}};return HotObservable;}(Subject_1.Subject);exports.HotObservable=HotObservable;applyMixins_1.applyMixins(HotObservable,[SubscriptionLoggable_1.SubscriptionLoggable]);//# sourceMappingURL=HotObservable.js.map

/***/ }),
/* 669 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var AnimationFrameAction_1=__webpack_require__(670);var AnimationFrameScheduler_1=__webpack_require__(672);/**
 *
 * Animation Frame Scheduler
 *
 * <span class="informal">Perform task when `window.requestAnimationFrame` would fire</span>
 *
 * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler
 * behaviour.
 *
 * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.
 * It makes sure scheduled task will happen just before next browser content repaint,
 * thus performing animations as efficiently as possible.
 *
 * @example <caption>Schedule div height animation</caption>
 * const div = document.querySelector('.some-div');
 *
 * Rx.Scheduler.schedule(function(height) {
 *   div.style.height = height + "px";
 *
 *   this.schedule(height + 1);  // `this` references currently executing Action,
 *                               // which we reschedule with new state
 * }, 0, 0);
 *
 * // You will see .some-div element growing in height
 *
 *
 * @static true
 * @name animationFrame
 * @owner Scheduler
 */exports.animationFrame=new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);//# sourceMappingURL=animationFrame.js.map

/***/ }),
/* 670 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var AsyncAction_1=__webpack_require__(44);var AnimationFrame_1=__webpack_require__(671);/**
 * We need this JSDoc comment for affecting ESDoc.
 * @ignore
 * @extends {Ignored}
 */var AnimationFrameAction=function(_super){__extends(AnimationFrameAction,_super);function AnimationFrameAction(scheduler,work){_super.call(this,scheduler,work);this.scheduler=scheduler;this.work=work;}AnimationFrameAction.prototype.requestAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}// If delay is greater than 0, request as an async action.
if(delay!==null&&delay>0){return _super.prototype.requestAsyncId.call(this,scheduler,id,delay);}// Push the action to the end of the scheduler queue.
scheduler.actions.push(this);// If an animation frame has already been requested, don't request another
// one. If an animation frame hasn't been requested yet, request one. Return
// the current animation frame request id.
return scheduler.scheduled||(scheduler.scheduled=AnimationFrame_1.AnimationFrame.requestAnimationFrame(scheduler.flush.bind(scheduler,null)));};AnimationFrameAction.prototype.recycleAsyncId=function(scheduler,id,delay){if(delay===void 0){delay=0;}// If delay exists and is greater than 0, or if the delay is null (the
// action wasn't rescheduled) but was originally scheduled as an async
// action, then recycle as an async action.
if(delay!==null&&delay>0||delay===null&&this.delay>0){return _super.prototype.recycleAsyncId.call(this,scheduler,id,delay);}// If the scheduler queue is empty, cancel the requested animation frame and
// set the scheduled flag to undefined so the next AnimationFrameAction will
// request its own.
if(scheduler.actions.length===0){AnimationFrame_1.AnimationFrame.cancelAnimationFrame(id);scheduler.scheduled=undefined;}// Return undefined so the action knows to request a new async id if it's rescheduled.
return undefined;};return AnimationFrameAction;}(AsyncAction_1.AsyncAction);exports.AnimationFrameAction=AnimationFrameAction;//# sourceMappingURL=AnimationFrameAction.js.map

/***/ }),
/* 671 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var root_1=__webpack_require__(12);var RequestAnimationFrameDefinition=function(){function RequestAnimationFrameDefinition(root){if(root.requestAnimationFrame){this.cancelAnimationFrame=root.cancelAnimationFrame.bind(root);this.requestAnimationFrame=root.requestAnimationFrame.bind(root);}else if(root.mozRequestAnimationFrame){this.cancelAnimationFrame=root.mozCancelAnimationFrame.bind(root);this.requestAnimationFrame=root.mozRequestAnimationFrame.bind(root);}else if(root.webkitRequestAnimationFrame){this.cancelAnimationFrame=root.webkitCancelAnimationFrame.bind(root);this.requestAnimationFrame=root.webkitRequestAnimationFrame.bind(root);}else if(root.msRequestAnimationFrame){this.cancelAnimationFrame=root.msCancelAnimationFrame.bind(root);this.requestAnimationFrame=root.msRequestAnimationFrame.bind(root);}else if(root.oRequestAnimationFrame){this.cancelAnimationFrame=root.oCancelAnimationFrame.bind(root);this.requestAnimationFrame=root.oRequestAnimationFrame.bind(root);}else{this.cancelAnimationFrame=root.clearTimeout.bind(root);this.requestAnimationFrame=function(cb){return root.setTimeout(cb,1000/60);};}}return RequestAnimationFrameDefinition;}();exports.RequestAnimationFrameDefinition=RequestAnimationFrameDefinition;exports.AnimationFrame=new RequestAnimationFrameDefinition(root_1.root);//# sourceMappingURL=AnimationFrame.js.map

/***/ }),
/* 672 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __extends=undefined&&undefined.__extends||function(d,b){for(var p in b){if(b.hasOwnProperty(p))d[p]=b[p];}function __(){this.constructor=d;}d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};var AsyncScheduler_1=__webpack_require__(45);var AnimationFrameScheduler=function(_super){__extends(AnimationFrameScheduler,_super);function AnimationFrameScheduler(){_super.apply(this,arguments);}AnimationFrameScheduler.prototype.flush=function(action){this.active=true;this.scheduled=undefined;var actions=this.actions;var error;var index=-1;var count=actions.length;action=action||actions.shift();do{if(error=action.execute(action.state,action.delay)){break;}}while(++index<count&&(action=actions.shift()));this.active=false;if(error){while(++index<count&&(action=actions.shift())){action.unsubscribe();}throw error;}};return AnimationFrameScheduler;}(AsyncScheduler_1.AsyncScheduler);exports.AnimationFrameScheduler=AnimationFrameScheduler;//# sourceMappingURL=AnimationFrameScheduler.js.map

/***/ }),
/* 673 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/*!
 * Vue.js v2.4.2
 * (c) 2014-2017 Evan You
 * Released under the MIT License.
 */(function(global,factory){( false?'undefined':_typeof(exports))==='object'&&typeof module!=='undefined'?module.exports=factory(): true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):global.Vue=factory();})(undefined,function(){'use strict';/*  */// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
function isUndef(v){return v===undefined||v===null;}function isDef(v){return v!==undefined&&v!==null;}function isTrue(v){return v===true;}function isFalse(v){return v===false;}/**
 * Check if value is primitive
 */function isPrimitive(value){return typeof value==='string'||typeof value==='number'||typeof value==='boolean';}/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */function isObject(obj){return obj!==null&&(typeof obj==='undefined'?'undefined':_typeof(obj))==='object';}var _toString=Object.prototype.toString;/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */function isPlainObject(obj){return _toString.call(obj)==='[object Object]';}function isRegExp(v){return _toString.call(v)==='[object RegExp]';}/**
 * Check if val is a valid array index.
 */function isValidArrayIndex(val){var n=parseFloat(val);return n>=0&&Math.floor(n)===n&&isFinite(val);}/**
 * Convert a value to a string that is actually rendered.
 */function toString(val){return val==null?'':(typeof val==='undefined'?'undefined':_typeof(val))==='object'?JSON.stringify(val,null,2):String(val);}/**
 * Convert a input value to a number for persistence.
 * If the conversion fails, return original string.
 */function toNumber(val){var n=parseFloat(val);return isNaN(n)?val:n;}/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */function makeMap(str,expectsLowerCase){var map=Object.create(null);var list=str.split(',');for(var i=0;i<list.length;i++){map[list[i]]=true;}return expectsLowerCase?function(val){return map[val.toLowerCase()];}:function(val){return map[val];};}/**
 * Check if a tag is a built-in tag.
 */var isBuiltInTag=makeMap('slot,component',true);/**
 * Check if a attribute is a reserved attribute.
 */var isReservedAttribute=makeMap('key,ref,slot,is');/**
 * Remove an item from an array
 */function remove(arr,item){if(arr.length){var index=arr.indexOf(item);if(index>-1){return arr.splice(index,1);}}}/**
 * Check whether the object has the property.
 */var hasOwnProperty=Object.prototype.hasOwnProperty;function hasOwn(obj,key){return hasOwnProperty.call(obj,key);}/**
 * Create a cached version of a pure function.
 */function cached(fn){var cache=Object.create(null);return function cachedFn(str){var hit=cache[str];return hit||(cache[str]=fn(str));};}/**
 * Camelize a hyphen-delimited string.
 */var camelizeRE=/-(\w)/g;var camelize=cached(function(str){return str.replace(camelizeRE,function(_,c){return c?c.toUpperCase():'';});});/**
 * Capitalize a string.
 */var capitalize=cached(function(str){return str.charAt(0).toUpperCase()+str.slice(1);});/**
 * Hyphenate a camelCase string.
 */var hyphenateRE=/([^-])([A-Z])/g;var hyphenate=cached(function(str){return str.replace(hyphenateRE,'$1-$2').replace(hyphenateRE,'$1-$2').toLowerCase();});/**
 * Simple bind, faster than native
 */function bind(fn,ctx){function boundFn(a){var l=arguments.length;return l?l>1?fn.apply(ctx,arguments):fn.call(ctx,a):fn.call(ctx);}// record original fn length
boundFn._length=fn.length;return boundFn;}/**
 * Convert an Array-like object to a real Array.
 */function toArray(list,start){start=start||0;var i=list.length-start;var ret=new Array(i);while(i--){ret[i]=list[i+start];}return ret;}/**
 * Mix properties into target object.
 */function extend(to,_from){for(var key in _from){to[key]=_from[key];}return to;}/**
 * Merge an Array of Objects into a single Object.
 */function toObject(arr){var res={};for(var i=0;i<arr.length;i++){if(arr[i]){extend(res,arr[i]);}}return res;}/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
 */function noop(a,b,c){}/**
 * Always return false.
 */var no=function no(a,b,c){return false;};/**
 * Return same value
 */var identity=function identity(_){return _;};/**
 * Generate a static keys string from compiler modules.
 */function genStaticKeys(modules){return modules.reduce(function(keys,m){return keys.concat(m.staticKeys||[]);},[]).join(',');}/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */function looseEqual(a,b){if(a===b){return true;}var isObjectA=isObject(a);var isObjectB=isObject(b);if(isObjectA&&isObjectB){try{var isArrayA=Array.isArray(a);var isArrayB=Array.isArray(b);if(isArrayA&&isArrayB){return a.length===b.length&&a.every(function(e,i){return looseEqual(e,b[i]);});}else if(!isArrayA&&!isArrayB){var keysA=Object.keys(a);var keysB=Object.keys(b);return keysA.length===keysB.length&&keysA.every(function(key){return looseEqual(a[key],b[key]);});}else{/* istanbul ignore next */return false;}}catch(e){/* istanbul ignore next */return false;}}else if(!isObjectA&&!isObjectB){return String(a)===String(b);}else{return false;}}function looseIndexOf(arr,val){for(var i=0;i<arr.length;i++){if(looseEqual(arr[i],val)){return i;}}return-1;}/**
 * Ensure a function is called only once.
 */function once(fn){var called=false;return function(){if(!called){called=true;fn.apply(this,arguments);}};}var SSR_ATTR='data-server-rendered';var ASSET_TYPES=['component','directive','filter'];var LIFECYCLE_HOOKS=['beforeCreate','created','beforeMount','mounted','beforeUpdate','updated','beforeDestroy','destroyed','activated','deactivated'];/*  */var config={/**
   * Option merge strategies (used in core/util/options)
   */optionMergeStrategies:Object.create(null),/**
   * Whether to suppress warnings.
   */silent:false,/**
   * Show production mode tip message on boot?
   */productionTip:"development"!=='production',/**
   * Whether to enable devtools
   */devtools:"development"!=='production',/**
   * Whether to record perf
   */performance:false,/**
   * Error handler for watcher errors
   */errorHandler:null,/**
   * Warn handler for watcher warns
   */warnHandler:null,/**
   * Ignore certain custom elements
   */ignoredElements:[],/**
   * Custom user key aliases for v-on
   */keyCodes:Object.create(null),/**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */isReservedTag:no,/**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */isReservedAttr:no,/**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */isUnknownElement:no,/**
   * Get the namespace of an element
   */getTagNamespace:noop,/**
   * Parse the real tag name for the specific platform.
   */parsePlatformTagName:identity,/**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */mustUseProp:no,/**
   * Exposed for legacy reasons
   */_lifecycleHooks:LIFECYCLE_HOOKS};/*  */var emptyObject=Object.freeze({});/**
 * Check if a string starts with $ or _
 */function isReserved(str){var c=(str+'').charCodeAt(0);return c===0x24||c===0x5F;}/**
 * Define a property.
 */function def(obj,key,val,enumerable){Object.defineProperty(obj,key,{value:val,enumerable:!!enumerable,writable:true,configurable:true});}/**
 * Parse simple path.
 */var bailRE=/[^\w.$]/;function parsePath(path){if(bailRE.test(path)){return;}var segments=path.split('.');return function(obj){for(var i=0;i<segments.length;i++){if(!obj){return;}obj=obj[segments[i]];}return obj;};}/*  */var warn=noop;var tip=noop;var formatComponentName=null;// work around flow check
{var hasConsole=typeof console!=='undefined';var classifyRE=/(?:^|[-_])(\w)/g;var classify=function classify(str){return str.replace(classifyRE,function(c){return c.toUpperCase();}).replace(/[-_]/g,'');};warn=function warn(msg,vm){var trace=vm?generateComponentTrace(vm):'';if(config.warnHandler){config.warnHandler.call(null,msg,vm,trace);}else if(hasConsole&&!config.silent){console.error("[Vue warn]: "+msg+trace);}};tip=function tip(msg,vm){if(hasConsole&&!config.silent){console.warn("[Vue tip]: "+msg+(vm?generateComponentTrace(vm):''));}};formatComponentName=function formatComponentName(vm,includeFile){if(vm.$root===vm){return'<Root>';}var name=typeof vm==='string'?vm:typeof vm==='function'&&vm.options?vm.options.name:vm._isVue?vm.$options.name||vm.$options._componentTag:vm.name;var file=vm._isVue&&vm.$options.__file;if(!name&&file){var match=file.match(/([^/\\]+)\.vue$/);name=match&&match[1];}return(name?"<"+classify(name)+">":"<Anonymous>")+(file&&includeFile!==false?" at "+file:'');};var repeat=function repeat(str,n){var res='';while(n){if(n%2===1){res+=str;}if(n>1){str+=str;}n>>=1;}return res;};var generateComponentTrace=function generateComponentTrace(vm){if(vm._isVue&&vm.$parent){var tree=[];var currentRecursiveSequence=0;while(vm){if(tree.length>0){var last=tree[tree.length-1];if(last.constructor===vm.constructor){currentRecursiveSequence++;vm=vm.$parent;continue;}else if(currentRecursiveSequence>0){tree[tree.length-1]=[last,currentRecursiveSequence];currentRecursiveSequence=0;}}tree.push(vm);vm=vm.$parent;}return'\n\nfound in\n\n'+tree.map(function(vm,i){return""+(i===0?'---> ':repeat(' ',5+i*2))+(Array.isArray(vm)?formatComponentName(vm[0])+"... ("+vm[1]+" recursive calls)":formatComponentName(vm));}).join('\n');}else{return"\n\n(found in "+formatComponentName(vm)+")";}};}/*  */function handleError(err,vm,info){if(config.errorHandler){config.errorHandler.call(null,err,vm,info);}else{{warn("Error in "+info+": \""+err.toString()+"\"",vm);}/* istanbul ignore else */if(inBrowser&&typeof console!=='undefined'){console.error(err);}else{throw err;}}}/*  *//* globals MutationObserver */// can we use __proto__?
var hasProto='__proto__'in{};// Browser environment sniffing
var inBrowser=typeof window!=='undefined';var UA=inBrowser&&window.navigator.userAgent.toLowerCase();var isIE=UA&&/msie|trident/.test(UA);var isIE9=UA&&UA.indexOf('msie 9.0')>0;var isEdge=UA&&UA.indexOf('edge/')>0;var isAndroid=UA&&UA.indexOf('android')>0;var isIOS=UA&&/iphone|ipad|ipod|ios/.test(UA);var isChrome=UA&&/chrome\/\d+/.test(UA)&&!isEdge;// Firefix has a "watch" function on Object.prototype...
var nativeWatch={}.watch;var supportsPassive=false;if(inBrowser){try{var opts={};Object.defineProperty(opts,'passive',{get:function get(){/* istanbul ignore next */supportsPassive=true;}});// https://github.com/facebook/flow/issues/285
window.addEventListener('test-passive',null,opts);}catch(e){}}// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;var isServerRendering=function isServerRendering(){if(_isServer===undefined){/* istanbul ignore if */if(!inBrowser&&typeof global!=='undefined'){// detect presence of vue-server-renderer and avoid
// Webpack shimming the process
_isServer=global['process'].env.VUE_ENV==='server';}else{_isServer=false;}}return _isServer;};// detect devtools
var devtools=inBrowser&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;/* istanbul ignore next */function isNative(Ctor){return typeof Ctor==='function'&&/native code/.test(Ctor.toString());}var hasSymbol=typeof Symbol!=='undefined'&&isNative(Symbol)&&typeof Reflect!=='undefined'&&isNative(Reflect.ownKeys);/**
 * Defer a task to execute it asynchronously.
 */var nextTick=function(){var callbacks=[];var pending=false;var timerFunc;function nextTickHandler(){pending=false;var copies=callbacks.slice(0);callbacks.length=0;for(var i=0;i<copies.length;i++){copies[i]();}}// the nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore if */if(typeof Promise!=='undefined'&&isNative(Promise)){var p=Promise.resolve();var logError=function logError(err){console.error(err);};timerFunc=function timerFunc(){p.then(nextTickHandler).catch(logError);// in problematic UIWebViews, Promise.then doesn't completely break, but
// it can get stuck in a weird state where callbacks are pushed into the
// microtask queue but the queue isn't being flushed, until the browser
// needs to do some other work, e.g. handle a timer. Therefore we can
// "force" the microtask queue to be flushed by adding an empty timer.
if(isIOS){setTimeout(noop);}};}else if(typeof MutationObserver!=='undefined'&&(isNative(MutationObserver)||// PhantomJS and iOS 7.x
MutationObserver.toString()==='[object MutationObserverConstructor]')){// use MutationObserver where native Promise is not available,
// e.g. PhantomJS IE11, iOS7, Android 4.4
var counter=1;var observer=new MutationObserver(nextTickHandler);var textNode=document.createTextNode(String(counter));observer.observe(textNode,{characterData:true});timerFunc=function timerFunc(){counter=(counter+1)%2;textNode.data=String(counter);};}else{// fallback to setTimeout
/* istanbul ignore next */timerFunc=function timerFunc(){setTimeout(nextTickHandler,0);};}return function queueNextTick(cb,ctx){var _resolve;callbacks.push(function(){if(cb){try{cb.call(ctx);}catch(e){handleError(e,ctx,'nextTick');}}else if(_resolve){_resolve(ctx);}});if(!pending){pending=true;timerFunc();}if(!cb&&typeof Promise!=='undefined'){return new Promise(function(resolve,reject){_resolve=resolve;});}};}();var _Set;/* istanbul ignore if */if(typeof Set!=='undefined'&&isNative(Set)){// use native Set when available.
_Set=Set;}else{// a non-standard Set polyfill that only works with primitive keys.
_Set=function(){function Set(){this.set=Object.create(null);}Set.prototype.has=function has(key){return this.set[key]===true;};Set.prototype.add=function add(key){this.set[key]=true;};Set.prototype.clear=function clear(){this.set=Object.create(null);};return Set;}();}/*  */var uid=0;/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */var Dep=function Dep(){this.id=uid++;this.subs=[];};Dep.prototype.addSub=function addSub(sub){this.subs.push(sub);};Dep.prototype.removeSub=function removeSub(sub){remove(this.subs,sub);};Dep.prototype.depend=function depend(){if(Dep.target){Dep.target.addDep(this);}};Dep.prototype.notify=function notify(){// stabilize the subscriber list first
var subs=this.subs.slice();for(var i=0,l=subs.length;i<l;i++){subs[i].update();}};// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
Dep.target=null;var targetStack=[];function pushTarget(_target){if(Dep.target){targetStack.push(Dep.target);}Dep.target=_target;}function popTarget(){Dep.target=targetStack.pop();}/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */var arrayProto=Array.prototype;var arrayMethods=Object.create(arrayProto);['push','pop','shift','unshift','splice','sort','reverse'].forEach(function(method){// cache original method
var original=arrayProto[method];def(arrayMethods,method,function mutator(){var args=[],len=arguments.length;while(len--){args[len]=arguments[len];}var result=original.apply(this,args);var ob=this.__ob__;var inserted;switch(method){case'push':case'unshift':inserted=args;break;case'splice':inserted=args.slice(2);break;}if(inserted){ob.observeArray(inserted);}// notify change
ob.dep.notify();return result;});});/*  */var arrayKeys=Object.getOwnPropertyNames(arrayMethods);/**
 * By default, when a reactive property is set, the new value is
 * also converted to become reactive. However when passing down props,
 * we don't want to force conversion because the value may be a nested value
 * under a frozen data structure. Converting it would defeat the optimization.
 */var observerState={shouldConvert:true};/**
 * Observer class that are attached to each observed
 * object. Once attached, the observer converts target
 * object's property keys into getter/setters that
 * collect dependencies and dispatches updates.
 */var Observer=function Observer(value){this.value=value;this.dep=new Dep();this.vmCount=0;def(value,'__ob__',this);if(Array.isArray(value)){var augment=hasProto?protoAugment:copyAugment;augment(value,arrayMethods,arrayKeys);this.observeArray(value);}else{this.walk(value);}};/**
 * Walk through each property and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */Observer.prototype.walk=function walk(obj){var keys=Object.keys(obj);for(var i=0;i<keys.length;i++){defineReactive$$1(obj,keys[i],obj[keys[i]]);}};/**
 * Observe a list of Array items.
 */Observer.prototype.observeArray=function observeArray(items){for(var i=0,l=items.length;i<l;i++){observe(items[i]);}};// helpers
/**
 * Augment an target Object or Array by intercepting
 * the prototype chain using __proto__
 */function protoAugment(target,src,keys){/* eslint-disable no-proto */target.__proto__=src;/* eslint-enable no-proto */}/**
 * Augment an target Object or Array by defining
 * hidden properties.
 *//* istanbul ignore next */function copyAugment(target,src,keys){for(var i=0,l=keys.length;i<l;i++){var key=keys[i];def(target,key,src[key]);}}/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */function observe(value,asRootData){if(!isObject(value)){return;}var ob;if(hasOwn(value,'__ob__')&&value.__ob__ instanceof Observer){ob=value.__ob__;}else if(observerState.shouldConvert&&!isServerRendering()&&(Array.isArray(value)||isPlainObject(value))&&Object.isExtensible(value)&&!value._isVue){ob=new Observer(value);}if(asRootData&&ob){ob.vmCount++;}return ob;}/**
 * Define a reactive property on an Object.
 */function defineReactive$$1(obj,key,val,customSetter,shallow){var dep=new Dep();var property=Object.getOwnPropertyDescriptor(obj,key);if(property&&property.configurable===false){return;}// cater for pre-defined getter/setters
var getter=property&&property.get;var setter=property&&property.set;var childOb=!shallow&&observe(val);Object.defineProperty(obj,key,{enumerable:true,configurable:true,get:function reactiveGetter(){var value=getter?getter.call(obj):val;if(Dep.target){dep.depend();if(childOb){childOb.dep.depend();}if(Array.isArray(value)){dependArray(value);}}return value;},set:function reactiveSetter(newVal){var value=getter?getter.call(obj):val;/* eslint-disable no-self-compare */if(newVal===value||newVal!==newVal&&value!==value){return;}/* eslint-enable no-self-compare */if("development"!=='production'&&customSetter){customSetter();}if(setter){setter.call(obj,newVal);}else{val=newVal;}childOb=!shallow&&observe(newVal);dep.notify();}});}/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */function set(target,key,val){if(Array.isArray(target)&&isValidArrayIndex(key)){target.length=Math.max(target.length,key);target.splice(key,1,val);return val;}if(hasOwn(target,key)){target[key]=val;return val;}var ob=target.__ob__;if(target._isVue||ob&&ob.vmCount){"development"!=='production'&&warn('Avoid adding reactive properties to a Vue instance or its root $data '+'at runtime - declare it upfront in the data option.');return val;}if(!ob){target[key]=val;return val;}defineReactive$$1(ob.value,key,val);ob.dep.notify();return val;}/**
 * Delete a property and trigger change if necessary.
 */function del(target,key){if(Array.isArray(target)&&isValidArrayIndex(key)){target.splice(key,1);return;}var ob=target.__ob__;if(target._isVue||ob&&ob.vmCount){"development"!=='production'&&warn('Avoid deleting properties on a Vue instance or its root $data '+'- just set it to null.');return;}if(!hasOwn(target,key)){return;}delete target[key];if(!ob){return;}ob.dep.notify();}/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */function dependArray(value){for(var e=void 0,i=0,l=value.length;i<l;i++){e=value[i];e&&e.__ob__&&e.__ob__.dep.depend();if(Array.isArray(e)){dependArray(e);}}}/*  *//**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */var strats=config.optionMergeStrategies;/**
 * Options with restrictions
 */{strats.el=strats.propsData=function(parent,child,vm,key){if(!vm){warn("option \""+key+"\" can only be used during instance "+'creation with the `new` keyword.');}return defaultStrat(parent,child);};}/**
 * Helper that recursively merges two data objects together.
 */function mergeData(to,from){if(!from){return to;}var key,toVal,fromVal;var keys=Object.keys(from);for(var i=0;i<keys.length;i++){key=keys[i];toVal=to[key];fromVal=from[key];if(!hasOwn(to,key)){set(to,key,fromVal);}else if(isPlainObject(toVal)&&isPlainObject(fromVal)){mergeData(toVal,fromVal);}}return to;}/**
 * Data
 */function mergeDataOrFn(parentVal,childVal,vm){if(!vm){// in a Vue.extend merge, both should be functions
if(!childVal){return parentVal;}if(!parentVal){return childVal;}// when parentVal & childVal are both present,
// we need to return a function that returns the
// merged result of both functions... no need to
// check if parentVal is a function here because
// it has to be a function to pass previous merges.
return function mergedDataFn(){return mergeData(typeof childVal==='function'?childVal.call(this):childVal,typeof parentVal==='function'?parentVal.call(this):parentVal);};}else if(parentVal||childVal){return function mergedInstanceDataFn(){// instance merge
var instanceData=typeof childVal==='function'?childVal.call(vm):childVal;var defaultData=typeof parentVal==='function'?parentVal.call(vm):undefined;if(instanceData){return mergeData(instanceData,defaultData);}else{return defaultData;}};}}strats.data=function(parentVal,childVal,vm){if(!vm){if(childVal&&typeof childVal!=='function'){"development"!=='production'&&warn('The "data" option should be a function '+'that returns a per-instance value in component '+'definitions.',vm);return parentVal;}return mergeDataOrFn.call(this,parentVal,childVal);}return mergeDataOrFn(parentVal,childVal,vm);};/**
 * Hooks and props are merged as arrays.
 */function mergeHook(parentVal,childVal){return childVal?parentVal?parentVal.concat(childVal):Array.isArray(childVal)?childVal:[childVal]:parentVal;}LIFECYCLE_HOOKS.forEach(function(hook){strats[hook]=mergeHook;});/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */function mergeAssets(parentVal,childVal){var res=Object.create(parentVal||null);return childVal?extend(res,childVal):res;}ASSET_TYPES.forEach(function(type){strats[type+'s']=mergeAssets;});/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */strats.watch=function(parentVal,childVal){// work around Firefox's Object.prototype.watch...
if(parentVal===nativeWatch){parentVal=undefined;}if(childVal===nativeWatch){childVal=undefined;}/* istanbul ignore if */if(!childVal){return Object.create(parentVal||null);}if(!parentVal){return childVal;}var ret={};extend(ret,parentVal);for(var key in childVal){var parent=ret[key];var child=childVal[key];if(parent&&!Array.isArray(parent)){parent=[parent];}ret[key]=parent?parent.concat(child):Array.isArray(child)?child:[child];}return ret;};/**
 * Other object hashes.
 */strats.props=strats.methods=strats.inject=strats.computed=function(parentVal,childVal){if(!parentVal){return childVal;}var ret=Object.create(null);extend(ret,parentVal);if(childVal){extend(ret,childVal);}return ret;};strats.provide=mergeDataOrFn;/**
 * Default strategy.
 */var defaultStrat=function defaultStrat(parentVal,childVal){return childVal===undefined?parentVal:childVal;};/**
 * Validate component names
 */function checkComponents(options){for(var key in options.components){var lower=key.toLowerCase();if(isBuiltInTag(lower)||config.isReservedTag(lower)){warn('Do not use built-in or reserved HTML elements as component '+'id: '+key);}}}/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */function normalizeProps(options){var props=options.props;if(!props){return;}var res={};var i,val,name;if(Array.isArray(props)){i=props.length;while(i--){val=props[i];if(typeof val==='string'){name=camelize(val);res[name]={type:null};}else{warn('props must be strings when using array syntax.');}}}else if(isPlainObject(props)){for(var key in props){val=props[key];name=camelize(key);res[name]=isPlainObject(val)?val:{type:val};}}options.props=res;}/**
 * Normalize all injections into Object-based format
 */function normalizeInject(options){var inject=options.inject;if(Array.isArray(inject)){var normalized=options.inject={};for(var i=0;i<inject.length;i++){normalized[inject[i]]=inject[i];}}}/**
 * Normalize raw function directives into object format.
 */function normalizeDirectives(options){var dirs=options.directives;if(dirs){for(var key in dirs){var def=dirs[key];if(typeof def==='function'){dirs[key]={bind:def,update:def};}}}}/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */function mergeOptions(parent,child,vm){{checkComponents(child);}if(typeof child==='function'){child=child.options;}normalizeProps(child);normalizeInject(child);normalizeDirectives(child);var extendsFrom=child.extends;if(extendsFrom){parent=mergeOptions(parent,extendsFrom,vm);}if(child.mixins){for(var i=0,l=child.mixins.length;i<l;i++){parent=mergeOptions(parent,child.mixins[i],vm);}}var options={};var key;for(key in parent){mergeField(key);}for(key in child){if(!hasOwn(parent,key)){mergeField(key);}}function mergeField(key){var strat=strats[key]||defaultStrat;options[key]=strat(parent[key],child[key],vm,key);}return options;}/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */function resolveAsset(options,type,id,warnMissing){/* istanbul ignore if */if(typeof id!=='string'){return;}var assets=options[type];// check local registration variations first
if(hasOwn(assets,id)){return assets[id];}var camelizedId=camelize(id);if(hasOwn(assets,camelizedId)){return assets[camelizedId];}var PascalCaseId=capitalize(camelizedId);if(hasOwn(assets,PascalCaseId)){return assets[PascalCaseId];}// fallback to prototype chain
var res=assets[id]||assets[camelizedId]||assets[PascalCaseId];if("development"!=='production'&&warnMissing&&!res){warn('Failed to resolve '+type.slice(0,-1)+': '+id,options);}return res;}/*  */function validateProp(key,propOptions,propsData,vm){var prop=propOptions[key];var absent=!hasOwn(propsData,key);var value=propsData[key];// handle boolean props
if(isType(Boolean,prop.type)){if(absent&&!hasOwn(prop,'default')){value=false;}else if(!isType(String,prop.type)&&(value===''||value===hyphenate(key))){value=true;}}// check default value
if(value===undefined){value=getPropDefaultValue(vm,prop,key);// since the default value is a fresh copy,
// make sure to observe it.
var prevShouldConvert=observerState.shouldConvert;observerState.shouldConvert=true;observe(value);observerState.shouldConvert=prevShouldConvert;}{assertProp(prop,key,value,vm,absent);}return value;}/**
 * Get the default value of a prop.
 */function getPropDefaultValue(vm,prop,key){// no default, return undefined
if(!hasOwn(prop,'default')){return undefined;}var def=prop.default;// warn against non-factory defaults for Object & Array
if("development"!=='production'&&isObject(def)){warn('Invalid default value for prop "'+key+'": '+'Props with type Object/Array must use a factory function '+'to return the default value.',vm);}// the raw prop value was also undefined from previous render,
// return previous default value to avoid unnecessary watcher trigger
if(vm&&vm.$options.propsData&&vm.$options.propsData[key]===undefined&&vm._props[key]!==undefined){return vm._props[key];}// call factory function for non-Function types
// a value is Function if its prototype is function even across different execution context
return typeof def==='function'&&getType(prop.type)!=='Function'?def.call(vm):def;}/**
 * Assert whether a prop is valid.
 */function assertProp(prop,name,value,vm,absent){if(prop.required&&absent){warn('Missing required prop: "'+name+'"',vm);return;}if(value==null&&!prop.required){return;}var type=prop.type;var valid=!type||type===true;var expectedTypes=[];if(type){if(!Array.isArray(type)){type=[type];}for(var i=0;i<type.length&&!valid;i++){var assertedType=assertType(value,type[i]);expectedTypes.push(assertedType.expectedType||'');valid=assertedType.valid;}}if(!valid){warn('Invalid prop: type check failed for prop "'+name+'".'+' Expected '+expectedTypes.map(capitalize).join(', ')+', got '+Object.prototype.toString.call(value).slice(8,-1)+'.',vm);return;}var validator=prop.validator;if(validator){if(!validator(value)){warn('Invalid prop: custom validator check failed for prop "'+name+'".',vm);}}}var simpleCheckRE=/^(String|Number|Boolean|Function|Symbol)$/;function assertType(value,type){var valid;var expectedType=getType(type);if(simpleCheckRE.test(expectedType)){valid=(typeof value==='undefined'?'undefined':_typeof(value))===expectedType.toLowerCase();}else if(expectedType==='Object'){valid=isPlainObject(value);}else if(expectedType==='Array'){valid=Array.isArray(value);}else{valid=value instanceof type;}return{valid:valid,expectedType:expectedType};}/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */function getType(fn){var match=fn&&fn.toString().match(/^\s*function (\w+)/);return match?match[1]:'';}function isType(type,fn){if(!Array.isArray(fn)){return getType(fn)===getType(type);}for(var i=0,len=fn.length;i<len;i++){if(getType(fn[i])===getType(type)){return true;}}/* istanbul ignore next */return false;}/*  */var mark;var measure;{var perf=inBrowser&&window.performance;/* istanbul ignore if */if(perf&&perf.mark&&perf.measure&&perf.clearMarks&&perf.clearMeasures){mark=function mark(tag){return perf.mark(tag);};measure=function measure(name,startTag,endTag){perf.measure(name,startTag,endTag);perf.clearMarks(startTag);perf.clearMarks(endTag);perf.clearMeasures(name);};}}/* not type checking this file because flow doesn't play well with Proxy */var initProxy;{var allowedGlobals=makeMap('Infinity,undefined,NaN,isFinite,isNaN,'+'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,'+'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,'+'require'// for Webpack/Browserify
);var warnNonPresent=function warnNonPresent(target,key){warn("Property or method \""+key+"\" is not defined on the instance but "+"referenced during render. Make sure to declare reactive data "+"properties in the data option.",target);};var hasProxy=typeof Proxy!=='undefined'&&Proxy.toString().match(/native code/);if(hasProxy){var isBuiltInModifier=makeMap('stop,prevent,self,ctrl,shift,alt,meta');config.keyCodes=new Proxy(config.keyCodes,{set:function set(target,key,value){if(isBuiltInModifier(key)){warn("Avoid overwriting built-in modifier in config.keyCodes: ."+key);return false;}else{target[key]=value;return true;}}});}var hasHandler={has:function has(target,key){var has=key in target;var isAllowed=allowedGlobals(key)||key.charAt(0)==='_';if(!has&&!isAllowed){warnNonPresent(target,key);}return has||!isAllowed;}};var getHandler={get:function get(target,key){if(typeof key==='string'&&!(key in target)){warnNonPresent(target,key);}return target[key];}};initProxy=function initProxy(vm){if(hasProxy){// determine which proxy handler to use
var options=vm.$options;var handlers=options.render&&options.render._withStripped?getHandler:hasHandler;vm._renderProxy=new Proxy(vm,handlers);}else{vm._renderProxy=vm;}};}/*  */var VNode=function VNode(tag,data,children,text,elm,context,componentOptions,asyncFactory){this.tag=tag;this.data=data;this.children=children;this.text=text;this.elm=elm;this.ns=undefined;this.context=context;this.functionalContext=undefined;this.key=data&&data.key;this.componentOptions=componentOptions;this.componentInstance=undefined;this.parent=undefined;this.raw=false;this.isStatic=false;this.isRootInsert=true;this.isComment=false;this.isCloned=false;this.isOnce=false;this.asyncFactory=asyncFactory;this.asyncMeta=undefined;this.isAsyncPlaceholder=false;};var prototypeAccessors={child:{}};// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */prototypeAccessors.child.get=function(){return this.componentInstance;};Object.defineProperties(VNode.prototype,prototypeAccessors);var createEmptyVNode=function createEmptyVNode(text){if(text===void 0)text='';var node=new VNode();node.text=text;node.isComment=true;return node;};function createTextVNode(val){return new VNode(undefined,undefined,undefined,String(val));}// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode(vnode){var cloned=new VNode(vnode.tag,vnode.data,vnode.children,vnode.text,vnode.elm,vnode.context,vnode.componentOptions,vnode.asyncFactory);cloned.ns=vnode.ns;cloned.isStatic=vnode.isStatic;cloned.key=vnode.key;cloned.isComment=vnode.isComment;cloned.isCloned=true;return cloned;}function cloneVNodes(vnodes){var len=vnodes.length;var res=new Array(len);for(var i=0;i<len;i++){res[i]=cloneVNode(vnodes[i]);}return res;}/*  */var normalizeEvent=cached(function(name){var passive=name.charAt(0)==='&';name=passive?name.slice(1):name;var once$$1=name.charAt(0)==='~';// Prefixed last, checked first
name=once$$1?name.slice(1):name;var capture=name.charAt(0)==='!';name=capture?name.slice(1):name;return{name:name,once:once$$1,capture:capture,passive:passive};});function createFnInvoker(fns){function invoker(){var arguments$1=arguments;var fns=invoker.fns;if(Array.isArray(fns)){var cloned=fns.slice();for(var i=0;i<cloned.length;i++){cloned[i].apply(null,arguments$1);}}else{// return handler return value for single handlers
return fns.apply(null,arguments);}}invoker.fns=fns;return invoker;}function updateListeners(on,oldOn,add,remove$$1,vm){var name,cur,old,event;for(name in on){cur=on[name];old=oldOn[name];event=normalizeEvent(name);if(isUndef(cur)){"development"!=='production'&&warn("Invalid handler for event \""+event.name+"\": got "+String(cur),vm);}else if(isUndef(old)){if(isUndef(cur.fns)){cur=on[name]=createFnInvoker(cur);}add(event.name,cur,event.once,event.capture,event.passive);}else if(cur!==old){old.fns=cur;on[name]=old;}}for(name in oldOn){if(isUndef(on[name])){event=normalizeEvent(name);remove$$1(event.name,oldOn[name],event.capture);}}}/*  */function mergeVNodeHook(def,hookKey,hook){var invoker;var oldHook=def[hookKey];function wrappedHook(){hook.apply(this,arguments);// important: remove merged hook to ensure it's called only once
// and prevent memory leak
remove(invoker.fns,wrappedHook);}if(isUndef(oldHook)){// no existing hook
invoker=createFnInvoker([wrappedHook]);}else{/* istanbul ignore if */if(isDef(oldHook.fns)&&isTrue(oldHook.merged)){// already a merged invoker
invoker=oldHook;invoker.fns.push(wrappedHook);}else{// existing plain hook
invoker=createFnInvoker([oldHook,wrappedHook]);}}invoker.merged=true;def[hookKey]=invoker;}/*  */function extractPropsFromVNodeData(data,Ctor,tag){// we are only extracting raw values here.
// validation and default values are handled in the child
// component itself.
var propOptions=Ctor.options.props;if(isUndef(propOptions)){return;}var res={};var attrs=data.attrs;var props=data.props;if(isDef(attrs)||isDef(props)){for(var key in propOptions){var altKey=hyphenate(key);{var keyInLowerCase=key.toLowerCase();if(key!==keyInLowerCase&&attrs&&hasOwn(attrs,keyInLowerCase)){tip("Prop \""+keyInLowerCase+"\" is passed to component "+formatComponentName(tag||Ctor)+", but the declared prop name is"+" \""+key+"\". "+"Note that HTML attributes are case-insensitive and camelCased "+"props need to use their kebab-case equivalents when using in-DOM "+"templates. You should probably use \""+altKey+"\" instead of \""+key+"\".");}}checkProp(res,props,key,altKey,true)||checkProp(res,attrs,key,altKey,false);}}return res;}function checkProp(res,hash,key,altKey,preserve){if(isDef(hash)){if(hasOwn(hash,key)){res[key]=hash[key];if(!preserve){delete hash[key];}return true;}else if(hasOwn(hash,altKey)){res[key]=hash[altKey];if(!preserve){delete hash[altKey];}return true;}}return false;}/*  */// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:
// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren(children){for(var i=0;i<children.length;i++){if(Array.isArray(children[i])){return Array.prototype.concat.apply([],children);}}return children;}// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren(children){return isPrimitive(children)?[createTextVNode(children)]:Array.isArray(children)?normalizeArrayChildren(children):undefined;}function isTextNode(node){return isDef(node)&&isDef(node.text)&&isFalse(node.isComment);}function normalizeArrayChildren(children,nestedIndex){var res=[];var i,c,last;for(i=0;i<children.length;i++){c=children[i];if(isUndef(c)||typeof c==='boolean'){continue;}last=res[res.length-1];//  nested
if(Array.isArray(c)){res.push.apply(res,normalizeArrayChildren(c,(nestedIndex||'')+"_"+i));}else if(isPrimitive(c)){if(isTextNode(last)){// merge adjacent text nodes
// this is necessary for SSR hydration because text nodes are
// essentially merged when rendered to HTML strings
last.text+=String(c);}else if(c!==''){// convert primitive to vnode
res.push(createTextVNode(c));}}else{if(isTextNode(c)&&isTextNode(last)){// merge adjacent text nodes
res[res.length-1]=createTextVNode(last.text+c.text);}else{// default key for nested array children (likely generated by v-for)
if(isTrue(children._isVList)&&isDef(c.tag)&&isUndef(c.key)&&isDef(nestedIndex)){c.key="__vlist"+nestedIndex+"_"+i+"__";}res.push(c);}}}return res;}/*  */function ensureCtor(comp,base){if(comp.__esModule&&comp.default){comp=comp.default;}return isObject(comp)?base.extend(comp):comp;}function createAsyncPlaceholder(factory,data,context,children,tag){var node=createEmptyVNode();node.asyncFactory=factory;node.asyncMeta={data:data,context:context,children:children,tag:tag};return node;}function resolveAsyncComponent(factory,baseCtor,context){if(isTrue(factory.error)&&isDef(factory.errorComp)){return factory.errorComp;}if(isDef(factory.resolved)){return factory.resolved;}if(isTrue(factory.loading)&&isDef(factory.loadingComp)){return factory.loadingComp;}if(isDef(factory.contexts)){// already pending
factory.contexts.push(context);}else{var contexts=factory.contexts=[context];var sync=true;var forceRender=function forceRender(){for(var i=0,l=contexts.length;i<l;i++){contexts[i].$forceUpdate();}};var resolve=once(function(res){// cache resolved
factory.resolved=ensureCtor(res,baseCtor);// invoke callbacks only if this is not a synchronous resolve
// (async resolves are shimmed as synchronous during SSR)
if(!sync){forceRender();}});var reject=once(function(reason){"development"!=='production'&&warn("Failed to resolve async component: "+String(factory)+(reason?"\nReason: "+reason:''));if(isDef(factory.errorComp)){factory.error=true;forceRender();}});var res=factory(resolve,reject);if(isObject(res)){if(typeof res.then==='function'){// () => Promise
if(isUndef(factory.resolved)){res.then(resolve,reject);}}else if(isDef(res.component)&&typeof res.component.then==='function'){res.component.then(resolve,reject);if(isDef(res.error)){factory.errorComp=ensureCtor(res.error,baseCtor);}if(isDef(res.loading)){factory.loadingComp=ensureCtor(res.loading,baseCtor);if(res.delay===0){factory.loading=true;}else{setTimeout(function(){if(isUndef(factory.resolved)&&isUndef(factory.error)){factory.loading=true;forceRender();}},res.delay||200);}}if(isDef(res.timeout)){setTimeout(function(){if(isUndef(factory.resolved)){reject("timeout ("+res.timeout+"ms)");}},res.timeout);}}}sync=false;// return in case resolved synchronously
return factory.loading?factory.loadingComp:factory.resolved;}}/*  */function getFirstComponentChild(children){if(Array.isArray(children)){for(var i=0;i<children.length;i++){var c=children[i];if(isDef(c)&&isDef(c.componentOptions)){return c;}}}}/*  *//*  */function initEvents(vm){vm._events=Object.create(null);vm._hasHookEvent=false;// init parent attached events
var listeners=vm.$options._parentListeners;if(listeners){updateComponentListeners(vm,listeners);}}var target;function add(event,fn,once$$1){if(once$$1){target.$once(event,fn);}else{target.$on(event,fn);}}function remove$1(event,fn){target.$off(event,fn);}function updateComponentListeners(vm,listeners,oldListeners){target=vm;updateListeners(listeners,oldListeners||{},add,remove$1,vm);}function eventsMixin(Vue){var hookRE=/^hook:/;Vue.prototype.$on=function(event,fn){var this$1=this;var vm=this;if(Array.isArray(event)){for(var i=0,l=event.length;i<l;i++){this$1.$on(event[i],fn);}}else{(vm._events[event]||(vm._events[event]=[])).push(fn);// optimize hook:event cost by using a boolean flag marked at registration
// instead of a hash lookup
if(hookRE.test(event)){vm._hasHookEvent=true;}}return vm;};Vue.prototype.$once=function(event,fn){var vm=this;function on(){vm.$off(event,on);fn.apply(vm,arguments);}on.fn=fn;vm.$on(event,on);return vm;};Vue.prototype.$off=function(event,fn){var this$1=this;var vm=this;// all
if(!arguments.length){vm._events=Object.create(null);return vm;}// array of events
if(Array.isArray(event)){for(var i$1=0,l=event.length;i$1<l;i$1++){this$1.$off(event[i$1],fn);}return vm;}// specific event
var cbs=vm._events[event];if(!cbs){return vm;}if(arguments.length===1){vm._events[event]=null;return vm;}// specific handler
var cb;var i=cbs.length;while(i--){cb=cbs[i];if(cb===fn||cb.fn===fn){cbs.splice(i,1);break;}}return vm;};Vue.prototype.$emit=function(event){var vm=this;{var lowerCaseEvent=event.toLowerCase();if(lowerCaseEvent!==event&&vm._events[lowerCaseEvent]){tip("Event \""+lowerCaseEvent+"\" is emitted in component "+formatComponentName(vm)+" but the handler is registered for \""+event+"\". "+"Note that HTML attributes are case-insensitive and you cannot use "+"v-on to listen to camelCase events when using in-DOM templates. "+"You should probably use \""+hyphenate(event)+"\" instead of \""+event+"\".");}}var cbs=vm._events[event];if(cbs){cbs=cbs.length>1?toArray(cbs):cbs;var args=toArray(arguments,1);for(var i=0,l=cbs.length;i<l;i++){try{cbs[i].apply(vm,args);}catch(e){handleError(e,vm,"event handler for \""+event+"\"");}}}return vm;};}/*  *//**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */function resolveSlots(children,context){var slots={};if(!children){return slots;}var defaultSlot=[];for(var i=0,l=children.length;i<l;i++){var child=children[i];// named slots should only be respected if the vnode was rendered in the
// same context.
if((child.context===context||child.functionalContext===context)&&child.data&&child.data.slot!=null){var name=child.data.slot;var slot=slots[name]||(slots[name]=[]);if(child.tag==='template'){slot.push.apply(slot,child.children);}else{slot.push(child);}}else{defaultSlot.push(child);}}// ignore whitespace
if(!defaultSlot.every(isWhitespace)){slots.default=defaultSlot;}return slots;}function isWhitespace(node){return node.isComment||node.text===' ';}function resolveScopedSlots(fns,// see flow/vnode
res){res=res||{};for(var i=0;i<fns.length;i++){if(Array.isArray(fns[i])){resolveScopedSlots(fns[i],res);}else{res[fns[i].key]=fns[i].fn;}}return res;}/*  */var activeInstance=null;var isUpdatingChildComponent=false;function initLifecycle(vm){var options=vm.$options;// locate first non-abstract parent
var parent=options.parent;if(parent&&!options.abstract){while(parent.$options.abstract&&parent.$parent){parent=parent.$parent;}parent.$children.push(vm);}vm.$parent=parent;vm.$root=parent?parent.$root:vm;vm.$children=[];vm.$refs={};vm._watcher=null;vm._inactive=null;vm._directInactive=false;vm._isMounted=false;vm._isDestroyed=false;vm._isBeingDestroyed=false;}function lifecycleMixin(Vue){Vue.prototype._update=function(vnode,hydrating){var vm=this;if(vm._isMounted){callHook(vm,'beforeUpdate');}var prevEl=vm.$el;var prevVnode=vm._vnode;var prevActiveInstance=activeInstance;activeInstance=vm;vm._vnode=vnode;// Vue.prototype.__patch__ is injected in entry points
// based on the rendering backend used.
if(!prevVnode){// initial render
vm.$el=vm.__patch__(vm.$el,vnode,hydrating,false/* removeOnly */,vm.$options._parentElm,vm.$options._refElm);// no need for the ref nodes after initial patch
// this prevents keeping a detached DOM tree in memory (#5851)
vm.$options._parentElm=vm.$options._refElm=null;}else{// updates
vm.$el=vm.__patch__(prevVnode,vnode);}activeInstance=prevActiveInstance;// update __vue__ reference
if(prevEl){prevEl.__vue__=null;}if(vm.$el){vm.$el.__vue__=vm;}// if parent is an HOC, update its $el as well
if(vm.$vnode&&vm.$parent&&vm.$vnode===vm.$parent._vnode){vm.$parent.$el=vm.$el;}// updated hook is called by the scheduler to ensure that children are
// updated in a parent's updated hook.
};Vue.prototype.$forceUpdate=function(){var vm=this;if(vm._watcher){vm._watcher.update();}};Vue.prototype.$destroy=function(){var vm=this;if(vm._isBeingDestroyed){return;}callHook(vm,'beforeDestroy');vm._isBeingDestroyed=true;// remove self from parent
var parent=vm.$parent;if(parent&&!parent._isBeingDestroyed&&!vm.$options.abstract){remove(parent.$children,vm);}// teardown watchers
if(vm._watcher){vm._watcher.teardown();}var i=vm._watchers.length;while(i--){vm._watchers[i].teardown();}// remove reference from data ob
// frozen object may not have observer.
if(vm._data.__ob__){vm._data.__ob__.vmCount--;}// call the last hook...
vm._isDestroyed=true;// invoke destroy hooks on current rendered tree
vm.__patch__(vm._vnode,null);// fire destroyed hook
callHook(vm,'destroyed');// turn off all instance listeners.
vm.$off();// remove __vue__ reference
if(vm.$el){vm.$el.__vue__=null;}};}function mountComponent(vm,el,hydrating){vm.$el=el;if(!vm.$options.render){vm.$options.render=createEmptyVNode;{/* istanbul ignore if */if(vm.$options.template&&vm.$options.template.charAt(0)!=='#'||vm.$options.el||el){warn('You are using the runtime-only build of Vue where the template '+'compiler is not available. Either pre-compile the templates into '+'render functions, or use the compiler-included build.',vm);}else{warn('Failed to mount component: template or render function not defined.',vm);}}}callHook(vm,'beforeMount');var updateComponent;/* istanbul ignore if */if("development"!=='production'&&config.performance&&mark){updateComponent=function updateComponent(){var name=vm._name;var id=vm._uid;var startTag="vue-perf-start:"+id;var endTag="vue-perf-end:"+id;mark(startTag);var vnode=vm._render();mark(endTag);measure(name+" render",startTag,endTag);mark(startTag);vm._update(vnode,hydrating);mark(endTag);measure(name+" patch",startTag,endTag);};}else{updateComponent=function updateComponent(){vm._update(vm._render(),hydrating);};}vm._watcher=new Watcher(vm,updateComponent,noop);hydrating=false;// manually mounted instance, call mounted on self
// mounted is called for render-created child components in its inserted hook
if(vm.$vnode==null){vm._isMounted=true;callHook(vm,'mounted');}return vm;}function updateChildComponent(vm,propsData,listeners,parentVnode,renderChildren){{isUpdatingChildComponent=true;}// determine whether component has slot children
// we need to do this before overwriting $options._renderChildren
var hasChildren=!!(renderChildren||// has new static slots
vm.$options._renderChildren||// has old static slots
parentVnode.data.scopedSlots||// has new scoped slots
vm.$scopedSlots!==emptyObject// has old scoped slots
);vm.$options._parentVnode=parentVnode;vm.$vnode=parentVnode;// update vm's placeholder node without re-render
if(vm._vnode){// update child tree's parent
vm._vnode.parent=parentVnode;}vm.$options._renderChildren=renderChildren;// update $attrs and $listensers hash
// these are also reactive so they may trigger child update if the child
// used them during render
vm.$attrs=parentVnode.data&&parentVnode.data.attrs;vm.$listeners=listeners;// update props
if(propsData&&vm.$options.props){observerState.shouldConvert=false;var props=vm._props;var propKeys=vm.$options._propKeys||[];for(var i=0;i<propKeys.length;i++){var key=propKeys[i];props[key]=validateProp(key,vm.$options.props,propsData,vm);}observerState.shouldConvert=true;// keep a copy of raw propsData
vm.$options.propsData=propsData;}// update listeners
if(listeners){var oldListeners=vm.$options._parentListeners;vm.$options._parentListeners=listeners;updateComponentListeners(vm,listeners,oldListeners);}// resolve slots + force update if has children
if(hasChildren){vm.$slots=resolveSlots(renderChildren,parentVnode.context);vm.$forceUpdate();}{isUpdatingChildComponent=false;}}function isInInactiveTree(vm){while(vm&&(vm=vm.$parent)){if(vm._inactive){return true;}}return false;}function activateChildComponent(vm,direct){if(direct){vm._directInactive=false;if(isInInactiveTree(vm)){return;}}else if(vm._directInactive){return;}if(vm._inactive||vm._inactive===null){vm._inactive=false;for(var i=0;i<vm.$children.length;i++){activateChildComponent(vm.$children[i]);}callHook(vm,'activated');}}function deactivateChildComponent(vm,direct){if(direct){vm._directInactive=true;if(isInInactiveTree(vm)){return;}}if(!vm._inactive){vm._inactive=true;for(var i=0;i<vm.$children.length;i++){deactivateChildComponent(vm.$children[i]);}callHook(vm,'deactivated');}}function callHook(vm,hook){var handlers=vm.$options[hook];if(handlers){for(var i=0,j=handlers.length;i<j;i++){try{handlers[i].call(vm);}catch(e){handleError(e,vm,hook+" hook");}}}if(vm._hasHookEvent){vm.$emit('hook:'+hook);}}/*  */var MAX_UPDATE_COUNT=100;var queue=[];var activatedChildren=[];var has={};var circular={};var waiting=false;var flushing=false;var index=0;/**
 * Reset the scheduler's state.
 */function resetSchedulerState(){index=queue.length=activatedChildren.length=0;has={};{circular={};}waiting=flushing=false;}/**
 * Flush both queues and run the watchers.
 */function flushSchedulerQueue(){flushing=true;var watcher,id;// Sort queue before flush.
// This ensures that:
// 1. Components are updated from parent to child. (because parent is always
//    created before the child)
// 2. A component's user watchers are run before its render watcher (because
//    user watchers are created before the render watcher)
// 3. If a component is destroyed during a parent component's watcher run,
//    its watchers can be skipped.
queue.sort(function(a,b){return a.id-b.id;});// do not cache length because more watchers might be pushed
// as we run existing watchers
for(index=0;index<queue.length;index++){watcher=queue[index];id=watcher.id;has[id]=null;watcher.run();// in dev build, check and stop circular updates.
if("development"!=='production'&&has[id]!=null){circular[id]=(circular[id]||0)+1;if(circular[id]>MAX_UPDATE_COUNT){warn('You may have an infinite update loop '+(watcher.user?"in watcher with expression \""+watcher.expression+"\"":"in a component render function."),watcher.vm);break;}}}// keep copies of post queues before resetting state
var activatedQueue=activatedChildren.slice();var updatedQueue=queue.slice();resetSchedulerState();// call component updated and activated hooks
callActivatedHooks(activatedQueue);callUpdatedHooks(updatedQueue);// devtool hook
/* istanbul ignore if */if(devtools&&config.devtools){devtools.emit('flush');}}function callUpdatedHooks(queue){var i=queue.length;while(i--){var watcher=queue[i];var vm=watcher.vm;if(vm._watcher===watcher&&vm._isMounted){callHook(vm,'updated');}}}/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */function queueActivatedComponent(vm){// setting _inactive to false here so that a render function can
// rely on checking whether it's in an inactive tree (e.g. router-view)
vm._inactive=false;activatedChildren.push(vm);}function callActivatedHooks(queue){for(var i=0;i<queue.length;i++){queue[i]._inactive=true;activateChildComponent(queue[i],true/* true */);}}/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */function queueWatcher(watcher){var id=watcher.id;if(has[id]==null){has[id]=true;if(!flushing){queue.push(watcher);}else{// if already flushing, splice the watcher based on its id
// if already past its id, it will be run next immediately.
var i=queue.length-1;while(i>index&&queue[i].id>watcher.id){i--;}queue.splice(i+1,0,watcher);}// queue the flush
if(!waiting){waiting=true;nextTick(flushSchedulerQueue);}}}/*  */var uid$2=0;/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */var Watcher=function Watcher(vm,expOrFn,cb,options){this.vm=vm;vm._watchers.push(this);// options
if(options){this.deep=!!options.deep;this.user=!!options.user;this.lazy=!!options.lazy;this.sync=!!options.sync;}else{this.deep=this.user=this.lazy=this.sync=false;}this.cb=cb;this.id=++uid$2;// uid for batching
this.active=true;this.dirty=this.lazy;// for lazy watchers
this.deps=[];this.newDeps=[];this.depIds=new _Set();this.newDepIds=new _Set();this.expression=expOrFn.toString();// parse expression for getter
if(typeof expOrFn==='function'){this.getter=expOrFn;}else{this.getter=parsePath(expOrFn);if(!this.getter){this.getter=function(){};"development"!=='production'&&warn("Failed watching path: \""+expOrFn+"\" "+'Watcher only accepts simple dot-delimited paths. '+'For full control, use a function instead.',vm);}}this.value=this.lazy?undefined:this.get();};/**
 * Evaluate the getter, and re-collect dependencies.
 */Watcher.prototype.get=function get(){pushTarget(this);var value;var vm=this.vm;try{value=this.getter.call(vm,vm);}catch(e){if(this.user){handleError(e,vm,"getter for watcher \""+this.expression+"\"");}else{throw e;}}finally{// "touch" every property so they are all tracked as
// dependencies for deep watching
if(this.deep){traverse(value);}popTarget();this.cleanupDeps();}return value;};/**
 * Add a dependency to this directive.
 */Watcher.prototype.addDep=function addDep(dep){var id=dep.id;if(!this.newDepIds.has(id)){this.newDepIds.add(id);this.newDeps.push(dep);if(!this.depIds.has(id)){dep.addSub(this);}}};/**
 * Clean up for dependency collection.
 */Watcher.prototype.cleanupDeps=function cleanupDeps(){var this$1=this;var i=this.deps.length;while(i--){var dep=this$1.deps[i];if(!this$1.newDepIds.has(dep.id)){dep.removeSub(this$1);}}var tmp=this.depIds;this.depIds=this.newDepIds;this.newDepIds=tmp;this.newDepIds.clear();tmp=this.deps;this.deps=this.newDeps;this.newDeps=tmp;this.newDeps.length=0;};/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */Watcher.prototype.update=function update(){/* istanbul ignore else */if(this.lazy){this.dirty=true;}else if(this.sync){this.run();}else{queueWatcher(this);}};/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */Watcher.prototype.run=function run(){if(this.active){var value=this.get();if(value!==this.value||// Deep watchers and watchers on Object/Arrays should fire even
// when the value is the same, because the value may
// have mutated.
isObject(value)||this.deep){// set new value
var oldValue=this.value;this.value=value;if(this.user){try{this.cb.call(this.vm,value,oldValue);}catch(e){handleError(e,this.vm,"callback for watcher \""+this.expression+"\"");}}else{this.cb.call(this.vm,value,oldValue);}}}};/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */Watcher.prototype.evaluate=function evaluate(){this.value=this.get();this.dirty=false;};/**
 * Depend on all deps collected by this watcher.
 */Watcher.prototype.depend=function depend(){var this$1=this;var i=this.deps.length;while(i--){this$1.deps[i].depend();}};/**
 * Remove self from all dependencies' subscriber list.
 */Watcher.prototype.teardown=function teardown(){var this$1=this;if(this.active){// remove self from vm's watcher list
// this is a somewhat expensive operation so we skip it
// if the vm is being destroyed.
if(!this.vm._isBeingDestroyed){remove(this.vm._watchers,this);}var i=this.deps.length;while(i--){this$1.deps[i].removeSub(this$1);}this.active=false;}};/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */var seenObjects=new _Set();function traverse(val){seenObjects.clear();_traverse(val,seenObjects);}function _traverse(val,seen){var i,keys;var isA=Array.isArray(val);if(!isA&&!isObject(val)||!Object.isExtensible(val)){return;}if(val.__ob__){var depId=val.__ob__.dep.id;if(seen.has(depId)){return;}seen.add(depId);}if(isA){i=val.length;while(i--){_traverse(val[i],seen);}}else{keys=Object.keys(val);i=keys.length;while(i--){_traverse(val[keys[i]],seen);}}}/*  */var sharedPropertyDefinition={enumerable:true,configurable:true,get:noop,set:noop};function proxy(target,sourceKey,key){sharedPropertyDefinition.get=function proxyGetter(){return this[sourceKey][key];};sharedPropertyDefinition.set=function proxySetter(val){this[sourceKey][key]=val;};Object.defineProperty(target,key,sharedPropertyDefinition);}function initState(vm){vm._watchers=[];var opts=vm.$options;if(opts.props){initProps(vm,opts.props);}if(opts.methods){initMethods(vm,opts.methods);}if(opts.data){initData(vm);}else{observe(vm._data={},true/* asRootData */);}if(opts.computed){initComputed(vm,opts.computed);}if(opts.watch&&opts.watch!==nativeWatch){initWatch(vm,opts.watch);}}function checkOptionType(vm,name){var option=vm.$options[name];if(!isPlainObject(option)){warn("component option \""+name+"\" should be an object.",vm);}}function initProps(vm,propsOptions){var propsData=vm.$options.propsData||{};var props=vm._props={};// cache prop keys so that future props updates can iterate using Array
// instead of dynamic object key enumeration.
var keys=vm.$options._propKeys=[];var isRoot=!vm.$parent;// root instance props should be converted
observerState.shouldConvert=isRoot;var loop=function loop(key){keys.push(key);var value=validateProp(key,propsOptions,propsData,vm);/* istanbul ignore else */{if(isReservedAttribute(key)||config.isReservedAttr(key)){warn("\""+key+"\" is a reserved attribute and cannot be used as component prop.",vm);}defineReactive$$1(props,key,value,function(){if(vm.$parent&&!isUpdatingChildComponent){warn("Avoid mutating a prop directly since the value will be "+"overwritten whenever the parent component re-renders. "+"Instead, use a data or computed property based on the prop's "+"value. Prop being mutated: \""+key+"\"",vm);}});}// static props are already proxied on the component's prototype
// during Vue.extend(). We only need to proxy props defined at
// instantiation here.
if(!(key in vm)){proxy(vm,"_props",key);}};for(var key in propsOptions){loop(key);}observerState.shouldConvert=true;}function initData(vm){var data=vm.$options.data;data=vm._data=typeof data==='function'?getData(data,vm):data||{};if(!isPlainObject(data)){data={};"development"!=='production'&&warn('data functions should return an object:\n'+'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',vm);}// proxy data on instance
var keys=Object.keys(data);var props=vm.$options.props;var methods=vm.$options.methods;var i=keys.length;while(i--){var key=keys[i];{if(methods&&hasOwn(methods,key)){warn("method \""+key+"\" has already been defined as a data property.",vm);}}if(props&&hasOwn(props,key)){"development"!=='production'&&warn("The data property \""+key+"\" is already declared as a prop. "+"Use prop default value instead.",vm);}else if(!isReserved(key)){proxy(vm,"_data",key);}}// observe data
observe(data,true/* asRootData */);}function getData(data,vm){try{return data.call(vm);}catch(e){handleError(e,vm,"data()");return{};}}var computedWatcherOptions={lazy:true};function initComputed(vm,computed){"development"!=='production'&&checkOptionType(vm,'computed');var watchers=vm._computedWatchers=Object.create(null);for(var key in computed){var userDef=computed[key];var getter=typeof userDef==='function'?userDef:userDef.get;if("development"!=='production'&&getter==null){warn("Getter is missing for computed property \""+key+"\".",vm);}// create internal watcher for the computed property.
watchers[key]=new Watcher(vm,getter||noop,noop,computedWatcherOptions);// component-defined computed properties are already defined on the
// component prototype. We only need to define computed properties defined
// at instantiation here.
if(!(key in vm)){defineComputed(vm,key,userDef);}else{if(key in vm.$data){warn("The computed property \""+key+"\" is already defined in data.",vm);}else if(vm.$options.props&&key in vm.$options.props){warn("The computed property \""+key+"\" is already defined as a prop.",vm);}}}}function defineComputed(target,key,userDef){if(typeof userDef==='function'){sharedPropertyDefinition.get=createComputedGetter(key);sharedPropertyDefinition.set=noop;}else{sharedPropertyDefinition.get=userDef.get?userDef.cache!==false?createComputedGetter(key):userDef.get:noop;sharedPropertyDefinition.set=userDef.set?userDef.set:noop;}if("development"!=='production'&&sharedPropertyDefinition.set===noop){sharedPropertyDefinition.set=function(){warn("Computed property \""+key+"\" was assigned to but it has no setter.",this);};}Object.defineProperty(target,key,sharedPropertyDefinition);}function createComputedGetter(key){return function computedGetter(){var watcher=this._computedWatchers&&this._computedWatchers[key];if(watcher){if(watcher.dirty){watcher.evaluate();}if(Dep.target){watcher.depend();}return watcher.value;}};}function initMethods(vm,methods){"development"!=='production'&&checkOptionType(vm,'methods');var props=vm.$options.props;for(var key in methods){vm[key]=methods[key]==null?noop:bind(methods[key],vm);{if(methods[key]==null){warn("method \""+key+"\" has an undefined value in the component definition. "+"Did you reference the function correctly?",vm);}if(props&&hasOwn(props,key)){warn("method \""+key+"\" has already been defined as a prop.",vm);}}}}function initWatch(vm,watch){"development"!=='production'&&checkOptionType(vm,'watch');for(var key in watch){var handler=watch[key];if(Array.isArray(handler)){for(var i=0;i<handler.length;i++){createWatcher(vm,key,handler[i]);}}else{createWatcher(vm,key,handler);}}}function createWatcher(vm,keyOrFn,handler,options){if(isPlainObject(handler)){options=handler;handler=handler.handler;}if(typeof handler==='string'){handler=vm[handler];}return vm.$watch(keyOrFn,handler,options);}function stateMixin(Vue){// flow somehow has problems with directly declared definition object
// when using Object.defineProperty, so we have to procedurally build up
// the object here.
var dataDef={};dataDef.get=function(){return this._data;};var propsDef={};propsDef.get=function(){return this._props;};{dataDef.set=function(newData){warn('Avoid replacing instance root $data. '+'Use nested data properties instead.',this);};propsDef.set=function(){warn("$props is readonly.",this);};}Object.defineProperty(Vue.prototype,'$data',dataDef);Object.defineProperty(Vue.prototype,'$props',propsDef);Vue.prototype.$set=set;Vue.prototype.$delete=del;Vue.prototype.$watch=function(expOrFn,cb,options){var vm=this;if(isPlainObject(cb)){return createWatcher(vm,expOrFn,cb,options);}options=options||{};options.user=true;var watcher=new Watcher(vm,expOrFn,cb,options);if(options.immediate){cb.call(vm,watcher.value);}return function unwatchFn(){watcher.teardown();};};}/*  */function initProvide(vm){var provide=vm.$options.provide;if(provide){vm._provided=typeof provide==='function'?provide.call(vm):provide;}}function initInjections(vm){var result=resolveInject(vm.$options.inject,vm);if(result){observerState.shouldConvert=false;Object.keys(result).forEach(function(key){/* istanbul ignore else */{defineReactive$$1(vm,key,result[key],function(){warn("Avoid mutating an injected value directly since the changes will be "+"overwritten whenever the provided component re-renders. "+"injection being mutated: \""+key+"\"",vm);});}});observerState.shouldConvert=true;}}function resolveInject(inject,vm){if(inject){// inject is :any because flow is not smart enough to figure out cached
var result=Object.create(null);var keys=hasSymbol?Reflect.ownKeys(inject):Object.keys(inject);for(var i=0;i<keys.length;i++){var key=keys[i];var provideKey=inject[key];var source=vm;while(source){if(source._provided&&provideKey in source._provided){result[key]=source._provided[provideKey];break;}source=source.$parent;}if("development"!=='production'&&!source){warn("Injection \""+key+"\" not found",vm);}}return result;}}/*  */function createFunctionalComponent(Ctor,propsData,data,context,children){var props={};var propOptions=Ctor.options.props;if(isDef(propOptions)){for(var key in propOptions){props[key]=validateProp(key,propOptions,propsData||{});}}else{if(isDef(data.attrs)){mergeProps(props,data.attrs);}if(isDef(data.props)){mergeProps(props,data.props);}}// ensure the createElement function in functional components
// gets a unique context - this is necessary for correct named slot check
var _context=Object.create(context);var h=function h(a,b,c,d){return createElement(_context,a,b,c,d,true);};var vnode=Ctor.options.render.call(null,h,{data:data,props:props,children:children,parent:context,listeners:data.on||{},injections:resolveInject(Ctor.options.inject,context),slots:function slots(){return resolveSlots(children,context);}});if(vnode instanceof VNode){vnode.functionalContext=context;vnode.functionalOptions=Ctor.options;if(data.slot){(vnode.data||(vnode.data={})).slot=data.slot;}}return vnode;}function mergeProps(to,from){for(var key in from){to[camelize(key)]=from[key];}}/*  */// hooks to be invoked on component VNodes during patch
var componentVNodeHooks={init:function init(vnode,hydrating,parentElm,refElm){if(!vnode.componentInstance||vnode.componentInstance._isDestroyed){var child=vnode.componentInstance=createComponentInstanceForVnode(vnode,activeInstance,parentElm,refElm);child.$mount(hydrating?vnode.elm:undefined,hydrating);}else if(vnode.data.keepAlive){// kept-alive components, treat as a patch
var mountedNode=vnode;// work around flow
componentVNodeHooks.prepatch(mountedNode,mountedNode);}},prepatch:function prepatch(oldVnode,vnode){var options=vnode.componentOptions;var child=vnode.componentInstance=oldVnode.componentInstance;updateChildComponent(child,options.propsData,// updated props
options.listeners,// updated listeners
vnode,// new parent vnode
options.children// new children
);},insert:function insert(vnode){var context=vnode.context;var componentInstance=vnode.componentInstance;if(!componentInstance._isMounted){componentInstance._isMounted=true;callHook(componentInstance,'mounted');}if(vnode.data.keepAlive){if(context._isMounted){// vue-router#1212
// During updates, a kept-alive component's child components may
// change, so directly walking the tree here may call activated hooks
// on incorrect children. Instead we push them into a queue which will
// be processed after the whole patch process ended.
queueActivatedComponent(componentInstance);}else{activateChildComponent(componentInstance,true/* direct */);}}},destroy:function destroy(vnode){var componentInstance=vnode.componentInstance;if(!componentInstance._isDestroyed){if(!vnode.data.keepAlive){componentInstance.$destroy();}else{deactivateChildComponent(componentInstance,true/* direct */);}}}};var hooksToMerge=Object.keys(componentVNodeHooks);function createComponent(Ctor,data,context,children,tag){if(isUndef(Ctor)){return;}var baseCtor=context.$options._base;// plain options object: turn it into a constructor
if(isObject(Ctor)){Ctor=baseCtor.extend(Ctor);}// if at this stage it's not a constructor or an async component factory,
// reject.
if(typeof Ctor!=='function'){{warn("Invalid Component definition: "+String(Ctor),context);}return;}// async component
var asyncFactory;if(isUndef(Ctor.cid)){asyncFactory=Ctor;Ctor=resolveAsyncComponent(asyncFactory,baseCtor,context);if(Ctor===undefined){// return a placeholder node for async component, which is rendered
// as a comment node but preserves all the raw information for the node.
// the information will be used for async server-rendering and hydration.
return createAsyncPlaceholder(asyncFactory,data,context,children,tag);}}data=data||{};// resolve constructor options in case global mixins are applied after
// component constructor creation
resolveConstructorOptions(Ctor);// transform component v-model data into props & events
if(isDef(data.model)){transformModel(Ctor.options,data);}// extract props
var propsData=extractPropsFromVNodeData(data,Ctor,tag);// functional component
if(isTrue(Ctor.options.functional)){return createFunctionalComponent(Ctor,propsData,data,context,children);}// extract listeners, since these needs to be treated as
// child component listeners instead of DOM listeners
var listeners=data.on;// replace with listeners with .native modifier
// so it gets processed during parent component patch.
data.on=data.nativeOn;if(isTrue(Ctor.options.abstract)){// abstract components do not keep anything
// other than props & listeners & slot
// work around flow
var slot=data.slot;data={};if(slot){data.slot=slot;}}// merge component management hooks onto the placeholder node
mergeHooks(data);// return a placeholder vnode
var name=Ctor.options.name||tag;var vnode=new VNode("vue-component-"+Ctor.cid+(name?"-"+name:''),data,undefined,undefined,undefined,context,{Ctor:Ctor,propsData:propsData,listeners:listeners,tag:tag,children:children},asyncFactory);return vnode;}function createComponentInstanceForVnode(vnode,// we know it's MountedComponentVNode but flow doesn't
parent,// activeInstance in lifecycle state
parentElm,refElm){var vnodeComponentOptions=vnode.componentOptions;var options={_isComponent:true,parent:parent,propsData:vnodeComponentOptions.propsData,_componentTag:vnodeComponentOptions.tag,_parentVnode:vnode,_parentListeners:vnodeComponentOptions.listeners,_renderChildren:vnodeComponentOptions.children,_parentElm:parentElm||null,_refElm:refElm||null};// check inline-template render functions
var inlineTemplate=vnode.data.inlineTemplate;if(isDef(inlineTemplate)){options.render=inlineTemplate.render;options.staticRenderFns=inlineTemplate.staticRenderFns;}return new vnodeComponentOptions.Ctor(options);}function mergeHooks(data){if(!data.hook){data.hook={};}for(var i=0;i<hooksToMerge.length;i++){var key=hooksToMerge[i];var fromParent=data.hook[key];var ours=componentVNodeHooks[key];data.hook[key]=fromParent?mergeHook$1(ours,fromParent):ours;}}function mergeHook$1(one,two){return function(a,b,c,d){one(a,b,c,d);two(a,b,c,d);};}// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel(options,data){var prop=options.model&&options.model.prop||'value';var event=options.model&&options.model.event||'input';(data.props||(data.props={}))[prop]=data.model.value;var on=data.on||(data.on={});if(isDef(on[event])){on[event]=[data.model.callback].concat(on[event]);}else{on[event]=data.model.callback;}}/*  */var SIMPLE_NORMALIZE=1;var ALWAYS_NORMALIZE=2;// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement(context,tag,data,children,normalizationType,alwaysNormalize){if(Array.isArray(data)||isPrimitive(data)){normalizationType=children;children=data;data=undefined;}if(isTrue(alwaysNormalize)){normalizationType=ALWAYS_NORMALIZE;}return _createElement(context,tag,data,children,normalizationType);}function _createElement(context,tag,data,children,normalizationType){if(isDef(data)&&isDef(data.__ob__)){"development"!=='production'&&warn("Avoid using observed data object as vnode data: "+JSON.stringify(data)+"\n"+'Always create fresh vnode data objects in each render!',context);return createEmptyVNode();}// object syntax in v-bind
if(isDef(data)&&isDef(data.is)){tag=data.is;}if(!tag){// in case of component :is set to falsy value
return createEmptyVNode();}// warn against non-primitive key
if("development"!=='production'&&isDef(data)&&isDef(data.key)&&!isPrimitive(data.key)){warn('Avoid using non-primitive value as key, '+'use string/number value instead.',context);}// support single function children as default scoped slot
if(Array.isArray(children)&&typeof children[0]==='function'){data=data||{};data.scopedSlots={default:children[0]};children.length=0;}if(normalizationType===ALWAYS_NORMALIZE){children=normalizeChildren(children);}else if(normalizationType===SIMPLE_NORMALIZE){children=simpleNormalizeChildren(children);}var vnode,ns;if(typeof tag==='string'){var Ctor;ns=config.getTagNamespace(tag);if(config.isReservedTag(tag)){// platform built-in elements
vnode=new VNode(config.parsePlatformTagName(tag),data,children,undefined,undefined,context);}else if(isDef(Ctor=resolveAsset(context.$options,'components',tag))){// component
vnode=createComponent(Ctor,data,context,children,tag);}else{// unknown or unlisted namespaced elements
// check at runtime because it may get assigned a namespace when its
// parent normalizes children
vnode=new VNode(tag,data,children,undefined,undefined,context);}}else{// direct component options / constructor
vnode=createComponent(tag,data,context,children);}if(isDef(vnode)){if(ns){applyNS(vnode,ns);}return vnode;}else{return createEmptyVNode();}}function applyNS(vnode,ns){vnode.ns=ns;if(vnode.tag==='foreignObject'){// use default namespace inside foreignObject
return;}if(isDef(vnode.children)){for(var i=0,l=vnode.children.length;i<l;i++){var child=vnode.children[i];if(isDef(child.tag)&&isUndef(child.ns)){applyNS(child,ns);}}}}/*  *//**
 * Runtime helper for rendering v-for lists.
 */function renderList(val,render){var ret,i,l,keys,key;if(Array.isArray(val)||typeof val==='string'){ret=new Array(val.length);for(i=0,l=val.length;i<l;i++){ret[i]=render(val[i],i);}}else if(typeof val==='number'){ret=new Array(val);for(i=0;i<val;i++){ret[i]=render(i+1,i);}}else if(isObject(val)){keys=Object.keys(val);ret=new Array(keys.length);for(i=0,l=keys.length;i<l;i++){key=keys[i];ret[i]=render(val[key],key,i);}}if(isDef(ret)){ret._isVList=true;}return ret;}/*  *//**
 * Runtime helper for rendering <slot>
 */function renderSlot(name,fallback,props,bindObject){var scopedSlotFn=this.$scopedSlots[name];if(scopedSlotFn){// scoped slot
props=props||{};if(bindObject){props=extend(extend({},bindObject),props);}return scopedSlotFn(props)||fallback;}else{var slotNodes=this.$slots[name];// warn duplicate slot usage
if(slotNodes&&"development"!=='production'){slotNodes._rendered&&warn("Duplicate presence of slot \""+name+"\" found in the same render tree "+"- this will likely cause render errors.",this);slotNodes._rendered=true;}return slotNodes||fallback;}}/*  *//**
 * Runtime helper for resolving filters
 */function resolveFilter(id){return resolveAsset(this.$options,'filters',id,true)||identity;}/*  *//**
 * Runtime helper for checking keyCodes from config.
 */function checkKeyCodes(eventKeyCode,key,builtInAlias){var keyCodes=config.keyCodes[key]||builtInAlias;if(Array.isArray(keyCodes)){return keyCodes.indexOf(eventKeyCode)===-1;}else{return keyCodes!==eventKeyCode;}}/*  *//**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */function bindObjectProps(data,tag,value,asProp,isSync){if(value){if(!isObject(value)){"development"!=='production'&&warn('v-bind without argument expects an Object or Array value',this);}else{if(Array.isArray(value)){value=toObject(value);}var hash;var loop=function loop(key){if(key==='class'||key==='style'||isReservedAttribute(key)){hash=data;}else{var type=data.attrs&&data.attrs.type;hash=asProp||config.mustUseProp(tag,type,key)?data.domProps||(data.domProps={}):data.attrs||(data.attrs={});}if(!(key in hash)){hash[key]=value[key];if(isSync){var on=data.on||(data.on={});on["update:"+key]=function($event){value[key]=$event;};}}};for(var key in value){loop(key);}}}return data;}/*  *//**
 * Runtime helper for rendering static trees.
 */function renderStatic(index,isInFor){var tree=this._staticTrees[index];// if has already-rendered static tree and not inside v-for,
// we can reuse the same tree by doing a shallow clone.
if(tree&&!isInFor){return Array.isArray(tree)?cloneVNodes(tree):cloneVNode(tree);}// otherwise, render a fresh tree.
tree=this._staticTrees[index]=this.$options.staticRenderFns[index].call(this._renderProxy);markStatic(tree,"__static__"+index,false);return tree;}/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */function markOnce(tree,index,key){markStatic(tree,"__once__"+index+(key?"_"+key:""),true);return tree;}function markStatic(tree,key,isOnce){if(Array.isArray(tree)){for(var i=0;i<tree.length;i++){if(tree[i]&&typeof tree[i]!=='string'){markStaticNode(tree[i],key+"_"+i,isOnce);}}}else{markStaticNode(tree,key,isOnce);}}function markStaticNode(node,key,isOnce){node.isStatic=true;node.key=key;node.isOnce=isOnce;}/*  */function bindObjectListeners(data,value){if(value){if(!isPlainObject(value)){"development"!=='production'&&warn('v-on without argument expects an Object value',this);}else{var on=data.on=data.on?extend({},data.on):{};for(var key in value){var existing=on[key];var ours=value[key];on[key]=existing?[].concat(ours,existing):ours;}}}return data;}/*  */function initRender(vm){vm._vnode=null;// the root of the child tree
vm._staticTrees=null;var parentVnode=vm.$vnode=vm.$options._parentVnode;// the placeholder node in parent tree
var renderContext=parentVnode&&parentVnode.context;vm.$slots=resolveSlots(vm.$options._renderChildren,renderContext);vm.$scopedSlots=emptyObject;// bind the createElement fn to this instance
// so that we get proper render context inside it.
// args order: tag, data, children, normalizationType, alwaysNormalize
// internal version is used by render functions compiled from templates
vm._c=function(a,b,c,d){return createElement(vm,a,b,c,d,false);};// normalization is always applied for the public version, used in
// user-written render functions.
vm.$createElement=function(a,b,c,d){return createElement(vm,a,b,c,d,true);};// $attrs & $listeners are exposed for easier HOC creation.
// they need to be reactive so that HOCs using them are always updated
var parentData=parentVnode&&parentVnode.data;/* istanbul ignore else */{defineReactive$$1(vm,'$attrs',parentData&&parentData.attrs,function(){!isUpdatingChildComponent&&warn("$attrs is readonly.",vm);},true);defineReactive$$1(vm,'$listeners',vm.$options._parentListeners,function(){!isUpdatingChildComponent&&warn("$listeners is readonly.",vm);},true);}}function renderMixin(Vue){Vue.prototype.$nextTick=function(fn){return nextTick(fn,this);};Vue.prototype._render=function(){var vm=this;var ref=vm.$options;var render=ref.render;var staticRenderFns=ref.staticRenderFns;var _parentVnode=ref._parentVnode;if(vm._isMounted){// clone slot nodes on re-renders
for(var key in vm.$slots){vm.$slots[key]=cloneVNodes(vm.$slots[key]);}}vm.$scopedSlots=_parentVnode&&_parentVnode.data.scopedSlots||emptyObject;if(staticRenderFns&&!vm._staticTrees){vm._staticTrees=[];}// set parent vnode. this allows render functions to have access
// to the data on the placeholder node.
vm.$vnode=_parentVnode;// render self
var vnode;try{vnode=render.call(vm._renderProxy,vm.$createElement);}catch(e){handleError(e,vm,"render function");// return error render result,
// or previous vnode to prevent render error causing blank component
/* istanbul ignore else */{vnode=vm.$options.renderError?vm.$options.renderError.call(vm._renderProxy,vm.$createElement,e):vm._vnode;}}// return empty vnode in case the render function errored out
if(!(vnode instanceof VNode)){if("development"!=='production'&&Array.isArray(vnode)){warn('Multiple root nodes returned from render function. Render function '+'should return a single root node.',vm);}vnode=createEmptyVNode();}// set parent
vnode.parent=_parentVnode;return vnode;};// internal render helpers.
// these are exposed on the instance prototype to reduce generated render
// code size.
Vue.prototype._o=markOnce;Vue.prototype._n=toNumber;Vue.prototype._s=toString;Vue.prototype._l=renderList;Vue.prototype._t=renderSlot;Vue.prototype._q=looseEqual;Vue.prototype._i=looseIndexOf;Vue.prototype._m=renderStatic;Vue.prototype._f=resolveFilter;Vue.prototype._k=checkKeyCodes;Vue.prototype._b=bindObjectProps;Vue.prototype._v=createTextVNode;Vue.prototype._e=createEmptyVNode;Vue.prototype._u=resolveScopedSlots;Vue.prototype._g=bindObjectListeners;}/*  */var uid$1=0;function initMixin(Vue){Vue.prototype._init=function(options){var vm=this;// a uid
vm._uid=uid$1++;var startTag,endTag;/* istanbul ignore if */if("development"!=='production'&&config.performance&&mark){startTag="vue-perf-init:"+vm._uid;endTag="vue-perf-end:"+vm._uid;mark(startTag);}// a flag to avoid this being observed
vm._isVue=true;// merge options
if(options&&options._isComponent){// optimize internal component instantiation
// since dynamic options merging is pretty slow, and none of the
// internal component options needs special treatment.
initInternalComponent(vm,options);}else{vm.$options=mergeOptions(resolveConstructorOptions(vm.constructor),options||{},vm);}/* istanbul ignore else */{initProxy(vm);}// expose real self
vm._self=vm;initLifecycle(vm);initEvents(vm);initRender(vm);callHook(vm,'beforeCreate');initInjections(vm);// resolve injections before data/props
initState(vm);initProvide(vm);// resolve provide after data/props
callHook(vm,'created');/* istanbul ignore if */if("development"!=='production'&&config.performance&&mark){vm._name=formatComponentName(vm,false);mark(endTag);measure(vm._name+" init",startTag,endTag);}if(vm.$options.el){vm.$mount(vm.$options.el);}};}function initInternalComponent(vm,options){var opts=vm.$options=Object.create(vm.constructor.options);// doing this because it's faster than dynamic enumeration.
opts.parent=options.parent;opts.propsData=options.propsData;opts._parentVnode=options._parentVnode;opts._parentListeners=options._parentListeners;opts._renderChildren=options._renderChildren;opts._componentTag=options._componentTag;opts._parentElm=options._parentElm;opts._refElm=options._refElm;if(options.render){opts.render=options.render;opts.staticRenderFns=options.staticRenderFns;}}function resolveConstructorOptions(Ctor){var options=Ctor.options;if(Ctor.super){var superOptions=resolveConstructorOptions(Ctor.super);var cachedSuperOptions=Ctor.superOptions;if(superOptions!==cachedSuperOptions){// super option changed,
// need to resolve new options.
Ctor.superOptions=superOptions;// check if there are any late-modified/attached options (#4976)
var modifiedOptions=resolveModifiedOptions(Ctor);// update base extend options
if(modifiedOptions){extend(Ctor.extendOptions,modifiedOptions);}options=Ctor.options=mergeOptions(superOptions,Ctor.extendOptions);if(options.name){options.components[options.name]=Ctor;}}}return options;}function resolveModifiedOptions(Ctor){var modified;var latest=Ctor.options;var extended=Ctor.extendOptions;var sealed=Ctor.sealedOptions;for(var key in latest){if(latest[key]!==sealed[key]){if(!modified){modified={};}modified[key]=dedupe(latest[key],extended[key],sealed[key]);}}return modified;}function dedupe(latest,extended,sealed){// compare latest and sealed to ensure lifecycle hooks won't be duplicated
// between merges
if(Array.isArray(latest)){var res=[];sealed=Array.isArray(sealed)?sealed:[sealed];extended=Array.isArray(extended)?extended:[extended];for(var i=0;i<latest.length;i++){// push original options and not sealed options to exclude duplicated options
if(extended.indexOf(latest[i])>=0||sealed.indexOf(latest[i])<0){res.push(latest[i]);}}return res;}else{return latest;}}function Vue$3(options){if("development"!=='production'&&!(this instanceof Vue$3)){warn('Vue is a constructor and should be called with the `new` keyword');}this._init(options);}initMixin(Vue$3);stateMixin(Vue$3);eventsMixin(Vue$3);lifecycleMixin(Vue$3);renderMixin(Vue$3);/*  */function initUse(Vue){Vue.use=function(plugin){var installedPlugins=this._installedPlugins||(this._installedPlugins=[]);if(installedPlugins.indexOf(plugin)>-1){return this;}// additional parameters
var args=toArray(arguments,1);args.unshift(this);if(typeof plugin.install==='function'){plugin.install.apply(plugin,args);}else if(typeof plugin==='function'){plugin.apply(null,args);}installedPlugins.push(plugin);return this;};}/*  */function initMixin$1(Vue){Vue.mixin=function(mixin){this.options=mergeOptions(this.options,mixin);return this;};}/*  */function initExtend(Vue){/**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */Vue.cid=0;var cid=1;/**
   * Class inheritance
   */Vue.extend=function(extendOptions){extendOptions=extendOptions||{};var Super=this;var SuperId=Super.cid;var cachedCtors=extendOptions._Ctor||(extendOptions._Ctor={});if(cachedCtors[SuperId]){return cachedCtors[SuperId];}var name=extendOptions.name||Super.options.name;{if(!/^[a-zA-Z][\w-]*$/.test(name)){warn('Invalid component name: "'+name+'". Component names '+'can only contain alphanumeric characters and the hyphen, '+'and must start with a letter.');}}var Sub=function VueComponent(options){this._init(options);};Sub.prototype=Object.create(Super.prototype);Sub.prototype.constructor=Sub;Sub.cid=cid++;Sub.options=mergeOptions(Super.options,extendOptions);Sub['super']=Super;// For props and computed properties, we define the proxy getters on
// the Vue instances at extension time, on the extended prototype. This
// avoids Object.defineProperty calls for each instance created.
if(Sub.options.props){initProps$1(Sub);}if(Sub.options.computed){initComputed$1(Sub);}// allow further extension/mixin/plugin usage
Sub.extend=Super.extend;Sub.mixin=Super.mixin;Sub.use=Super.use;// create asset registers, so extended classes
// can have their private assets too.
ASSET_TYPES.forEach(function(type){Sub[type]=Super[type];});// enable recursive self-lookup
if(name){Sub.options.components[name]=Sub;}// keep a reference to the super options at extension time.
// later at instantiation we can check if Super's options have
// been updated.
Sub.superOptions=Super.options;Sub.extendOptions=extendOptions;Sub.sealedOptions=extend({},Sub.options);// cache constructor
cachedCtors[SuperId]=Sub;return Sub;};}function initProps$1(Comp){var props=Comp.options.props;for(var key in props){proxy(Comp.prototype,"_props",key);}}function initComputed$1(Comp){var computed=Comp.options.computed;for(var key in computed){defineComputed(Comp.prototype,key,computed[key]);}}/*  */function initAssetRegisters(Vue){/**
   * Create asset registration methods.
   */ASSET_TYPES.forEach(function(type){Vue[type]=function(id,definition){if(!definition){return this.options[type+'s'][id];}else{/* istanbul ignore if */{if(type==='component'&&config.isReservedTag(id)){warn('Do not use built-in or reserved HTML elements as component '+'id: '+id);}}if(type==='component'&&isPlainObject(definition)){definition.name=definition.name||id;definition=this.options._base.extend(definition);}if(type==='directive'&&typeof definition==='function'){definition={bind:definition,update:definition};}this.options[type+'s'][id]=definition;return definition;}};});}/*  */var patternTypes=[String,RegExp,Array];function getComponentName(opts){return opts&&(opts.Ctor.options.name||opts.tag);}function matches(pattern,name){if(Array.isArray(pattern)){return pattern.indexOf(name)>-1;}else if(typeof pattern==='string'){return pattern.split(',').indexOf(name)>-1;}else if(isRegExp(pattern)){return pattern.test(name);}/* istanbul ignore next */return false;}function pruneCache(cache,current,filter){for(var key in cache){var cachedNode=cache[key];if(cachedNode){var name=getComponentName(cachedNode.componentOptions);if(name&&!filter(name)){if(cachedNode!==current){pruneCacheEntry(cachedNode);}cache[key]=null;}}}}function pruneCacheEntry(vnode){if(vnode){vnode.componentInstance.$destroy();}}var KeepAlive={name:'keep-alive',abstract:true,props:{include:patternTypes,exclude:patternTypes},created:function created(){this.cache=Object.create(null);},destroyed:function destroyed(){var this$1=this;for(var key in this$1.cache){pruneCacheEntry(this$1.cache[key]);}},watch:{include:function include(val){pruneCache(this.cache,this._vnode,function(name){return matches(val,name);});},exclude:function exclude(val){pruneCache(this.cache,this._vnode,function(name){return!matches(val,name);});}},render:function render(){var vnode=getFirstComponentChild(this.$slots.default);var componentOptions=vnode&&vnode.componentOptions;if(componentOptions){// check pattern
var name=getComponentName(componentOptions);if(name&&(this.include&&!matches(this.include,name)||this.exclude&&matches(this.exclude,name))){return vnode;}var key=vnode.key==null// same constructor may get registered as different local components
// so cid alone is not enough (#3269)
?componentOptions.Ctor.cid+(componentOptions.tag?"::"+componentOptions.tag:''):vnode.key;if(this.cache[key]){vnode.componentInstance=this.cache[key].componentInstance;}else{this.cache[key]=vnode;}vnode.data.keepAlive=true;}return vnode;}};var builtInComponents={KeepAlive:KeepAlive};/*  */function initGlobalAPI(Vue){// config
var configDef={};configDef.get=function(){return config;};{configDef.set=function(){warn('Do not replace the Vue.config object, set individual fields instead.');};}Object.defineProperty(Vue,'config',configDef);// exposed util methods.
// NOTE: these are not considered part of the public API - avoid relying on
// them unless you are aware of the risk.
Vue.util={warn:warn,extend:extend,mergeOptions:mergeOptions,defineReactive:defineReactive$$1};Vue.set=set;Vue.delete=del;Vue.nextTick=nextTick;Vue.options=Object.create(null);ASSET_TYPES.forEach(function(type){Vue.options[type+'s']=Object.create(null);});// this is used to identify the "base" constructor to extend all plain-object
// components with in Weex's multi-instance scenarios.
Vue.options._base=Vue;extend(Vue.options.components,builtInComponents);initUse(Vue);initMixin$1(Vue);initExtend(Vue);initAssetRegisters(Vue);}initGlobalAPI(Vue$3);Object.defineProperty(Vue$3.prototype,'$isServer',{get:isServerRendering});Object.defineProperty(Vue$3.prototype,'$ssrContext',{get:function get(){/* istanbul ignore next */return this.$vnode&&this.$vnode.ssrContext;}});Vue$3.version='2.4.2';/*  */// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr=makeMap('style,class');// attributes that should be using props for binding
var acceptValue=makeMap('input,textarea,option,select');var mustUseProp=function mustUseProp(tag,type,attr){return attr==='value'&&acceptValue(tag)&&type!=='button'||attr==='selected'&&tag==='option'||attr==='checked'&&tag==='input'||attr==='muted'&&tag==='video';};var isEnumeratedAttr=makeMap('contenteditable,draggable,spellcheck');var isBooleanAttr=makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,'+'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,'+'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,'+'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,'+'required,reversed,scoped,seamless,selected,sortable,translate,'+'truespeed,typemustmatch,visible');var xlinkNS='http://www.w3.org/1999/xlink';var isXlink=function isXlink(name){return name.charAt(5)===':'&&name.slice(0,5)==='xlink';};var getXlinkProp=function getXlinkProp(name){return isXlink(name)?name.slice(6,name.length):'';};var isFalsyAttrValue=function isFalsyAttrValue(val){return val==null||val===false;};/*  */function genClassForVnode(vnode){var data=vnode.data;var parentNode=vnode;var childNode=vnode;while(isDef(childNode.componentInstance)){childNode=childNode.componentInstance._vnode;if(childNode.data){data=mergeClassData(childNode.data,data);}}while(isDef(parentNode=parentNode.parent)){if(parentNode.data){data=mergeClassData(data,parentNode.data);}}return renderClass(data.staticClass,data.class);}function mergeClassData(child,parent){return{staticClass:concat(child.staticClass,parent.staticClass),class:isDef(child.class)?[child.class,parent.class]:parent.class};}function renderClass(staticClass,dynamicClass){if(isDef(staticClass)||isDef(dynamicClass)){return concat(staticClass,stringifyClass(dynamicClass));}/* istanbul ignore next */return'';}function concat(a,b){return a?b?a+' '+b:a:b||'';}function stringifyClass(value){if(Array.isArray(value)){return stringifyArray(value);}if(isObject(value)){return stringifyObject(value);}if(typeof value==='string'){return value;}/* istanbul ignore next */return'';}function stringifyArray(value){var res='';var stringified;for(var i=0,l=value.length;i<l;i++){if(isDef(stringified=stringifyClass(value[i]))&&stringified!==''){if(res){res+=' ';}res+=stringified;}}return res;}function stringifyObject(value){var res='';for(var key in value){if(value[key]){if(res){res+=' ';}res+=key;}}return res;}/*  */var namespaceMap={svg:'http://www.w3.org/2000/svg',math:'http://www.w3.org/1998/Math/MathML'};var isHTMLTag=makeMap('html,body,base,head,link,meta,style,title,'+'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,'+'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,'+'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,'+'s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,'+'embed,object,param,source,canvas,script,noscript,del,ins,'+'caption,col,colgroup,table,thead,tbody,td,th,tr,'+'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,'+'output,progress,select,textarea,'+'details,dialog,menu,menuitem,summary,'+'content,element,shadow,template,blockquote,iframe,tfoot');// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG=makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,'+'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,'+'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',true);var isPreTag=function isPreTag(tag){return tag==='pre';};var isReservedTag=function isReservedTag(tag){return isHTMLTag(tag)||isSVG(tag);};function getTagNamespace(tag){if(isSVG(tag)){return'svg';}// basic support for MathML
// note it doesn't support other MathML elements being component roots
if(tag==='math'){return'math';}}var unknownElementCache=Object.create(null);function isUnknownElement(tag){/* istanbul ignore if */if(!inBrowser){return true;}if(isReservedTag(tag)){return false;}tag=tag.toLowerCase();/* istanbul ignore if */if(unknownElementCache[tag]!=null){return unknownElementCache[tag];}var el=document.createElement(tag);if(tag.indexOf('-')>-1){// http://stackoverflow.com/a/28210364/1070244
return unknownElementCache[tag]=el.constructor===window.HTMLUnknownElement||el.constructor===window.HTMLElement;}else{return unknownElementCache[tag]=/HTMLUnknownElement/.test(el.toString());}}/*  *//**
 * Query an element selector if it's not an element already.
 */function query(el){if(typeof el==='string'){var selected=document.querySelector(el);if(!selected){"development"!=='production'&&warn('Cannot find element: '+el);return document.createElement('div');}return selected;}else{return el;}}/*  */function createElement$1(tagName,vnode){var elm=document.createElement(tagName);if(tagName!=='select'){return elm;}// false or null will remove the attribute but undefined will not
if(vnode.data&&vnode.data.attrs&&vnode.data.attrs.multiple!==undefined){elm.setAttribute('multiple','multiple');}return elm;}function createElementNS(namespace,tagName){return document.createElementNS(namespaceMap[namespace],tagName);}function createTextNode(text){return document.createTextNode(text);}function createComment(text){return document.createComment(text);}function insertBefore(parentNode,newNode,referenceNode){parentNode.insertBefore(newNode,referenceNode);}function removeChild(node,child){node.removeChild(child);}function appendChild(node,child){node.appendChild(child);}function parentNode(node){return node.parentNode;}function nextSibling(node){return node.nextSibling;}function tagName(node){return node.tagName;}function setTextContent(node,text){node.textContent=text;}function setAttribute(node,key,val){node.setAttribute(key,val);}var nodeOps=Object.freeze({createElement:createElement$1,createElementNS:createElementNS,createTextNode:createTextNode,createComment:createComment,insertBefore:insertBefore,removeChild:removeChild,appendChild:appendChild,parentNode:parentNode,nextSibling:nextSibling,tagName:tagName,setTextContent:setTextContent,setAttribute:setAttribute});/*  */var ref={create:function create(_,vnode){registerRef(vnode);},update:function update(oldVnode,vnode){if(oldVnode.data.ref!==vnode.data.ref){registerRef(oldVnode,true);registerRef(vnode);}},destroy:function destroy(vnode){registerRef(vnode,true);}};function registerRef(vnode,isRemoval){var key=vnode.data.ref;if(!key){return;}var vm=vnode.context;var ref=vnode.componentInstance||vnode.elm;var refs=vm.$refs;if(isRemoval){if(Array.isArray(refs[key])){remove(refs[key],ref);}else if(refs[key]===ref){refs[key]=undefined;}}else{if(vnode.data.refInFor){if(!Array.isArray(refs[key])){refs[key]=[ref];}else if(refs[key].indexOf(ref)<0){// $flow-disable-line
refs[key].push(ref);}}else{refs[key]=ref;}}}/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *

/*
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */var emptyNode=new VNode('',{},[]);var hooks=['create','activate','update','remove','destroy'];function sameVnode(a,b){return a.key===b.key&&(a.tag===b.tag&&a.isComment===b.isComment&&isDef(a.data)===isDef(b.data)&&sameInputType(a,b)||isTrue(a.isAsyncPlaceholder)&&a.asyncFactory===b.asyncFactory&&isUndef(b.asyncFactory.error));}// Some browsers do not support dynamically changing type for <input>
// so they need to be treated as different nodes
function sameInputType(a,b){if(a.tag!=='input'){return true;}var i;var typeA=isDef(i=a.data)&&isDef(i=i.attrs)&&i.type;var typeB=isDef(i=b.data)&&isDef(i=i.attrs)&&i.type;return typeA===typeB;}function createKeyToOldIdx(children,beginIdx,endIdx){var i,key;var map={};for(i=beginIdx;i<=endIdx;++i){key=children[i].key;if(isDef(key)){map[key]=i;}}return map;}function createPatchFunction(backend){var i,j;var cbs={};var modules=backend.modules;var nodeOps=backend.nodeOps;for(i=0;i<hooks.length;++i){cbs[hooks[i]]=[];for(j=0;j<modules.length;++j){if(isDef(modules[j][hooks[i]])){cbs[hooks[i]].push(modules[j][hooks[i]]);}}}function emptyNodeAt(elm){return new VNode(nodeOps.tagName(elm).toLowerCase(),{},[],undefined,elm);}function createRmCb(childElm,listeners){function remove$$1(){if(--remove$$1.listeners===0){removeNode(childElm);}}remove$$1.listeners=listeners;return remove$$1;}function removeNode(el){var parent=nodeOps.parentNode(el);// element may have already been removed due to v-html / v-text
if(isDef(parent)){nodeOps.removeChild(parent,el);}}var inPre=0;function createElm(vnode,insertedVnodeQueue,parentElm,refElm,nested){vnode.isRootInsert=!nested;// for transition enter check
if(createComponent(vnode,insertedVnodeQueue,parentElm,refElm)){return;}var data=vnode.data;var children=vnode.children;var tag=vnode.tag;if(isDef(tag)){{if(data&&data.pre){inPre++;}if(!inPre&&!vnode.ns&&!(config.ignoredElements.length&&config.ignoredElements.indexOf(tag)>-1)&&config.isUnknownElement(tag)){warn('Unknown custom element: <'+tag+'> - did you '+'register the component correctly? For recursive components, '+'make sure to provide the "name" option.',vnode.context);}}vnode.elm=vnode.ns?nodeOps.createElementNS(vnode.ns,tag):nodeOps.createElement(tag,vnode);setScope(vnode);/* istanbul ignore if */{createChildren(vnode,children,insertedVnodeQueue);if(isDef(data)){invokeCreateHooks(vnode,insertedVnodeQueue);}insert(parentElm,vnode.elm,refElm);}if("development"!=='production'&&data&&data.pre){inPre--;}}else if(isTrue(vnode.isComment)){vnode.elm=nodeOps.createComment(vnode.text);insert(parentElm,vnode.elm,refElm);}else{vnode.elm=nodeOps.createTextNode(vnode.text);insert(parentElm,vnode.elm,refElm);}}function createComponent(vnode,insertedVnodeQueue,parentElm,refElm){var i=vnode.data;if(isDef(i)){var isReactivated=isDef(vnode.componentInstance)&&i.keepAlive;if(isDef(i=i.hook)&&isDef(i=i.init)){i(vnode,false/* hydrating */,parentElm,refElm);}// after calling the init hook, if the vnode is a child component
// it should've created a child instance and mounted it. the child
// component also has set the placeholder vnode's elm.
// in that case we can just return the element and be done.
if(isDef(vnode.componentInstance)){initComponent(vnode,insertedVnodeQueue);if(isTrue(isReactivated)){reactivateComponent(vnode,insertedVnodeQueue,parentElm,refElm);}return true;}}}function initComponent(vnode,insertedVnodeQueue){if(isDef(vnode.data.pendingInsert)){insertedVnodeQueue.push.apply(insertedVnodeQueue,vnode.data.pendingInsert);vnode.data.pendingInsert=null;}vnode.elm=vnode.componentInstance.$el;if(isPatchable(vnode)){invokeCreateHooks(vnode,insertedVnodeQueue);setScope(vnode);}else{// empty component root.
// skip all element-related modules except for ref (#3455)
registerRef(vnode);// make sure to invoke the insert hook
insertedVnodeQueue.push(vnode);}}function reactivateComponent(vnode,insertedVnodeQueue,parentElm,refElm){var i;// hack for #4339: a reactivated component with inner transition
// does not trigger because the inner node's created hooks are not called
// again. It's not ideal to involve module-specific logic in here but
// there doesn't seem to be a better way to do it.
var innerNode=vnode;while(innerNode.componentInstance){innerNode=innerNode.componentInstance._vnode;if(isDef(i=innerNode.data)&&isDef(i=i.transition)){for(i=0;i<cbs.activate.length;++i){cbs.activate[i](emptyNode,innerNode);}insertedVnodeQueue.push(innerNode);break;}}// unlike a newly created component,
// a reactivated keep-alive component doesn't insert itself
insert(parentElm,vnode.elm,refElm);}function insert(parent,elm,ref$$1){if(isDef(parent)){if(isDef(ref$$1)){if(ref$$1.parentNode===parent){nodeOps.insertBefore(parent,elm,ref$$1);}}else{nodeOps.appendChild(parent,elm);}}}function createChildren(vnode,children,insertedVnodeQueue){if(Array.isArray(children)){for(var i=0;i<children.length;++i){createElm(children[i],insertedVnodeQueue,vnode.elm,null,true);}}else if(isPrimitive(vnode.text)){nodeOps.appendChild(vnode.elm,nodeOps.createTextNode(vnode.text));}}function isPatchable(vnode){while(vnode.componentInstance){vnode=vnode.componentInstance._vnode;}return isDef(vnode.tag);}function invokeCreateHooks(vnode,insertedVnodeQueue){for(var i$1=0;i$1<cbs.create.length;++i$1){cbs.create[i$1](emptyNode,vnode);}i=vnode.data.hook;// Reuse variable
if(isDef(i)){if(isDef(i.create)){i.create(emptyNode,vnode);}if(isDef(i.insert)){insertedVnodeQueue.push(vnode);}}}// set scope id attribute for scoped CSS.
// this is implemented as a special case to avoid the overhead
// of going through the normal attribute patching process.
function setScope(vnode){var i;var ancestor=vnode;while(ancestor){if(isDef(i=ancestor.context)&&isDef(i=i.$options._scopeId)){nodeOps.setAttribute(vnode.elm,i,'');}ancestor=ancestor.parent;}// for slot content they should also get the scopeId from the host instance.
if(isDef(i=activeInstance)&&i!==vnode.context&&isDef(i=i.$options._scopeId)){nodeOps.setAttribute(vnode.elm,i,'');}}function addVnodes(parentElm,refElm,vnodes,startIdx,endIdx,insertedVnodeQueue){for(;startIdx<=endIdx;++startIdx){createElm(vnodes[startIdx],insertedVnodeQueue,parentElm,refElm);}}function invokeDestroyHook(vnode){var i,j;var data=vnode.data;if(isDef(data)){if(isDef(i=data.hook)&&isDef(i=i.destroy)){i(vnode);}for(i=0;i<cbs.destroy.length;++i){cbs.destroy[i](vnode);}}if(isDef(i=vnode.children)){for(j=0;j<vnode.children.length;++j){invokeDestroyHook(vnode.children[j]);}}}function removeVnodes(parentElm,vnodes,startIdx,endIdx){for(;startIdx<=endIdx;++startIdx){var ch=vnodes[startIdx];if(isDef(ch)){if(isDef(ch.tag)){removeAndInvokeRemoveHook(ch);invokeDestroyHook(ch);}else{// Text node
removeNode(ch.elm);}}}}function removeAndInvokeRemoveHook(vnode,rm){if(isDef(rm)||isDef(vnode.data)){var i;var listeners=cbs.remove.length+1;if(isDef(rm)){// we have a recursively passed down rm callback
// increase the listeners count
rm.listeners+=listeners;}else{// directly removing
rm=createRmCb(vnode.elm,listeners);}// recursively invoke hooks on child component root node
if(isDef(i=vnode.componentInstance)&&isDef(i=i._vnode)&&isDef(i.data)){removeAndInvokeRemoveHook(i,rm);}for(i=0;i<cbs.remove.length;++i){cbs.remove[i](vnode,rm);}if(isDef(i=vnode.data.hook)&&isDef(i=i.remove)){i(vnode,rm);}else{rm();}}else{removeNode(vnode.elm);}}function updateChildren(parentElm,oldCh,newCh,insertedVnodeQueue,removeOnly){var oldStartIdx=0;var newStartIdx=0;var oldEndIdx=oldCh.length-1;var oldStartVnode=oldCh[0];var oldEndVnode=oldCh[oldEndIdx];var newEndIdx=newCh.length-1;var newStartVnode=newCh[0];var newEndVnode=newCh[newEndIdx];var oldKeyToIdx,idxInOld,elmToMove,refElm;// removeOnly is a special flag used only by <transition-group>
// to ensure removed elements stay in correct relative positions
// during leaving transitions
var canMove=!removeOnly;while(oldStartIdx<=oldEndIdx&&newStartIdx<=newEndIdx){if(isUndef(oldStartVnode)){oldStartVnode=oldCh[++oldStartIdx];// Vnode has been moved left
}else if(isUndef(oldEndVnode)){oldEndVnode=oldCh[--oldEndIdx];}else if(sameVnode(oldStartVnode,newStartVnode)){patchVnode(oldStartVnode,newStartVnode,insertedVnodeQueue);oldStartVnode=oldCh[++oldStartIdx];newStartVnode=newCh[++newStartIdx];}else if(sameVnode(oldEndVnode,newEndVnode)){patchVnode(oldEndVnode,newEndVnode,insertedVnodeQueue);oldEndVnode=oldCh[--oldEndIdx];newEndVnode=newCh[--newEndIdx];}else if(sameVnode(oldStartVnode,newEndVnode)){// Vnode moved right
patchVnode(oldStartVnode,newEndVnode,insertedVnodeQueue);canMove&&nodeOps.insertBefore(parentElm,oldStartVnode.elm,nodeOps.nextSibling(oldEndVnode.elm));oldStartVnode=oldCh[++oldStartIdx];newEndVnode=newCh[--newEndIdx];}else if(sameVnode(oldEndVnode,newStartVnode)){// Vnode moved left
patchVnode(oldEndVnode,newStartVnode,insertedVnodeQueue);canMove&&nodeOps.insertBefore(parentElm,oldEndVnode.elm,oldStartVnode.elm);oldEndVnode=oldCh[--oldEndIdx];newStartVnode=newCh[++newStartIdx];}else{if(isUndef(oldKeyToIdx)){oldKeyToIdx=createKeyToOldIdx(oldCh,oldStartIdx,oldEndIdx);}idxInOld=isDef(newStartVnode.key)?oldKeyToIdx[newStartVnode.key]:null;if(isUndef(idxInOld)){// New element
createElm(newStartVnode,insertedVnodeQueue,parentElm,oldStartVnode.elm);newStartVnode=newCh[++newStartIdx];}else{elmToMove=oldCh[idxInOld];/* istanbul ignore if */if("development"!=='production'&&!elmToMove){warn('It seems there are duplicate keys that is causing an update error. '+'Make sure each v-for item has a unique key.');}if(sameVnode(elmToMove,newStartVnode)){patchVnode(elmToMove,newStartVnode,insertedVnodeQueue);oldCh[idxInOld]=undefined;canMove&&nodeOps.insertBefore(parentElm,elmToMove.elm,oldStartVnode.elm);newStartVnode=newCh[++newStartIdx];}else{// same key but different element. treat as new element
createElm(newStartVnode,insertedVnodeQueue,parentElm,oldStartVnode.elm);newStartVnode=newCh[++newStartIdx];}}}}if(oldStartIdx>oldEndIdx){refElm=isUndef(newCh[newEndIdx+1])?null:newCh[newEndIdx+1].elm;addVnodes(parentElm,refElm,newCh,newStartIdx,newEndIdx,insertedVnodeQueue);}else if(newStartIdx>newEndIdx){removeVnodes(parentElm,oldCh,oldStartIdx,oldEndIdx);}}function patchVnode(oldVnode,vnode,insertedVnodeQueue,removeOnly){if(oldVnode===vnode){return;}var elm=vnode.elm=oldVnode.elm;if(isTrue(oldVnode.isAsyncPlaceholder)){if(isDef(vnode.asyncFactory.resolved)){hydrate(oldVnode.elm,vnode,insertedVnodeQueue);}else{vnode.isAsyncPlaceholder=true;}return;}// reuse element for static trees.
// note we only do this if the vnode is cloned -
// if the new node is not cloned it means the render functions have been
// reset by the hot-reload-api and we need to do a proper re-render.
if(isTrue(vnode.isStatic)&&isTrue(oldVnode.isStatic)&&vnode.key===oldVnode.key&&(isTrue(vnode.isCloned)||isTrue(vnode.isOnce))){vnode.componentInstance=oldVnode.componentInstance;return;}var i;var data=vnode.data;if(isDef(data)&&isDef(i=data.hook)&&isDef(i=i.prepatch)){i(oldVnode,vnode);}var oldCh=oldVnode.children;var ch=vnode.children;if(isDef(data)&&isPatchable(vnode)){for(i=0;i<cbs.update.length;++i){cbs.update[i](oldVnode,vnode);}if(isDef(i=data.hook)&&isDef(i=i.update)){i(oldVnode,vnode);}}if(isUndef(vnode.text)){if(isDef(oldCh)&&isDef(ch)){if(oldCh!==ch){updateChildren(elm,oldCh,ch,insertedVnodeQueue,removeOnly);}}else if(isDef(ch)){if(isDef(oldVnode.text)){nodeOps.setTextContent(elm,'');}addVnodes(elm,null,ch,0,ch.length-1,insertedVnodeQueue);}else if(isDef(oldCh)){removeVnodes(elm,oldCh,0,oldCh.length-1);}else if(isDef(oldVnode.text)){nodeOps.setTextContent(elm,'');}}else if(oldVnode.text!==vnode.text){nodeOps.setTextContent(elm,vnode.text);}if(isDef(data)){if(isDef(i=data.hook)&&isDef(i=i.postpatch)){i(oldVnode,vnode);}}}function invokeInsertHook(vnode,queue,initial){// delay insert hooks for component root nodes, invoke them after the
// element is really inserted
if(isTrue(initial)&&isDef(vnode.parent)){vnode.parent.data.pendingInsert=queue;}else{for(var i=0;i<queue.length;++i){queue[i].data.hook.insert(queue[i]);}}}var bailed=false;// list of modules that can skip create hook during hydration because they
// are already rendered on the client or has no need for initialization
var isRenderedModule=makeMap('attrs,style,class,staticClass,staticStyle,key');// Note: this is a browser-only function so we can assume elms are DOM nodes.
function hydrate(elm,vnode,insertedVnodeQueue){if(isTrue(vnode.isComment)&&isDef(vnode.asyncFactory)){vnode.elm=elm;vnode.isAsyncPlaceholder=true;return true;}{if(!assertNodeMatch(elm,vnode)){return false;}}vnode.elm=elm;var tag=vnode.tag;var data=vnode.data;var children=vnode.children;if(isDef(data)){if(isDef(i=data.hook)&&isDef(i=i.init)){i(vnode,true/* hydrating */);}if(isDef(i=vnode.componentInstance)){// child component. it should have hydrated its own tree.
initComponent(vnode,insertedVnodeQueue);return true;}}if(isDef(tag)){if(isDef(children)){// empty element, allow client to pick up and populate children
if(!elm.hasChildNodes()){createChildren(vnode,children,insertedVnodeQueue);}else{var childrenMatch=true;var childNode=elm.firstChild;for(var i$1=0;i$1<children.length;i$1++){if(!childNode||!hydrate(childNode,children[i$1],insertedVnodeQueue)){childrenMatch=false;break;}childNode=childNode.nextSibling;}// if childNode is not null, it means the actual childNodes list is
// longer than the virtual children list.
if(!childrenMatch||childNode){if("development"!=='production'&&typeof console!=='undefined'&&!bailed){bailed=true;console.warn('Parent: ',elm);console.warn('Mismatching childNodes vs. VNodes: ',elm.childNodes,children);}return false;}}}if(isDef(data)){for(var key in data){if(!isRenderedModule(key)){invokeCreateHooks(vnode,insertedVnodeQueue);break;}}}}else if(elm.data!==vnode.text){elm.data=vnode.text;}return true;}function assertNodeMatch(node,vnode){if(isDef(vnode.tag)){return vnode.tag.indexOf('vue-component')===0||vnode.tag.toLowerCase()===(node.tagName&&node.tagName.toLowerCase());}else{return node.nodeType===(vnode.isComment?8:3);}}return function patch(oldVnode,vnode,hydrating,removeOnly,parentElm,refElm){if(isUndef(vnode)){if(isDef(oldVnode)){invokeDestroyHook(oldVnode);}return;}var isInitialPatch=false;var insertedVnodeQueue=[];if(isUndef(oldVnode)){// empty mount (likely as component), create new root element
isInitialPatch=true;createElm(vnode,insertedVnodeQueue,parentElm,refElm);}else{var isRealElement=isDef(oldVnode.nodeType);if(!isRealElement&&sameVnode(oldVnode,vnode)){// patch existing root node
patchVnode(oldVnode,vnode,insertedVnodeQueue,removeOnly);}else{if(isRealElement){// mounting to a real element
// check if this is server-rendered content and if we can perform
// a successful hydration.
if(oldVnode.nodeType===1&&oldVnode.hasAttribute(SSR_ATTR)){oldVnode.removeAttribute(SSR_ATTR);hydrating=true;}if(isTrue(hydrating)){if(hydrate(oldVnode,vnode,insertedVnodeQueue)){invokeInsertHook(vnode,insertedVnodeQueue,true);return oldVnode;}else{warn('The client-side rendered virtual DOM tree is not matching '+'server-rendered content. This is likely caused by incorrect '+'HTML markup, for example nesting block-level elements inside '+'<p>, or missing <tbody>. Bailing hydration and performing '+'full client-side render.');}}// either not server-rendered, or hydration failed.
// create an empty node and replace it
oldVnode=emptyNodeAt(oldVnode);}// replacing existing element
var oldElm=oldVnode.elm;var parentElm$1=nodeOps.parentNode(oldElm);createElm(vnode,insertedVnodeQueue,// extremely rare edge case: do not insert if old element is in a
// leaving transition. Only happens when combining transition +
// keep-alive + HOCs. (#4590)
oldElm._leaveCb?null:parentElm$1,nodeOps.nextSibling(oldElm));if(isDef(vnode.parent)){// component root element replaced.
// update parent placeholder node element, recursively
var ancestor=vnode.parent;while(ancestor){ancestor.elm=vnode.elm;ancestor=ancestor.parent;}if(isPatchable(vnode)){for(var i=0;i<cbs.create.length;++i){cbs.create[i](emptyNode,vnode.parent);}}}if(isDef(parentElm$1)){removeVnodes(parentElm$1,[oldVnode],0,0);}else if(isDef(oldVnode.tag)){invokeDestroyHook(oldVnode);}}}invokeInsertHook(vnode,insertedVnodeQueue,isInitialPatch);return vnode.elm;};}/*  */var directives={create:updateDirectives,update:updateDirectives,destroy:function unbindDirectives(vnode){updateDirectives(vnode,emptyNode);}};function updateDirectives(oldVnode,vnode){if(oldVnode.data.directives||vnode.data.directives){_update(oldVnode,vnode);}}function _update(oldVnode,vnode){var isCreate=oldVnode===emptyNode;var isDestroy=vnode===emptyNode;var oldDirs=normalizeDirectives$1(oldVnode.data.directives,oldVnode.context);var newDirs=normalizeDirectives$1(vnode.data.directives,vnode.context);var dirsWithInsert=[];var dirsWithPostpatch=[];var key,oldDir,dir;for(key in newDirs){oldDir=oldDirs[key];dir=newDirs[key];if(!oldDir){// new directive, bind
callHook$1(dir,'bind',vnode,oldVnode);if(dir.def&&dir.def.inserted){dirsWithInsert.push(dir);}}else{// existing directive, update
dir.oldValue=oldDir.value;callHook$1(dir,'update',vnode,oldVnode);if(dir.def&&dir.def.componentUpdated){dirsWithPostpatch.push(dir);}}}if(dirsWithInsert.length){var callInsert=function callInsert(){for(var i=0;i<dirsWithInsert.length;i++){callHook$1(dirsWithInsert[i],'inserted',vnode,oldVnode);}};if(isCreate){mergeVNodeHook(vnode.data.hook||(vnode.data.hook={}),'insert',callInsert);}else{callInsert();}}if(dirsWithPostpatch.length){mergeVNodeHook(vnode.data.hook||(vnode.data.hook={}),'postpatch',function(){for(var i=0;i<dirsWithPostpatch.length;i++){callHook$1(dirsWithPostpatch[i],'componentUpdated',vnode,oldVnode);}});}if(!isCreate){for(key in oldDirs){if(!newDirs[key]){// no longer present, unbind
callHook$1(oldDirs[key],'unbind',oldVnode,oldVnode,isDestroy);}}}}var emptyModifiers=Object.create(null);function normalizeDirectives$1(dirs,vm){var res=Object.create(null);if(!dirs){return res;}var i,dir;for(i=0;i<dirs.length;i++){dir=dirs[i];if(!dir.modifiers){dir.modifiers=emptyModifiers;}res[getRawDirName(dir)]=dir;dir.def=resolveAsset(vm.$options,'directives',dir.name,true);}return res;}function getRawDirName(dir){return dir.rawName||dir.name+"."+Object.keys(dir.modifiers||{}).join('.');}function callHook$1(dir,hook,vnode,oldVnode,isDestroy){var fn=dir.def&&dir.def[hook];if(fn){try{fn(vnode.elm,dir,vnode,oldVnode,isDestroy);}catch(e){handleError(e,vnode.context,"directive "+dir.name+" "+hook+" hook");}}}var baseModules=[ref,directives];/*  */function updateAttrs(oldVnode,vnode){var opts=vnode.componentOptions;if(isDef(opts)&&opts.Ctor.options.inheritAttrs===false){return;}if(isUndef(oldVnode.data.attrs)&&isUndef(vnode.data.attrs)){return;}var key,cur,old;var elm=vnode.elm;var oldAttrs=oldVnode.data.attrs||{};var attrs=vnode.data.attrs||{};// clone observed objects, as the user probably wants to mutate it
if(isDef(attrs.__ob__)){attrs=vnode.data.attrs=extend({},attrs);}for(key in attrs){cur=attrs[key];old=oldAttrs[key];if(old!==cur){setAttr(elm,key,cur);}}// #4391: in IE9, setting type can reset value for input[type=radio]
/* istanbul ignore if */if(isIE9&&attrs.value!==oldAttrs.value){setAttr(elm,'value',attrs.value);}for(key in oldAttrs){if(isUndef(attrs[key])){if(isXlink(key)){elm.removeAttributeNS(xlinkNS,getXlinkProp(key));}else if(!isEnumeratedAttr(key)){elm.removeAttribute(key);}}}}function setAttr(el,key,value){if(isBooleanAttr(key)){// set attribute for blank value
// e.g. <option disabled>Select one</option>
if(isFalsyAttrValue(value)){el.removeAttribute(key);}else{el.setAttribute(key,key);}}else if(isEnumeratedAttr(key)){el.setAttribute(key,isFalsyAttrValue(value)||value==='false'?'false':'true');}else if(isXlink(key)){if(isFalsyAttrValue(value)){el.removeAttributeNS(xlinkNS,getXlinkProp(key));}else{el.setAttributeNS(xlinkNS,key,value);}}else{if(isFalsyAttrValue(value)){el.removeAttribute(key);}else{el.setAttribute(key,value);}}}var attrs={create:updateAttrs,update:updateAttrs};/*  */function updateClass(oldVnode,vnode){var el=vnode.elm;var data=vnode.data;var oldData=oldVnode.data;if(isUndef(data.staticClass)&&isUndef(data.class)&&(isUndef(oldData)||isUndef(oldData.staticClass)&&isUndef(oldData.class))){return;}var cls=genClassForVnode(vnode);// handle transition classes
var transitionClass=el._transitionClasses;if(isDef(transitionClass)){cls=concat(cls,stringifyClass(transitionClass));}// set the class
if(cls!==el._prevClass){el.setAttribute('class',cls);el._prevClass=cls;}}var klass={create:updateClass,update:updateClass};/*  */var validDivisionCharRE=/[\w).+\-_$\]]/;function parseFilters(exp){var inSingle=false;var inDouble=false;var inTemplateString=false;var inRegex=false;var curly=0;var square=0;var paren=0;var lastFilterIndex=0;var c,prev,i,expression,filters;for(i=0;i<exp.length;i++){prev=c;c=exp.charCodeAt(i);if(inSingle){if(c===0x27&&prev!==0x5C){inSingle=false;}}else if(inDouble){if(c===0x22&&prev!==0x5C){inDouble=false;}}else if(inTemplateString){if(c===0x60&&prev!==0x5C){inTemplateString=false;}}else if(inRegex){if(c===0x2f&&prev!==0x5C){inRegex=false;}}else if(c===0x7C&&// pipe
exp.charCodeAt(i+1)!==0x7C&&exp.charCodeAt(i-1)!==0x7C&&!curly&&!square&&!paren){if(expression===undefined){// first filter, end of expression
lastFilterIndex=i+1;expression=exp.slice(0,i).trim();}else{pushFilter();}}else{switch(c){case 0x22:inDouble=true;break;// "
case 0x27:inSingle=true;break;// '
case 0x60:inTemplateString=true;break;// `
case 0x28:paren++;break;// (
case 0x29:paren--;break;// )
case 0x5B:square++;break;// [
case 0x5D:square--;break;// ]
case 0x7B:curly++;break;// {
case 0x7D:curly--;break;// }
}if(c===0x2f){// /
var j=i-1;var p=void 0;// find first non-whitespace prev char
for(;j>=0;j--){p=exp.charAt(j);if(p!==' '){break;}}if(!p||!validDivisionCharRE.test(p)){inRegex=true;}}}}if(expression===undefined){expression=exp.slice(0,i).trim();}else if(lastFilterIndex!==0){pushFilter();}function pushFilter(){(filters||(filters=[])).push(exp.slice(lastFilterIndex,i).trim());lastFilterIndex=i+1;}if(filters){for(i=0;i<filters.length;i++){expression=wrapFilter(expression,filters[i]);}}return expression;}function wrapFilter(exp,filter){var i=filter.indexOf('(');if(i<0){// _f: resolveFilter
return"_f(\""+filter+"\")("+exp+")";}else{var name=filter.slice(0,i);var args=filter.slice(i+1);return"_f(\""+name+"\")("+exp+","+args;}}/*  */function baseWarn(msg){console.error("[Vue compiler]: "+msg);}function pluckModuleFunction(modules,key){return modules?modules.map(function(m){return m[key];}).filter(function(_){return _;}):[];}function addProp(el,name,value){(el.props||(el.props=[])).push({name:name,value:value});}function addAttr(el,name,value){(el.attrs||(el.attrs=[])).push({name:name,value:value});}function addDirective(el,name,rawName,value,arg,modifiers){(el.directives||(el.directives=[])).push({name:name,rawName:rawName,value:value,arg:arg,modifiers:modifiers});}function addHandler(el,name,value,modifiers,important,warn){// warn prevent and passive modifier
/* istanbul ignore if */if("development"!=='production'&&warn&&modifiers&&modifiers.prevent&&modifiers.passive){warn('passive and prevent can\'t be used together. '+'Passive handler can\'t prevent default event.');}// check capture modifier
if(modifiers&&modifiers.capture){delete modifiers.capture;name='!'+name;// mark the event as captured
}if(modifiers&&modifiers.once){delete modifiers.once;name='~'+name;// mark the event as once
}/* istanbul ignore if */if(modifiers&&modifiers.passive){delete modifiers.passive;name='&'+name;// mark the event as passive
}var events;if(modifiers&&modifiers.native){delete modifiers.native;events=el.nativeEvents||(el.nativeEvents={});}else{events=el.events||(el.events={});}var newHandler={value:value,modifiers:modifiers};var handlers=events[name];/* istanbul ignore if */if(Array.isArray(handlers)){important?handlers.unshift(newHandler):handlers.push(newHandler);}else if(handlers){events[name]=important?[newHandler,handlers]:[handlers,newHandler];}else{events[name]=newHandler;}}function getBindingAttr(el,name,getStatic){var dynamicValue=getAndRemoveAttr(el,':'+name)||getAndRemoveAttr(el,'v-bind:'+name);if(dynamicValue!=null){return parseFilters(dynamicValue);}else if(getStatic!==false){var staticValue=getAndRemoveAttr(el,name);if(staticValue!=null){return JSON.stringify(staticValue);}}}function getAndRemoveAttr(el,name){var val;if((val=el.attrsMap[name])!=null){var list=el.attrsList;for(var i=0,l=list.length;i<l;i++){if(list[i].name===name){list.splice(i,1);break;}}}return val;}/*  *//**
 * Cross-platform code generation for component v-model
 */function genComponentModel(el,value,modifiers){var ref=modifiers||{};var number=ref.number;var trim=ref.trim;var baseValueExpression='$$v';var valueExpression=baseValueExpression;if(trim){valueExpression="(typeof "+baseValueExpression+" === 'string'"+"? "+baseValueExpression+".trim()"+": "+baseValueExpression+")";}if(number){valueExpression="_n("+valueExpression+")";}var assignment=genAssignmentCode(value,valueExpression);el.model={value:"("+value+")",expression:"\""+value+"\"",callback:"function ("+baseValueExpression+") {"+assignment+"}"};}/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */function genAssignmentCode(value,assignment){var modelRs=parseModel(value);if(modelRs.idx===null){return value+"="+assignment;}else{return"$set("+modelRs.exp+", "+modelRs.idx+", "+assignment+")";}}/**
 * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)
 *
 * for loop possible cases:
 *
 * - test
 * - test[idx]
 * - test[test1[idx]]
 * - test["a"][idx]
 * - xxx.test[a[a].test1[idx]]
 * - test.xxx.a["asa"][test1[idx]]
 *
 */var len;var str;var chr;var index$1;var expressionPos;var expressionEndPos;function parseModel(val){str=val;len=str.length;index$1=expressionPos=expressionEndPos=0;if(val.indexOf('[')<0||val.lastIndexOf(']')<len-1){return{exp:val,idx:null};}while(!eof()){chr=next();/* istanbul ignore if */if(isStringStart(chr)){parseString(chr);}else if(chr===0x5B){parseBracket(chr);}}return{exp:val.substring(0,expressionPos),idx:val.substring(expressionPos+1,expressionEndPos)};}function next(){return str.charCodeAt(++index$1);}function eof(){return index$1>=len;}function isStringStart(chr){return chr===0x22||chr===0x27;}function parseBracket(chr){var inBracket=1;expressionPos=index$1;while(!eof()){chr=next();if(isStringStart(chr)){parseString(chr);continue;}if(chr===0x5B){inBracket++;}if(chr===0x5D){inBracket--;}if(inBracket===0){expressionEndPos=index$1;break;}}}function parseString(chr){var stringQuote=chr;while(!eof()){chr=next();if(chr===stringQuote){break;}}}/*  */var warn$1;// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN='__r';var CHECKBOX_RADIO_TOKEN='__c';function model(el,dir,_warn){warn$1=_warn;var value=dir.value;var modifiers=dir.modifiers;var tag=el.tag;var type=el.attrsMap.type;{var dynamicType=el.attrsMap['v-bind:type']||el.attrsMap[':type'];if(tag==='input'&&dynamicType){warn$1("<input :type=\""+dynamicType+"\" v-model=\""+value+"\">:\n"+"v-model does not support dynamic input types. Use v-if branches instead.");}// inputs with type="file" are read only and setting the input's
// value will throw an error.
if(tag==='input'&&type==='file'){warn$1("<"+el.tag+" v-model=\""+value+"\" type=\"file\">:\n"+"File inputs are read only. Use a v-on:change listener instead.");}}if(el.component){genComponentModel(el,value,modifiers);// component v-model doesn't need extra runtime
return false;}else if(tag==='select'){genSelect(el,value,modifiers);}else if(tag==='input'&&type==='checkbox'){genCheckboxModel(el,value,modifiers);}else if(tag==='input'&&type==='radio'){genRadioModel(el,value,modifiers);}else if(tag==='input'||tag==='textarea'){genDefaultModel(el,value,modifiers);}else if(!config.isReservedTag(tag)){genComponentModel(el,value,modifiers);// component v-model doesn't need extra runtime
return false;}else{warn$1("<"+el.tag+" v-model=\""+value+"\">: "+"v-model is not supported on this element type. "+'If you are working with contenteditable, it\'s recommended to '+'wrap a library dedicated for that purpose inside a custom component.');}// ensure runtime directive metadata
return true;}function genCheckboxModel(el,value,modifiers){var number=modifiers&&modifiers.number;var valueBinding=getBindingAttr(el,'value')||'null';var trueValueBinding=getBindingAttr(el,'true-value')||'true';var falseValueBinding=getBindingAttr(el,'false-value')||'false';addProp(el,'checked',"Array.isArray("+value+")"+"?_i("+value+","+valueBinding+")>-1"+(trueValueBinding==='true'?":("+value+")":":_q("+value+","+trueValueBinding+")"));addHandler(el,CHECKBOX_RADIO_TOKEN,"var $$a="+value+","+'$$el=$event.target,'+"$$c=$$el.checked?("+trueValueBinding+"):("+falseValueBinding+");"+'if(Array.isArray($$a)){'+"var $$v="+(number?'_n('+valueBinding+')':valueBinding)+","+'$$i=_i($$a,$$v);'+"if($$el.checked){$$i<0&&("+value+"=$$a.concat($$v))}"+"else{$$i>-1&&("+value+"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}"+"}else{"+genAssignmentCode(value,'$$c')+"}",null,true);}function genRadioModel(el,value,modifiers){var number=modifiers&&modifiers.number;var valueBinding=getBindingAttr(el,'value')||'null';valueBinding=number?"_n("+valueBinding+")":valueBinding;addProp(el,'checked',"_q("+value+","+valueBinding+")");addHandler(el,CHECKBOX_RADIO_TOKEN,genAssignmentCode(value,valueBinding),null,true);}function genSelect(el,value,modifiers){var number=modifiers&&modifiers.number;var selectedVal="Array.prototype.filter"+".call($event.target.options,function(o){return o.selected})"+".map(function(o){var val = \"_value\" in o ? o._value : o.value;"+"return "+(number?'_n(val)':'val')+"})";var assignment='$event.target.multiple ? $$selectedVal : $$selectedVal[0]';var code="var $$selectedVal = "+selectedVal+";";code=code+" "+genAssignmentCode(value,assignment);addHandler(el,'change',code,null,true);}function genDefaultModel(el,value,modifiers){var type=el.attrsMap.type;var ref=modifiers||{};var lazy=ref.lazy;var number=ref.number;var trim=ref.trim;var needCompositionGuard=!lazy&&type!=='range';var event=lazy?'change':type==='range'?RANGE_TOKEN:'input';var valueExpression='$event.target.value';if(trim){valueExpression="$event.target.value.trim()";}if(number){valueExpression="_n("+valueExpression+")";}var code=genAssignmentCode(value,valueExpression);if(needCompositionGuard){code="if($event.target.composing)return;"+code;}addProp(el,'value',"("+value+")");addHandler(el,event,code,null,true);if(trim||number){addHandler(el,'blur','$forceUpdate()');}}/*  */// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents(on){var event;/* istanbul ignore if */if(isDef(on[RANGE_TOKEN])){// IE input[type=range] only supports `change` event
event=isIE?'change':'input';on[event]=[].concat(on[RANGE_TOKEN],on[event]||[]);delete on[RANGE_TOKEN];}if(isDef(on[CHECKBOX_RADIO_TOKEN])){// Chrome fires microtasks in between click/change, leads to #4521
event=isChrome?'click':'change';on[event]=[].concat(on[CHECKBOX_RADIO_TOKEN],on[event]||[]);delete on[CHECKBOX_RADIO_TOKEN];}}var target$1;function add$1(event,_handler,once$$1,capture,passive){if(once$$1){var oldHandler=_handler;var _target=target$1;// save current target element in closure
_handler=function handler(ev){var res=arguments.length===1?oldHandler(ev):oldHandler.apply(null,arguments);if(res!==null){remove$2(event,_handler,capture,_target);}};}target$1.addEventListener(event,_handler,supportsPassive?{capture:capture,passive:passive}:capture);}function remove$2(event,handler,capture,_target){(_target||target$1).removeEventListener(event,handler,capture);}function updateDOMListeners(oldVnode,vnode){if(isUndef(oldVnode.data.on)&&isUndef(vnode.data.on)){return;}var on=vnode.data.on||{};var oldOn=oldVnode.data.on||{};target$1=vnode.elm;normalizeEvents(on);updateListeners(on,oldOn,add$1,remove$2,vnode.context);}var events={create:updateDOMListeners,update:updateDOMListeners};/*  */function updateDOMProps(oldVnode,vnode){if(isUndef(oldVnode.data.domProps)&&isUndef(vnode.data.domProps)){return;}var key,cur;var elm=vnode.elm;var oldProps=oldVnode.data.domProps||{};var props=vnode.data.domProps||{};// clone observed objects, as the user probably wants to mutate it
if(isDef(props.__ob__)){props=vnode.data.domProps=extend({},props);}for(key in oldProps){if(isUndef(props[key])){elm[key]='';}}for(key in props){cur=props[key];// ignore children if the node has textContent or innerHTML,
// as these will throw away existing DOM nodes and cause removal errors
// on subsequent patches (#3360)
if(key==='textContent'||key==='innerHTML'){if(vnode.children){vnode.children.length=0;}if(cur===oldProps[key]){continue;}}if(key==='value'){// store value as _value as well since
// non-string values will be stringified
elm._value=cur;// avoid resetting cursor position when value is the same
var strCur=isUndef(cur)?'':String(cur);if(shouldUpdateValue(elm,vnode,strCur)){elm.value=strCur;}}else{elm[key]=cur;}}}// check platforms/web/util/attrs.js acceptValue
function shouldUpdateValue(elm,vnode,checkVal){return!elm.composing&&(vnode.tag==='option'||isDirty(elm,checkVal)||isInputChanged(elm,checkVal));}function isDirty(elm,checkVal){// return true when textbox (.number and .trim) loses focus and its value is
// not equal to the updated value
var notInFocus=true;// #6157
// work around IE bug when accessing document.activeElement in an iframe
try{notInFocus=document.activeElement!==elm;}catch(e){}return notInFocus&&elm.value!==checkVal;}function isInputChanged(elm,newVal){var value=elm.value;var modifiers=elm._vModifiers;// injected by v-model runtime
if(isDef(modifiers)&&modifiers.number){return toNumber(value)!==toNumber(newVal);}if(isDef(modifiers)&&modifiers.trim){return value.trim()!==newVal.trim();}return value!==newVal;}var domProps={create:updateDOMProps,update:updateDOMProps};/*  */var parseStyleText=cached(function(cssText){var res={};var listDelimiter=/;(?![^(]*\))/g;var propertyDelimiter=/:(.+)/;cssText.split(listDelimiter).forEach(function(item){if(item){var tmp=item.split(propertyDelimiter);tmp.length>1&&(res[tmp[0].trim()]=tmp[1].trim());}});return res;});// merge static and dynamic style data on the same vnode
function normalizeStyleData(data){var style=normalizeStyleBinding(data.style);// static style is pre-processed into an object during compilation
// and is always a fresh object, so it's safe to merge into it
return data.staticStyle?extend(data.staticStyle,style):style;}// normalize possible array / string values into Object
function normalizeStyleBinding(bindingStyle){if(Array.isArray(bindingStyle)){return toObject(bindingStyle);}if(typeof bindingStyle==='string'){return parseStyleText(bindingStyle);}return bindingStyle;}/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */function getStyle(vnode,checkChild){var res={};var styleData;if(checkChild){var childNode=vnode;while(childNode.componentInstance){childNode=childNode.componentInstance._vnode;if(childNode.data&&(styleData=normalizeStyleData(childNode.data))){extend(res,styleData);}}}if(styleData=normalizeStyleData(vnode.data)){extend(res,styleData);}var parentNode=vnode;while(parentNode=parentNode.parent){if(parentNode.data&&(styleData=normalizeStyleData(parentNode.data))){extend(res,styleData);}}return res;}/*  */var cssVarRE=/^--/;var importantRE=/\s*!important$/;var setProp=function setProp(el,name,val){/* istanbul ignore if */if(cssVarRE.test(name)){el.style.setProperty(name,val);}else if(importantRE.test(val)){el.style.setProperty(name,val.replace(importantRE,''),'important');}else{var normalizedName=normalize(name);if(Array.isArray(val)){// Support values array created by autoprefixer, e.g.
// {display: ["-webkit-box", "-ms-flexbox", "flex"]}
// Set them one by one, and the browser will only set those it can recognize
for(var i=0,len=val.length;i<len;i++){el.style[normalizedName]=val[i];}}else{el.style[normalizedName]=val;}}};var vendorNames=['Webkit','Moz','ms'];var emptyStyle;var normalize=cached(function(prop){emptyStyle=emptyStyle||document.createElement('div').style;prop=camelize(prop);if(prop!=='filter'&&prop in emptyStyle){return prop;}var capName=prop.charAt(0).toUpperCase()+prop.slice(1);for(var i=0;i<vendorNames.length;i++){var name=vendorNames[i]+capName;if(name in emptyStyle){return name;}}});function updateStyle(oldVnode,vnode){var data=vnode.data;var oldData=oldVnode.data;if(isUndef(data.staticStyle)&&isUndef(data.style)&&isUndef(oldData.staticStyle)&&isUndef(oldData.style)){return;}var cur,name;var el=vnode.elm;var oldStaticStyle=oldData.staticStyle;var oldStyleBinding=oldData.normalizedStyle||oldData.style||{};// if static style exists, stylebinding already merged into it when doing normalizeStyleData
var oldStyle=oldStaticStyle||oldStyleBinding;var style=normalizeStyleBinding(vnode.data.style)||{};// store normalized style under a different key for next diff
// make sure to clone it if it's reactive, since the user likley wants
// to mutate it.
vnode.data.normalizedStyle=isDef(style.__ob__)?extend({},style):style;var newStyle=getStyle(vnode,true);for(name in oldStyle){if(isUndef(newStyle[name])){setProp(el,name,'');}}for(name in newStyle){cur=newStyle[name];if(cur!==oldStyle[name]){// ie9 setting to null has no effect, must use empty string
setProp(el,name,cur==null?'':cur);}}}var style={create:updateStyle,update:updateStyle};/*  *//**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */function addClass(el,cls){/* istanbul ignore if */if(!cls||!(cls=cls.trim())){return;}/* istanbul ignore else */if(el.classList){if(cls.indexOf(' ')>-1){cls.split(/\s+/).forEach(function(c){return el.classList.add(c);});}else{el.classList.add(cls);}}else{var cur=" "+(el.getAttribute('class')||'')+" ";if(cur.indexOf(' '+cls+' ')<0){el.setAttribute('class',(cur+cls).trim());}}}/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */function removeClass(el,cls){/* istanbul ignore if */if(!cls||!(cls=cls.trim())){return;}/* istanbul ignore else */if(el.classList){if(cls.indexOf(' ')>-1){cls.split(/\s+/).forEach(function(c){return el.classList.remove(c);});}else{el.classList.remove(cls);}if(!el.classList.length){el.removeAttribute('class');}}else{var cur=" "+(el.getAttribute('class')||'')+" ";var tar=' '+cls+' ';while(cur.indexOf(tar)>=0){cur=cur.replace(tar,' ');}cur=cur.trim();if(cur){el.setAttribute('class',cur);}else{el.removeAttribute('class');}}}/*  */function resolveTransition(def$$1){if(!def$$1){return;}/* istanbul ignore else */if((typeof def$$1==='undefined'?'undefined':_typeof(def$$1))==='object'){var res={};if(def$$1.css!==false){extend(res,autoCssTransition(def$$1.name||'v'));}extend(res,def$$1);return res;}else if(typeof def$$1==='string'){return autoCssTransition(def$$1);}}var autoCssTransition=cached(function(name){return{enterClass:name+"-enter",enterToClass:name+"-enter-to",enterActiveClass:name+"-enter-active",leaveClass:name+"-leave",leaveToClass:name+"-leave-to",leaveActiveClass:name+"-leave-active"};});var hasTransition=inBrowser&&!isIE9;var TRANSITION='transition';var ANIMATION='animation';// Transition property/event sniffing
var transitionProp='transition';var transitionEndEvent='transitionend';var animationProp='animation';var animationEndEvent='animationend';if(hasTransition){/* istanbul ignore if */if(window.ontransitionend===undefined&&window.onwebkittransitionend!==undefined){transitionProp='WebkitTransition';transitionEndEvent='webkitTransitionEnd';}if(window.onanimationend===undefined&&window.onwebkitanimationend!==undefined){animationProp='WebkitAnimation';animationEndEvent='webkitAnimationEnd';}}// binding to window is necessary to make hot reload work in IE in strict mode
var raf=inBrowser&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout;function nextFrame(fn){raf(function(){raf(fn);});}function addTransitionClass(el,cls){var transitionClasses=el._transitionClasses||(el._transitionClasses=[]);if(transitionClasses.indexOf(cls)<0){transitionClasses.push(cls);addClass(el,cls);}}function removeTransitionClass(el,cls){if(el._transitionClasses){remove(el._transitionClasses,cls);}removeClass(el,cls);}function whenTransitionEnds(el,expectedType,cb){var ref=getTransitionInfo(el,expectedType);var type=ref.type;var timeout=ref.timeout;var propCount=ref.propCount;if(!type){return cb();}var event=type===TRANSITION?transitionEndEvent:animationEndEvent;var ended=0;var end=function end(){el.removeEventListener(event,onEnd);cb();};var onEnd=function onEnd(e){if(e.target===el){if(++ended>=propCount){end();}}};setTimeout(function(){if(ended<propCount){end();}},timeout+1);el.addEventListener(event,onEnd);}var transformRE=/\b(transform|all)(,|$)/;function getTransitionInfo(el,expectedType){var styles=window.getComputedStyle(el);var transitionDelays=styles[transitionProp+'Delay'].split(', ');var transitionDurations=styles[transitionProp+'Duration'].split(', ');var transitionTimeout=getTimeout(transitionDelays,transitionDurations);var animationDelays=styles[animationProp+'Delay'].split(', ');var animationDurations=styles[animationProp+'Duration'].split(', ');var animationTimeout=getTimeout(animationDelays,animationDurations);var type;var timeout=0;var propCount=0;/* istanbul ignore if */if(expectedType===TRANSITION){if(transitionTimeout>0){type=TRANSITION;timeout=transitionTimeout;propCount=transitionDurations.length;}}else if(expectedType===ANIMATION){if(animationTimeout>0){type=ANIMATION;timeout=animationTimeout;propCount=animationDurations.length;}}else{timeout=Math.max(transitionTimeout,animationTimeout);type=timeout>0?transitionTimeout>animationTimeout?TRANSITION:ANIMATION:null;propCount=type?type===TRANSITION?transitionDurations.length:animationDurations.length:0;}var hasTransform=type===TRANSITION&&transformRE.test(styles[transitionProp+'Property']);return{type:type,timeout:timeout,propCount:propCount,hasTransform:hasTransform};}function getTimeout(delays,durations){/* istanbul ignore next */while(delays.length<durations.length){delays=delays.concat(delays);}return Math.max.apply(null,durations.map(function(d,i){return toMs(d)+toMs(delays[i]);}));}function toMs(s){return Number(s.slice(0,-1))*1000;}/*  */function enter(vnode,toggleDisplay){var el=vnode.elm;// call leave callback now
if(isDef(el._leaveCb)){el._leaveCb.cancelled=true;el._leaveCb();}var data=resolveTransition(vnode.data.transition);if(isUndef(data)){return;}/* istanbul ignore if */if(isDef(el._enterCb)||el.nodeType!==1){return;}var css=data.css;var type=data.type;var enterClass=data.enterClass;var enterToClass=data.enterToClass;var enterActiveClass=data.enterActiveClass;var appearClass=data.appearClass;var appearToClass=data.appearToClass;var appearActiveClass=data.appearActiveClass;var beforeEnter=data.beforeEnter;var enter=data.enter;var afterEnter=data.afterEnter;var enterCancelled=data.enterCancelled;var beforeAppear=data.beforeAppear;var appear=data.appear;var afterAppear=data.afterAppear;var appearCancelled=data.appearCancelled;var duration=data.duration;// activeInstance will always be the <transition> component managing this
// transition. One edge case to check is when the <transition> is placed
// as the root node of a child component. In that case we need to check
// <transition>'s parent for appear check.
var context=activeInstance;var transitionNode=activeInstance.$vnode;while(transitionNode&&transitionNode.parent){transitionNode=transitionNode.parent;context=transitionNode.context;}var isAppear=!context._isMounted||!vnode.isRootInsert;if(isAppear&&!appear&&appear!==''){return;}var startClass=isAppear&&appearClass?appearClass:enterClass;var activeClass=isAppear&&appearActiveClass?appearActiveClass:enterActiveClass;var toClass=isAppear&&appearToClass?appearToClass:enterToClass;var beforeEnterHook=isAppear?beforeAppear||beforeEnter:beforeEnter;var enterHook=isAppear?typeof appear==='function'?appear:enter:enter;var afterEnterHook=isAppear?afterAppear||afterEnter:afterEnter;var enterCancelledHook=isAppear?appearCancelled||enterCancelled:enterCancelled;var explicitEnterDuration=toNumber(isObject(duration)?duration.enter:duration);if("development"!=='production'&&explicitEnterDuration!=null){checkDuration(explicitEnterDuration,'enter',vnode);}var expectsCSS=css!==false&&!isIE9;var userWantsControl=getHookArgumentsLength(enterHook);var cb=el._enterCb=once(function(){if(expectsCSS){removeTransitionClass(el,toClass);removeTransitionClass(el,activeClass);}if(cb.cancelled){if(expectsCSS){removeTransitionClass(el,startClass);}enterCancelledHook&&enterCancelledHook(el);}else{afterEnterHook&&afterEnterHook(el);}el._enterCb=null;});if(!vnode.data.show){// remove pending leave element on enter by injecting an insert hook
mergeVNodeHook(vnode.data.hook||(vnode.data.hook={}),'insert',function(){var parent=el.parentNode;var pendingNode=parent&&parent._pending&&parent._pending[vnode.key];if(pendingNode&&pendingNode.tag===vnode.tag&&pendingNode.elm._leaveCb){pendingNode.elm._leaveCb();}enterHook&&enterHook(el,cb);});}// start enter transition
beforeEnterHook&&beforeEnterHook(el);if(expectsCSS){addTransitionClass(el,startClass);addTransitionClass(el,activeClass);nextFrame(function(){addTransitionClass(el,toClass);removeTransitionClass(el,startClass);if(!cb.cancelled&&!userWantsControl){if(isValidDuration(explicitEnterDuration)){setTimeout(cb,explicitEnterDuration);}else{whenTransitionEnds(el,type,cb);}}});}if(vnode.data.show){toggleDisplay&&toggleDisplay();enterHook&&enterHook(el,cb);}if(!expectsCSS&&!userWantsControl){cb();}}function leave(vnode,rm){var el=vnode.elm;// call enter callback now
if(isDef(el._enterCb)){el._enterCb.cancelled=true;el._enterCb();}var data=resolveTransition(vnode.data.transition);if(isUndef(data)){return rm();}/* istanbul ignore if */if(isDef(el._leaveCb)||el.nodeType!==1){return;}var css=data.css;var type=data.type;var leaveClass=data.leaveClass;var leaveToClass=data.leaveToClass;var leaveActiveClass=data.leaveActiveClass;var beforeLeave=data.beforeLeave;var leave=data.leave;var afterLeave=data.afterLeave;var leaveCancelled=data.leaveCancelled;var delayLeave=data.delayLeave;var duration=data.duration;var expectsCSS=css!==false&&!isIE9;var userWantsControl=getHookArgumentsLength(leave);var explicitLeaveDuration=toNumber(isObject(duration)?duration.leave:duration);if("development"!=='production'&&isDef(explicitLeaveDuration)){checkDuration(explicitLeaveDuration,'leave',vnode);}var cb=el._leaveCb=once(function(){if(el.parentNode&&el.parentNode._pending){el.parentNode._pending[vnode.key]=null;}if(expectsCSS){removeTransitionClass(el,leaveToClass);removeTransitionClass(el,leaveActiveClass);}if(cb.cancelled){if(expectsCSS){removeTransitionClass(el,leaveClass);}leaveCancelled&&leaveCancelled(el);}else{rm();afterLeave&&afterLeave(el);}el._leaveCb=null;});if(delayLeave){delayLeave(performLeave);}else{performLeave();}function performLeave(){// the delayed leave may have already been cancelled
if(cb.cancelled){return;}// record leaving element
if(!vnode.data.show){(el.parentNode._pending||(el.parentNode._pending={}))[vnode.key]=vnode;}beforeLeave&&beforeLeave(el);if(expectsCSS){addTransitionClass(el,leaveClass);addTransitionClass(el,leaveActiveClass);nextFrame(function(){addTransitionClass(el,leaveToClass);removeTransitionClass(el,leaveClass);if(!cb.cancelled&&!userWantsControl){if(isValidDuration(explicitLeaveDuration)){setTimeout(cb,explicitLeaveDuration);}else{whenTransitionEnds(el,type,cb);}}});}leave&&leave(el,cb);if(!expectsCSS&&!userWantsControl){cb();}}}// only used in dev mode
function checkDuration(val,name,vnode){if(typeof val!=='number'){warn("<transition> explicit "+name+" duration is not a valid number - "+"got "+JSON.stringify(val)+".",vnode.context);}else if(isNaN(val)){warn("<transition> explicit "+name+" duration is NaN - "+'the duration expression might be incorrect.',vnode.context);}}function isValidDuration(val){return typeof val==='number'&&!isNaN(val);}/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */function getHookArgumentsLength(fn){if(isUndef(fn)){return false;}var invokerFns=fn.fns;if(isDef(invokerFns)){// invoker
return getHookArgumentsLength(Array.isArray(invokerFns)?invokerFns[0]:invokerFns);}else{return(fn._length||fn.length)>1;}}function _enter(_,vnode){if(vnode.data.show!==true){enter(vnode);}}var transition=inBrowser?{create:_enter,activate:_enter,remove:function remove$$1(vnode,rm){/* istanbul ignore else */if(vnode.data.show!==true){leave(vnode,rm);}else{rm();}}}:{};var platformModules=[attrs,klass,events,domProps,style,transition];/*  */// the directive module should be applied last, after all
// built-in modules have been applied.
var modules=platformModules.concat(baseModules);var patch=createPatchFunction({nodeOps:nodeOps,modules:modules});/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */var isTextInputType=makeMap('text,number,password,search,email,tel,url');/* istanbul ignore if */if(isIE9){// http://www.matts411.com/post/internet-explorer-9-oninput/
document.addEventListener('selectionchange',function(){var el=document.activeElement;if(el&&el.vmodel){trigger(el,'input');}});}var model$1={inserted:function inserted(el,binding,vnode){if(vnode.tag==='select'){var cb=function cb(){setSelected(el,binding,vnode.context);};cb();/* istanbul ignore if */if(isIE||isEdge){setTimeout(cb,0);}el._vOptions=[].map.call(el.options,getValue);}else if(vnode.tag==='textarea'||isTextInputType(el.type)){el._vModifiers=binding.modifiers;if(!binding.modifiers.lazy){// Safari < 10.2 & UIWebView doesn't fire compositionend when
// switching focus before confirming composition choice
// this also fixes the issue where some browsers e.g. iOS Chrome
// fires "change" instead of "input" on autocomplete.
el.addEventListener('change',onCompositionEnd);if(!isAndroid){el.addEventListener('compositionstart',onCompositionStart);el.addEventListener('compositionend',onCompositionEnd);}/* istanbul ignore if */if(isIE9){el.vmodel=true;}}}},componentUpdated:function componentUpdated(el,binding,vnode){if(vnode.tag==='select'){setSelected(el,binding,vnode.context);// in case the options rendered by v-for have changed,
// it's possible that the value is out-of-sync with the rendered options.
// detect such cases and filter out values that no longer has a matching
// option in the DOM.
var prevOptions=el._vOptions;var curOptions=el._vOptions=[].map.call(el.options,getValue);if(curOptions.some(function(o,i){return!looseEqual(o,prevOptions[i]);})){trigger(el,'change');}}}};function setSelected(el,binding,vm){var value=binding.value;var isMultiple=el.multiple;if(isMultiple&&!Array.isArray(value)){"development"!=='production'&&warn("<select multiple v-model=\""+binding.expression+"\"> "+"expects an Array value for its binding, but got "+Object.prototype.toString.call(value).slice(8,-1),vm);return;}var selected,option;for(var i=0,l=el.options.length;i<l;i++){option=el.options[i];if(isMultiple){selected=looseIndexOf(value,getValue(option))>-1;if(option.selected!==selected){option.selected=selected;}}else{if(looseEqual(getValue(option),value)){if(el.selectedIndex!==i){el.selectedIndex=i;}return;}}}if(!isMultiple){el.selectedIndex=-1;}}function getValue(option){return'_value'in option?option._value:option.value;}function onCompositionStart(e){e.target.composing=true;}function onCompositionEnd(e){// prevent triggering an input event for no reason
if(!e.target.composing){return;}e.target.composing=false;trigger(e.target,'input');}function trigger(el,type){var e=document.createEvent('HTMLEvents');e.initEvent(type,true,true);el.dispatchEvent(e);}/*  */// recursively search for possible transition defined inside the component root
function locateNode(vnode){return vnode.componentInstance&&(!vnode.data||!vnode.data.transition)?locateNode(vnode.componentInstance._vnode):vnode;}var show={bind:function bind(el,ref,vnode){var value=ref.value;vnode=locateNode(vnode);var transition$$1=vnode.data&&vnode.data.transition;var originalDisplay=el.__vOriginalDisplay=el.style.display==='none'?'':el.style.display;if(value&&transition$$1){vnode.data.show=true;enter(vnode,function(){el.style.display=originalDisplay;});}else{el.style.display=value?originalDisplay:'none';}},update:function update(el,ref,vnode){var value=ref.value;var oldValue=ref.oldValue;/* istanbul ignore if */if(value===oldValue){return;}vnode=locateNode(vnode);var transition$$1=vnode.data&&vnode.data.transition;if(transition$$1){vnode.data.show=true;if(value){enter(vnode,function(){el.style.display=el.__vOriginalDisplay;});}else{leave(vnode,function(){el.style.display='none';});}}else{el.style.display=value?el.__vOriginalDisplay:'none';}},unbind:function unbind(el,binding,vnode,oldVnode,isDestroy){if(!isDestroy){el.style.display=el.__vOriginalDisplay;}}};var platformDirectives={model:model$1,show:show};/*  */// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)
var transitionProps={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild(vnode){var compOptions=vnode&&vnode.componentOptions;if(compOptions&&compOptions.Ctor.options.abstract){return getRealChild(getFirstComponentChild(compOptions.children));}else{return vnode;}}function extractTransitionData(comp){var data={};var options=comp.$options;// props
for(var key in options.propsData){data[key]=comp[key];}// events.
// extract listeners and pass them directly to the transition methods
var listeners=options._parentListeners;for(var key$1 in listeners){data[camelize(key$1)]=listeners[key$1];}return data;}function placeholder(h,rawChild){if(/\d-keep-alive$/.test(rawChild.tag)){return h('keep-alive',{props:rawChild.componentOptions.propsData});}}function hasParentTransition(vnode){while(vnode=vnode.parent){if(vnode.data.transition){return true;}}}function isSameChild(child,oldChild){return oldChild.key===child.key&&oldChild.tag===child.tag;}function isAsyncPlaceholder(node){return node.isComment&&node.asyncFactory;}var Transition={name:'transition',props:transitionProps,abstract:true,render:function render(h){var this$1=this;var children=this.$options._renderChildren;if(!children){return;}// filter out text nodes (possible whitespaces)
children=children.filter(function(c){return c.tag||isAsyncPlaceholder(c);});/* istanbul ignore if */if(!children.length){return;}// warn multiple elements
if("development"!=='production'&&children.length>1){warn('<transition> can only be used on a single element. Use '+'<transition-group> for lists.',this.$parent);}var mode=this.mode;// warn invalid mode
if("development"!=='production'&&mode&&mode!=='in-out'&&mode!=='out-in'){warn('invalid <transition> mode: '+mode,this.$parent);}var rawChild=children[0];// if this is a component root node and the component's
// parent container node also has transition, skip.
if(hasParentTransition(this.$vnode)){return rawChild;}// apply transition data to child
// use getRealChild() to ignore abstract components e.g. keep-alive
var child=getRealChild(rawChild);/* istanbul ignore if */if(!child){return rawChild;}if(this._leaving){return placeholder(h,rawChild);}// ensure a key that is unique to the vnode type and to this transition
// component instance. This key will be used to remove pending leaving nodes
// during entering.
var id="__transition-"+this._uid+"-";child.key=child.key==null?child.isComment?id+'comment':id+child.tag:isPrimitive(child.key)?String(child.key).indexOf(id)===0?child.key:id+child.key:child.key;var data=(child.data||(child.data={})).transition=extractTransitionData(this);var oldRawChild=this._vnode;var oldChild=getRealChild(oldRawChild);// mark v-show
// so that the transition module can hand over the control to the directive
if(child.data.directives&&child.data.directives.some(function(d){return d.name==='show';})){child.data.show=true;}if(oldChild&&oldChild.data&&!isSameChild(child,oldChild)&&!isAsyncPlaceholder(oldChild)){// replace old child transition data with fresh one
// important for dynamic transitions!
var oldData=oldChild&&(oldChild.data.transition=extend({},data));// handle transition mode
if(mode==='out-in'){// return placeholder node and queue update when leave finishes
this._leaving=true;mergeVNodeHook(oldData,'afterLeave',function(){this$1._leaving=false;this$1.$forceUpdate();});return placeholder(h,rawChild);}else if(mode==='in-out'){if(isAsyncPlaceholder(child)){return oldRawChild;}var delayedLeave;var performLeave=function performLeave(){delayedLeave();};mergeVNodeHook(data,'afterEnter',performLeave);mergeVNodeHook(data,'enterCancelled',performLeave);mergeVNodeHook(oldData,'delayLeave',function(leave){delayedLeave=leave;});}}return rawChild;}};/*  */// Provides transition support for list items.
// supports move transitions using the FLIP technique.
// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.
var props=extend({tag:String,moveClass:String},transitionProps);delete props.mode;var TransitionGroup={props:props,render:function render(h){var tag=this.tag||this.$vnode.data.tag||'span';var map=Object.create(null);var prevChildren=this.prevChildren=this.children;var rawChildren=this.$slots.default||[];var children=this.children=[];var transitionData=extractTransitionData(this);for(var i=0;i<rawChildren.length;i++){var c=rawChildren[i];if(c.tag){if(c.key!=null&&String(c.key).indexOf('__vlist')!==0){children.push(c);map[c.key]=c;(c.data||(c.data={})).transition=transitionData;}else{var opts=c.componentOptions;var name=opts?opts.Ctor.options.name||opts.tag||'':c.tag;warn("<transition-group> children must be keyed: <"+name+">");}}}if(prevChildren){var kept=[];var removed=[];for(var i$1=0;i$1<prevChildren.length;i$1++){var c$1=prevChildren[i$1];c$1.data.transition=transitionData;c$1.data.pos=c$1.elm.getBoundingClientRect();if(map[c$1.key]){kept.push(c$1);}else{removed.push(c$1);}}this.kept=h(tag,null,kept);this.removed=removed;}return h(tag,null,children);},beforeUpdate:function beforeUpdate(){// force removing pass
this.__patch__(this._vnode,this.kept,false,// hydrating
true// removeOnly (!important, avoids unnecessary moves)
);this._vnode=this.kept;},updated:function updated(){var children=this.prevChildren;var moveClass=this.moveClass||(this.name||'v')+'-move';if(!children.length||!this.hasMove(children[0].elm,moveClass)){return;}// we divide the work into three loops to avoid mixing DOM reads and writes
// in each iteration - which helps prevent layout thrashing.
children.forEach(callPendingCbs);children.forEach(recordPosition);children.forEach(applyTranslation);// force reflow to put everything in position
var body=document.body;var f=body.offsetHeight;// eslint-disable-line
children.forEach(function(c){if(c.data.moved){var el=c.elm;var s=el.style;addTransitionClass(el,moveClass);s.transform=s.WebkitTransform=s.transitionDuration='';el.addEventListener(transitionEndEvent,el._moveCb=function cb(e){if(!e||/transform$/.test(e.propertyName)){el.removeEventListener(transitionEndEvent,cb);el._moveCb=null;removeTransitionClass(el,moveClass);}});}});},methods:{hasMove:function hasMove(el,moveClass){/* istanbul ignore if */if(!hasTransition){return false;}/* istanbul ignore if */if(this._hasMove){return this._hasMove;}// Detect whether an element with the move class applied has
// CSS transitions. Since the element may be inside an entering
// transition at this very moment, we make a clone of it and remove
// all other transition classes applied to ensure only the move class
// is applied.
var clone=el.cloneNode();if(el._transitionClasses){el._transitionClasses.forEach(function(cls){removeClass(clone,cls);});}addClass(clone,moveClass);clone.style.display='none';this.$el.appendChild(clone);var info=getTransitionInfo(clone);this.$el.removeChild(clone);return this._hasMove=info.hasTransform;}}};function callPendingCbs(c){/* istanbul ignore if */if(c.elm._moveCb){c.elm._moveCb();}/* istanbul ignore if */if(c.elm._enterCb){c.elm._enterCb();}}function recordPosition(c){c.data.newPos=c.elm.getBoundingClientRect();}function applyTranslation(c){var oldPos=c.data.pos;var newPos=c.data.newPos;var dx=oldPos.left-newPos.left;var dy=oldPos.top-newPos.top;if(dx||dy){c.data.moved=true;var s=c.elm.style;s.transform=s.WebkitTransform="translate("+dx+"px,"+dy+"px)";s.transitionDuration='0s';}}var platformComponents={Transition:Transition,TransitionGroup:TransitionGroup};/*  */// install platform specific utils
Vue$3.config.mustUseProp=mustUseProp;Vue$3.config.isReservedTag=isReservedTag;Vue$3.config.isReservedAttr=isReservedAttr;Vue$3.config.getTagNamespace=getTagNamespace;Vue$3.config.isUnknownElement=isUnknownElement;// install platform runtime directives & components
extend(Vue$3.options.directives,platformDirectives);extend(Vue$3.options.components,platformComponents);// install platform patch function
Vue$3.prototype.__patch__=inBrowser?patch:noop;// public mount method
Vue$3.prototype.$mount=function(el,hydrating){el=el&&inBrowser?query(el):undefined;return mountComponent(this,el,hydrating);};// devtools global hook
/* istanbul ignore next */setTimeout(function(){if(config.devtools){if(devtools){devtools.emit('init',Vue$3);}else if("development"!=='production'&&isChrome){console[console.info?'info':'log']('Download the Vue Devtools extension for a better development experience:\n'+'https://github.com/vuejs/vue-devtools');}}if("development"!=='production'&&config.productionTip!==false&&inBrowser&&typeof console!=='undefined'){console[console.info?'info':'log']("You are running Vue in development mode.\n"+"Make sure to turn on production mode when deploying for production.\n"+"See more tips at https://vuejs.org/guide/deployment.html");}},0);/*  */// check whether current browser encodes a char inside attribute values
function shouldDecode(content,encoded){var div=document.createElement('div');div.innerHTML="<div a=\""+content+"\"/>";return div.innerHTML.indexOf(encoded)>0;}// #3663
// IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines=inBrowser?shouldDecode('\n','&#10;'):false;/*  */var defaultTagRE=/\{\{((?:.|\n)+?)\}\}/g;var regexEscapeRE=/[-.*+?^${}()|[\]\/\\]/g;var buildRegex=cached(function(delimiters){var open=delimiters[0].replace(regexEscapeRE,'\\$&');var close=delimiters[1].replace(regexEscapeRE,'\\$&');return new RegExp(open+'((?:.|\\n)+?)'+close,'g');});function parseText(text,delimiters){var tagRE=delimiters?buildRegex(delimiters):defaultTagRE;if(!tagRE.test(text)){return;}var tokens=[];var lastIndex=tagRE.lastIndex=0;var match,index;while(match=tagRE.exec(text)){index=match.index;// push text token
if(index>lastIndex){tokens.push(JSON.stringify(text.slice(lastIndex,index)));}// tag token
var exp=parseFilters(match[1].trim());tokens.push("_s("+exp+")");lastIndex=index+match[0].length;}if(lastIndex<text.length){tokens.push(JSON.stringify(text.slice(lastIndex)));}return tokens.join('+');}/*  */function transformNode(el,options){var warn=options.warn||baseWarn;var staticClass=getAndRemoveAttr(el,'class');if("development"!=='production'&&staticClass){var expression=parseText(staticClass,options.delimiters);if(expression){warn("class=\""+staticClass+"\": "+'Interpolation inside attributes has been removed. '+'Use v-bind or the colon shorthand instead. For example, '+'instead of <div class="{{ val }}">, use <div :class="val">.');}}if(staticClass){el.staticClass=JSON.stringify(staticClass);}var classBinding=getBindingAttr(el,'class',false/* getStatic */);if(classBinding){el.classBinding=classBinding;}}function genData(el){var data='';if(el.staticClass){data+="staticClass:"+el.staticClass+",";}if(el.classBinding){data+="class:"+el.classBinding+",";}return data;}var klass$1={staticKeys:['staticClass'],transformNode:transformNode,genData:genData};/*  */function transformNode$1(el,options){var warn=options.warn||baseWarn;var staticStyle=getAndRemoveAttr(el,'style');if(staticStyle){/* istanbul ignore if */{var expression=parseText(staticStyle,options.delimiters);if(expression){warn("style=\""+staticStyle+"\": "+'Interpolation inside attributes has been removed. '+'Use v-bind or the colon shorthand instead. For example, '+'instead of <div style="{{ val }}">, use <div :style="val">.');}}el.staticStyle=JSON.stringify(parseStyleText(staticStyle));}var styleBinding=getBindingAttr(el,'style',false/* getStatic */);if(styleBinding){el.styleBinding=styleBinding;}}function genData$1(el){var data='';if(el.staticStyle){data+="staticStyle:"+el.staticStyle+",";}if(el.styleBinding){data+="style:("+el.styleBinding+"),";}return data;}var style$1={staticKeys:['staticStyle'],transformNode:transformNode$1,genData:genData$1};var modules$1=[klass$1,style$1];/*  */function text(el,dir){if(dir.value){addProp(el,'textContent',"_s("+dir.value+")");}}/*  */function html(el,dir){if(dir.value){addProp(el,'innerHTML',"_s("+dir.value+")");}}var directives$1={model:model,text:text,html:html};/*  */var isUnaryTag=makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,'+'link,meta,param,source,track,wbr');// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag=makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source');// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag=makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,'+'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,'+'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,'+'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,'+'title,tr,track');/*  */var baseOptions={expectHTML:true,modules:modules$1,directives:directives$1,isPreTag:isPreTag,isUnaryTag:isUnaryTag,mustUseProp:mustUseProp,canBeLeftOpenTag:canBeLeftOpenTag,isReservedTag:isReservedTag,getTagNamespace:getTagNamespace,staticKeys:genStaticKeys(modules$1)};/*  */var decoder;var he={decode:function decode(html){decoder=decoder||document.createElement('div');decoder.innerHTML=html;return decoder.textContent;}};/**
 * Not type-checking this file because it's mostly vendor code.
 *//*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */// Regular Expressions for parsing tags and attributes
var singleAttrIdentifier=/([^\s"'<>/=]+)/;var singleAttrAssign=/(?:=)/;var singleAttrValues=[// attr value double quotes
/"([^"]*)"+/.source,// attr value, single quotes
/'([^']*)'+/.source,// attr value, no quotes
/([^\s"'=<>`]+)/.source];var attribute=new RegExp('^\\s*'+singleAttrIdentifier.source+'(?:\\s*('+singleAttrAssign.source+')'+'\\s*(?:'+singleAttrValues.join('|')+'))?');// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
var ncname='[a-zA-Z_][\\w\\-\\.]*';var qnameCapture='((?:'+ncname+'\\:)?'+ncname+')';var startTagOpen=new RegExp('^<'+qnameCapture);var startTagClose=/^\s*(\/?)>/;var endTag=new RegExp('^<\\/'+qnameCapture+'[^>]*>');var doctype=/^<!DOCTYPE [^>]+>/i;var comment=/^<!--/;var conditionalComment=/^<!\[/;var IS_REGEX_CAPTURING_BROKEN=false;'x'.replace(/x(.)?/g,function(m,g){IS_REGEX_CAPTURING_BROKEN=g==='';});// Special Elements (can contain anything)
var isPlainTextElement=makeMap('script,style,textarea',true);var reCache={};var decodingMap={'&lt;':'<','&gt;':'>','&quot;':'"','&amp;':'&','&#10;':'\n'};var encodedAttr=/&(?:lt|gt|quot|amp);/g;var encodedAttrWithNewLines=/&(?:lt|gt|quot|amp|#10);/g;// #5992
var isIgnoreNewlineTag=makeMap('pre,textarea',true);var shouldIgnoreFirstNewline=function shouldIgnoreFirstNewline(tag,html){return tag&&isIgnoreNewlineTag(tag)&&html[0]==='\n';};function decodeAttr(value,shouldDecodeNewlines){var re=shouldDecodeNewlines?encodedAttrWithNewLines:encodedAttr;return value.replace(re,function(match){return decodingMap[match];});}function parseHTML(html,options){var stack=[];var expectHTML=options.expectHTML;var isUnaryTag$$1=options.isUnaryTag||no;var canBeLeftOpenTag$$1=options.canBeLeftOpenTag||no;var index=0;var last,lastTag;while(html){last=html;// Make sure we're not in a plaintext content element like script/style
if(!lastTag||!isPlainTextElement(lastTag)){var textEnd=html.indexOf('<');if(textEnd===0){// Comment:
if(comment.test(html)){var commentEnd=html.indexOf('-->');if(commentEnd>=0){if(options.shouldKeepComment){options.comment(html.substring(4,commentEnd));}advance(commentEnd+3);continue;}}// http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
if(conditionalComment.test(html)){var conditionalEnd=html.indexOf(']>');if(conditionalEnd>=0){advance(conditionalEnd+2);continue;}}// Doctype:
var doctypeMatch=html.match(doctype);if(doctypeMatch){advance(doctypeMatch[0].length);continue;}// End tag:
var endTagMatch=html.match(endTag);if(endTagMatch){var curIndex=index;advance(endTagMatch[0].length);parseEndTag(endTagMatch[1],curIndex,index);continue;}// Start tag:
var startTagMatch=parseStartTag();if(startTagMatch){handleStartTag(startTagMatch);if(shouldIgnoreFirstNewline(lastTag,html)){advance(1);}continue;}}var text=void 0,rest=void 0,next=void 0;if(textEnd>=0){rest=html.slice(textEnd);while(!endTag.test(rest)&&!startTagOpen.test(rest)&&!comment.test(rest)&&!conditionalComment.test(rest)){// < in plain text, be forgiving and treat it as text
next=rest.indexOf('<',1);if(next<0){break;}textEnd+=next;rest=html.slice(textEnd);}text=html.substring(0,textEnd);advance(textEnd);}if(textEnd<0){text=html;html='';}if(options.chars&&text){options.chars(text);}}else{var endTagLength=0;var stackedTag=lastTag.toLowerCase();var reStackedTag=reCache[stackedTag]||(reCache[stackedTag]=new RegExp('([\\s\\S]*?)(</'+stackedTag+'[^>]*>)','i'));var rest$1=html.replace(reStackedTag,function(all,text,endTag){endTagLength=endTag.length;if(!isPlainTextElement(stackedTag)&&stackedTag!=='noscript'){text=text.replace(/<!--([\s\S]*?)-->/g,'$1').replace(/<!\[CDATA\[([\s\S]*?)]]>/g,'$1');}if(shouldIgnoreFirstNewline(stackedTag,text)){text=text.slice(1);}if(options.chars){options.chars(text);}return'';});index+=html.length-rest$1.length;html=rest$1;parseEndTag(stackedTag,index-endTagLength,index);}if(html===last){options.chars&&options.chars(html);if("development"!=='production'&&!stack.length&&options.warn){options.warn("Mal-formatted tag at end of template: \""+html+"\"");}break;}}// Clean up any remaining tags
parseEndTag();function advance(n){index+=n;html=html.substring(n);}function parseStartTag(){var start=html.match(startTagOpen);if(start){var match={tagName:start[1],attrs:[],start:index};advance(start[0].length);var end,attr;while(!(end=html.match(startTagClose))&&(attr=html.match(attribute))){advance(attr[0].length);match.attrs.push(attr);}if(end){match.unarySlash=end[1];advance(end[0].length);match.end=index;return match;}}}function handleStartTag(match){var tagName=match.tagName;var unarySlash=match.unarySlash;if(expectHTML){if(lastTag==='p'&&isNonPhrasingTag(tagName)){parseEndTag(lastTag);}if(canBeLeftOpenTag$$1(tagName)&&lastTag===tagName){parseEndTag(tagName);}}var unary=isUnaryTag$$1(tagName)||!!unarySlash;var l=match.attrs.length;var attrs=new Array(l);for(var i=0;i<l;i++){var args=match.attrs[i];// hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
if(IS_REGEX_CAPTURING_BROKEN&&args[0].indexOf('""')===-1){if(args[3]===''){delete args[3];}if(args[4]===''){delete args[4];}if(args[5]===''){delete args[5];}}var value=args[3]||args[4]||args[5]||'';attrs[i]={name:args[1],value:decodeAttr(value,options.shouldDecodeNewlines)};}if(!unary){stack.push({tag:tagName,lowerCasedTag:tagName.toLowerCase(),attrs:attrs});lastTag=tagName;}if(options.start){options.start(tagName,attrs,unary,match.start,match.end);}}function parseEndTag(tagName,start,end){var pos,lowerCasedTagName;if(start==null){start=index;}if(end==null){end=index;}if(tagName){lowerCasedTagName=tagName.toLowerCase();}// Find the closest opened tag of the same type
if(tagName){for(pos=stack.length-1;pos>=0;pos--){if(stack[pos].lowerCasedTag===lowerCasedTagName){break;}}}else{// If no tag name is provided, clean shop
pos=0;}if(pos>=0){// Close all the open elements, up the stack
for(var i=stack.length-1;i>=pos;i--){if("development"!=='production'&&(i>pos||!tagName)&&options.warn){options.warn("tag <"+stack[i].tag+"> has no matching end tag.");}if(options.end){options.end(stack[i].tag,start,end);}}// Remove the open elements from the stack
stack.length=pos;lastTag=pos&&stack[pos-1].tag;}else if(lowerCasedTagName==='br'){if(options.start){options.start(tagName,[],true,start,end);}}else if(lowerCasedTagName==='p'){if(options.start){options.start(tagName,[],false,start,end);}if(options.end){options.end(tagName,start,end);}}}}/*  */var onRE=/^@|^v-on:/;var dirRE=/^v-|^@|^:/;var forAliasRE=/(.*?)\s+(?:in|of)\s+(.*)/;var forIteratorRE=/\((\{[^}]*\}|[^,]*),([^,]*)(?:,([^,]*))?\)/;var argRE=/:(.*)$/;var bindRE=/^:|^v-bind:/;var modifierRE=/\.[^.]+/g;var decodeHTMLCached=cached(he.decode);// configurable state
var warn$2;var delimiters;var transforms;var preTransforms;var postTransforms;var platformIsPreTag;var platformMustUseProp;var platformGetTagNamespace;/**
 * Convert HTML string to AST.
 */function parse(template,options){warn$2=options.warn||baseWarn;platformIsPreTag=options.isPreTag||no;platformMustUseProp=options.mustUseProp||no;platformGetTagNamespace=options.getTagNamespace||no;transforms=pluckModuleFunction(options.modules,'transformNode');preTransforms=pluckModuleFunction(options.modules,'preTransformNode');postTransforms=pluckModuleFunction(options.modules,'postTransformNode');delimiters=options.delimiters;var stack=[];var preserveWhitespace=options.preserveWhitespace!==false;var root;var currentParent;var inVPre=false;var inPre=false;var warned=false;function warnOnce(msg){if(!warned){warned=true;warn$2(msg);}}function endPre(element){// check pre state
if(element.pre){inVPre=false;}if(platformIsPreTag(element.tag)){inPre=false;}}parseHTML(template,{warn:warn$2,expectHTML:options.expectHTML,isUnaryTag:options.isUnaryTag,canBeLeftOpenTag:options.canBeLeftOpenTag,shouldDecodeNewlines:options.shouldDecodeNewlines,shouldKeepComment:options.comments,start:function start(tag,attrs,unary){// check namespace.
// inherit parent ns if there is one
var ns=currentParent&&currentParent.ns||platformGetTagNamespace(tag);// handle IE svg bug
/* istanbul ignore if */if(isIE&&ns==='svg'){attrs=guardIESVGBug(attrs);}var element={type:1,tag:tag,attrsList:attrs,attrsMap:makeAttrsMap(attrs),parent:currentParent,children:[]};if(ns){element.ns=ns;}if(isForbiddenTag(element)&&!isServerRendering()){element.forbidden=true;"development"!=='production'&&warn$2('Templates should only be responsible for mapping the state to the '+'UI. Avoid placing tags with side-effects in your templates, such as '+"<"+tag+">"+', as they will not be parsed.');}// apply pre-transforms
for(var i=0;i<preTransforms.length;i++){preTransforms[i](element,options);}if(!inVPre){processPre(element);if(element.pre){inVPre=true;}}if(platformIsPreTag(element.tag)){inPre=true;}if(inVPre){processRawAttrs(element);}else{processFor(element);processIf(element);processOnce(element);processKey(element);// determine whether this is a plain element after
// removing structural attributes
element.plain=!element.key&&!attrs.length;processRef(element);processSlot(element);processComponent(element);for(var i$1=0;i$1<transforms.length;i$1++){transforms[i$1](element,options);}processAttrs(element);}function checkRootConstraints(el){{if(el.tag==='slot'||el.tag==='template'){warnOnce("Cannot use <"+el.tag+"> as component root element because it may "+'contain multiple nodes.');}if(el.attrsMap.hasOwnProperty('v-for')){warnOnce('Cannot use v-for on stateful component root element because '+'it renders multiple elements.');}}}// tree management
if(!root){root=element;checkRootConstraints(root);}else if(!stack.length){// allow root elements with v-if, v-else-if and v-else
if(root.if&&(element.elseif||element.else)){checkRootConstraints(element);addIfCondition(root,{exp:element.elseif,block:element});}else{warnOnce("Component template should contain exactly one root element. "+"If you are using v-if on multiple elements, "+"use v-else-if to chain them instead.");}}if(currentParent&&!element.forbidden){if(element.elseif||element.else){processIfConditions(element,currentParent);}else if(element.slotScope){// scoped slot
currentParent.plain=false;var name=element.slotTarget||'"default"';(currentParent.scopedSlots||(currentParent.scopedSlots={}))[name]=element;}else{currentParent.children.push(element);element.parent=currentParent;}}if(!unary){currentParent=element;stack.push(element);}else{endPre(element);}// apply post-transforms
for(var i$2=0;i$2<postTransforms.length;i$2++){postTransforms[i$2](element,options);}},end:function end(){// remove trailing whitespace
var element=stack[stack.length-1];var lastNode=element.children[element.children.length-1];if(lastNode&&lastNode.type===3&&lastNode.text===' '&&!inPre){element.children.pop();}// pop stack
stack.length-=1;currentParent=stack[stack.length-1];endPre(element);},chars:function chars(text){if(!currentParent){{if(text===template){warnOnce('Component template requires a root element, rather than just text.');}else if(text=text.trim()){warnOnce("text \""+text+"\" outside root element will be ignored.");}}return;}// IE textarea placeholder bug
/* istanbul ignore if */if(isIE&&currentParent.tag==='textarea'&&currentParent.attrsMap.placeholder===text){return;}var children=currentParent.children;text=inPre||text.trim()?isTextTag(currentParent)?text:decodeHTMLCached(text)// only preserve whitespace if its not right after a starting tag
:preserveWhitespace&&children.length?' ':'';if(text){var expression;if(!inVPre&&text!==' '&&(expression=parseText(text,delimiters))){children.push({type:2,expression:expression,text:text});}else if(text!==' '||!children.length||children[children.length-1].text!==' '){children.push({type:3,text:text});}}},comment:function comment(text){currentParent.children.push({type:3,text:text,isComment:true});}});return root;}function processPre(el){if(getAndRemoveAttr(el,'v-pre')!=null){el.pre=true;}}function processRawAttrs(el){var l=el.attrsList.length;if(l){var attrs=el.attrs=new Array(l);for(var i=0;i<l;i++){attrs[i]={name:el.attrsList[i].name,value:JSON.stringify(el.attrsList[i].value)};}}else if(!el.pre){// non root node in pre blocks with no attributes
el.plain=true;}}function processKey(el){var exp=getBindingAttr(el,'key');if(exp){if("development"!=='production'&&el.tag==='template'){warn$2("<template> cannot be keyed. Place the key on real elements instead.");}el.key=exp;}}function processRef(el){var ref=getBindingAttr(el,'ref');if(ref){el.ref=ref;el.refInFor=checkInFor(el);}}function processFor(el){var exp;if(exp=getAndRemoveAttr(el,'v-for')){var inMatch=exp.match(forAliasRE);if(!inMatch){"development"!=='production'&&warn$2("Invalid v-for expression: "+exp);return;}el.for=inMatch[2].trim();var alias=inMatch[1].trim();var iteratorMatch=alias.match(forIteratorRE);if(iteratorMatch){el.alias=iteratorMatch[1].trim();el.iterator1=iteratorMatch[2].trim();if(iteratorMatch[3]){el.iterator2=iteratorMatch[3].trim();}}else{el.alias=alias;}}}function processIf(el){var exp=getAndRemoveAttr(el,'v-if');if(exp){el.if=exp;addIfCondition(el,{exp:exp,block:el});}else{if(getAndRemoveAttr(el,'v-else')!=null){el.else=true;}var elseif=getAndRemoveAttr(el,'v-else-if');if(elseif){el.elseif=elseif;}}}function processIfConditions(el,parent){var prev=findPrevElement(parent.children);if(prev&&prev.if){addIfCondition(prev,{exp:el.elseif,block:el});}else{warn$2("v-"+(el.elseif?'else-if="'+el.elseif+'"':'else')+" "+"used on element <"+el.tag+"> without corresponding v-if.");}}function findPrevElement(children){var i=children.length;while(i--){if(children[i].type===1){return children[i];}else{if("development"!=='production'&&children[i].text!==' '){warn$2("text \""+children[i].text.trim()+"\" between v-if and v-else(-if) "+"will be ignored.");}children.pop();}}}function addIfCondition(el,condition){if(!el.ifConditions){el.ifConditions=[];}el.ifConditions.push(condition);}function processOnce(el){var once$$1=getAndRemoveAttr(el,'v-once');if(once$$1!=null){el.once=true;}}function processSlot(el){if(el.tag==='slot'){el.slotName=getBindingAttr(el,'name');if("development"!=='production'&&el.key){warn$2("`key` does not work on <slot> because slots are abstract outlets "+"and can possibly expand into multiple elements. "+"Use the key on a wrapping element instead.");}}else{var slotTarget=getBindingAttr(el,'slot');if(slotTarget){el.slotTarget=slotTarget==='""'?'"default"':slotTarget;}if(el.tag==='template'){el.slotScope=getAndRemoveAttr(el,'scope');}}}function processComponent(el){var binding;if(binding=getBindingAttr(el,'is')){el.component=binding;}if(getAndRemoveAttr(el,'inline-template')!=null){el.inlineTemplate=true;}}function processAttrs(el){var list=el.attrsList;var i,l,name,rawName,value,modifiers,isProp;for(i=0,l=list.length;i<l;i++){name=rawName=list[i].name;value=list[i].value;if(dirRE.test(name)){// mark element as dynamic
el.hasBindings=true;// modifiers
modifiers=parseModifiers(name);if(modifiers){name=name.replace(modifierRE,'');}if(bindRE.test(name)){// v-bind
name=name.replace(bindRE,'');value=parseFilters(value);isProp=false;if(modifiers){if(modifiers.prop){isProp=true;name=camelize(name);if(name==='innerHtml'){name='innerHTML';}}if(modifiers.camel){name=camelize(name);}if(modifiers.sync){addHandler(el,"update:"+camelize(name),genAssignmentCode(value,"$event"));}}if(isProp||!el.component&&platformMustUseProp(el.tag,el.attrsMap.type,name)){addProp(el,name,value);}else{addAttr(el,name,value);}}else if(onRE.test(name)){// v-on
name=name.replace(onRE,'');addHandler(el,name,value,modifiers,false,warn$2);}else{// normal directives
name=name.replace(dirRE,'');// parse arg
var argMatch=name.match(argRE);var arg=argMatch&&argMatch[1];if(arg){name=name.slice(0,-(arg.length+1));}addDirective(el,name,rawName,value,arg,modifiers);if("development"!=='production'&&name==='model'){checkForAliasModel(el,value);}}}else{// literal attribute
{var expression=parseText(value,delimiters);if(expression){warn$2(name+"=\""+value+"\": "+'Interpolation inside attributes has been removed. '+'Use v-bind or the colon shorthand instead. For example, '+'instead of <div id="{{ val }}">, use <div :id="val">.');}}addAttr(el,name,JSON.stringify(value));}}}function checkInFor(el){var parent=el;while(parent){if(parent.for!==undefined){return true;}parent=parent.parent;}return false;}function parseModifiers(name){var match=name.match(modifierRE);if(match){var ret={};match.forEach(function(m){ret[m.slice(1)]=true;});return ret;}}function makeAttrsMap(attrs){var map={};for(var i=0,l=attrs.length;i<l;i++){if("development"!=='production'&&map[attrs[i].name]&&!isIE&&!isEdge){warn$2('duplicate attribute: '+attrs[i].name);}map[attrs[i].name]=attrs[i].value;}return map;}// for script (e.g. type="x/template") or style, do not decode content
function isTextTag(el){return el.tag==='script'||el.tag==='style';}function isForbiddenTag(el){return el.tag==='style'||el.tag==='script'&&(!el.attrsMap.type||el.attrsMap.type==='text/javascript');}var ieNSBug=/^xmlns:NS\d+/;var ieNSPrefix=/^NS\d+:/;/* istanbul ignore next */function guardIESVGBug(attrs){var res=[];for(var i=0;i<attrs.length;i++){var attr=attrs[i];if(!ieNSBug.test(attr.name)){attr.name=attr.name.replace(ieNSPrefix,'');res.push(attr);}}return res;}function checkForAliasModel(el,value){var _el=el;while(_el){if(_el.for&&_el.alias===value){warn$2("<"+el.tag+" v-model=\""+value+"\">: "+"You are binding v-model directly to a v-for iteration alias. "+"This will not be able to modify the v-for source array because "+"writing to the alias is like modifying a function local variable. "+"Consider using an array of objects and use v-model on an object property instead.");}_el=_el.parent;}}/*  */var isStaticKey;var isPlatformReservedTag;var genStaticKeysCached=cached(genStaticKeys$1);/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */function optimize(root,options){if(!root){return;}isStaticKey=genStaticKeysCached(options.staticKeys||'');isPlatformReservedTag=options.isReservedTag||no;// first pass: mark all non-static nodes.
markStatic$1(root);// second pass: mark static roots.
markStaticRoots(root,false);}function genStaticKeys$1(keys){return makeMap('type,tag,attrsList,attrsMap,plain,parent,children,attrs'+(keys?','+keys:''));}function markStatic$1(node){node.static=isStatic(node);if(node.type===1){// do not make component slot content static. this avoids
// 1. components not able to mutate slot nodes
// 2. static slot content fails for hot-reloading
if(!isPlatformReservedTag(node.tag)&&node.tag!=='slot'&&node.attrsMap['inline-template']==null){return;}for(var i=0,l=node.children.length;i<l;i++){var child=node.children[i];markStatic$1(child);if(!child.static){node.static=false;}}if(node.ifConditions){for(var i$1=1,l$1=node.ifConditions.length;i$1<l$1;i$1++){var block=node.ifConditions[i$1].block;markStatic$1(block);if(!block.static){node.static=false;}}}}}function markStaticRoots(node,isInFor){if(node.type===1){if(node.static||node.once){node.staticInFor=isInFor;}// For a node to qualify as a static root, it should have children that
// are not just static text. Otherwise the cost of hoisting out will
// outweigh the benefits and it's better off to just always render it fresh.
if(node.static&&node.children.length&&!(node.children.length===1&&node.children[0].type===3)){node.staticRoot=true;return;}else{node.staticRoot=false;}if(node.children){for(var i=0,l=node.children.length;i<l;i++){markStaticRoots(node.children[i],isInFor||!!node.for);}}if(node.ifConditions){for(var i$1=1,l$1=node.ifConditions.length;i$1<l$1;i$1++){markStaticRoots(node.ifConditions[i$1].block,isInFor);}}}}function isStatic(node){if(node.type===2){// expression
return false;}if(node.type===3){// text
return true;}return!!(node.pre||!node.hasBindings&&// no dynamic bindings
!node.if&&!node.for&&// not v-if or v-for or v-else
!isBuiltInTag(node.tag)&&// not a built-in
isPlatformReservedTag(node.tag)&&// not a component
!isDirectChildOfTemplateFor(node)&&Object.keys(node).every(isStaticKey));}function isDirectChildOfTemplateFor(node){while(node.parent){node=node.parent;if(node.tag!=='template'){return false;}if(node.for){return true;}}return false;}/*  */var fnExpRE=/^\s*([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;var simplePathRE=/^\s*[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['.*?']|\[".*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*\s*$/;// keyCode aliases
var keyCodes={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,'delete':[8,46]};// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard=function genGuard(condition){return"if("+condition+")return null;";};var modifierCode={stop:'$event.stopPropagation();',prevent:'$event.preventDefault();',self:genGuard("$event.target !== $event.currentTarget"),ctrl:genGuard("!$event.ctrlKey"),shift:genGuard("!$event.shiftKey"),alt:genGuard("!$event.altKey"),meta:genGuard("!$event.metaKey"),left:genGuard("'button' in $event && $event.button !== 0"),middle:genGuard("'button' in $event && $event.button !== 1"),right:genGuard("'button' in $event && $event.button !== 2")};function genHandlers(events,isNative,warn){var res=isNative?'nativeOn:{':'on:{';for(var name in events){var handler=events[name];// #5330: warn click.right, since right clicks do not actually fire click events.
if("development"!=='production'&&name==='click'&&handler&&handler.modifiers&&handler.modifiers.right){warn("Use \"contextmenu\" instead of \"click.right\" since right clicks "+"do not actually fire \"click\" events.");}res+="\""+name+"\":"+genHandler(name,handler)+",";}return res.slice(0,-1)+'}';}function genHandler(name,handler){if(!handler){return'function(){}';}if(Array.isArray(handler)){return"["+handler.map(function(handler){return genHandler(name,handler);}).join(',')+"]";}var isMethodPath=simplePathRE.test(handler.value);var isFunctionExpression=fnExpRE.test(handler.value);if(!handler.modifiers){return isMethodPath||isFunctionExpression?handler.value:"function($event){"+handler.value+"}";// inline statement
}else{var code='';var genModifierCode='';var keys=[];for(var key in handler.modifiers){if(modifierCode[key]){genModifierCode+=modifierCode[key];// left/right
if(keyCodes[key]){keys.push(key);}}else{keys.push(key);}}if(keys.length){code+=genKeyFilter(keys);}// Make sure modifiers like prevent and stop get executed after key filtering
if(genModifierCode){code+=genModifierCode;}var handlerCode=isMethodPath?handler.value+'($event)':isFunctionExpression?"("+handler.value+")($event)":handler.value;return"function($event){"+code+handlerCode+"}";}}function genKeyFilter(keys){return"if(!('button' in $event)&&"+keys.map(genFilterCode).join('&&')+")return null;";}function genFilterCode(key){var keyVal=parseInt(key,10);if(keyVal){return"$event.keyCode!=="+keyVal;}var alias=keyCodes[key];return"_k($event.keyCode,"+JSON.stringify(key)+(alias?','+JSON.stringify(alias):'')+")";}/*  */function on(el,dir){if("development"!=='production'&&dir.modifiers){warn("v-on without argument does not support modifiers.");}el.wrapListeners=function(code){return"_g("+code+","+dir.value+")";};}/*  */function bind$1(el,dir){el.wrapData=function(code){return"_b("+code+",'"+el.tag+"',"+dir.value+","+(dir.modifiers&&dir.modifiers.prop?'true':'false')+(dir.modifiers&&dir.modifiers.sync?',true':'')+")";};}/*  */var baseDirectives={on:on,bind:bind$1,cloak:noop};/*  */var CodegenState=function CodegenState(options){this.options=options;this.warn=options.warn||baseWarn;this.transforms=pluckModuleFunction(options.modules,'transformCode');this.dataGenFns=pluckModuleFunction(options.modules,'genData');this.directives=extend(extend({},baseDirectives),options.directives);var isReservedTag=options.isReservedTag||no;this.maybeComponent=function(el){return!isReservedTag(el.tag);};this.onceId=0;this.staticRenderFns=[];};function generate(ast,options){var state=new CodegenState(options);var code=ast?genElement(ast,state):'_c("div")';return{render:"with(this){return "+code+"}",staticRenderFns:state.staticRenderFns};}function genElement(el,state){if(el.staticRoot&&!el.staticProcessed){return genStatic(el,state);}else if(el.once&&!el.onceProcessed){return genOnce(el,state);}else if(el.for&&!el.forProcessed){return genFor(el,state);}else if(el.if&&!el.ifProcessed){return genIf(el,state);}else if(el.tag==='template'&&!el.slotTarget){return genChildren(el,state)||'void 0';}else if(el.tag==='slot'){return genSlot(el,state);}else{// component or element
var code;if(el.component){code=genComponent(el.component,el,state);}else{var data=el.plain?undefined:genData$2(el,state);var children=el.inlineTemplate?null:genChildren(el,state,true);code="_c('"+el.tag+"'"+(data?","+data:'')+(children?","+children:'')+")";}// module transforms
for(var i=0;i<state.transforms.length;i++){code=state.transforms[i](el,code);}return code;}}// hoist static sub-trees out
function genStatic(el,state){el.staticProcessed=true;state.staticRenderFns.push("with(this){return "+genElement(el,state)+"}");return"_m("+(state.staticRenderFns.length-1)+(el.staticInFor?',true':'')+")";}// v-once
function genOnce(el,state){el.onceProcessed=true;if(el.if&&!el.ifProcessed){return genIf(el,state);}else if(el.staticInFor){var key='';var parent=el.parent;while(parent){if(parent.for){key=parent.key;break;}parent=parent.parent;}if(!key){"development"!=='production'&&state.warn("v-once can only be used inside v-for that is keyed. ");return genElement(el,state);}return"_o("+genElement(el,state)+","+state.onceId++ +(key?","+key:"")+")";}else{return genStatic(el,state);}}function genIf(el,state,altGen,altEmpty){el.ifProcessed=true;// avoid recursion
return genIfConditions(el.ifConditions.slice(),state,altGen,altEmpty);}function genIfConditions(conditions,state,altGen,altEmpty){if(!conditions.length){return altEmpty||'_e()';}var condition=conditions.shift();if(condition.exp){return"("+condition.exp+")?"+genTernaryExp(condition.block)+":"+genIfConditions(conditions,state,altGen,altEmpty);}else{return""+genTernaryExp(condition.block);}// v-if with v-once should generate code like (a)?_m(0):_m(1)
function genTernaryExp(el){return altGen?altGen(el,state):el.once?genOnce(el,state):genElement(el,state);}}function genFor(el,state,altGen,altHelper){var exp=el.for;var alias=el.alias;var iterator1=el.iterator1?","+el.iterator1:'';var iterator2=el.iterator2?","+el.iterator2:'';if("development"!=='production'&&state.maybeComponent(el)&&el.tag!=='slot'&&el.tag!=='template'&&!el.key){state.warn("<"+el.tag+" v-for=\""+alias+" in "+exp+"\">: component lists rendered with "+"v-for should have explicit keys. "+"See https://vuejs.org/guide/list.html#key for more info.",true/* tip */);}el.forProcessed=true;// avoid recursion
return(altHelper||'_l')+"(("+exp+"),"+"function("+alias+iterator1+iterator2+"){"+"return "+(altGen||genElement)(el,state)+'})';}function genData$2(el,state){var data='{';// directives first.
// directives may mutate the el's other properties before they are generated.
var dirs=genDirectives(el,state);if(dirs){data+=dirs+',';}// key
if(el.key){data+="key:"+el.key+",";}// ref
if(el.ref){data+="ref:"+el.ref+",";}if(el.refInFor){data+="refInFor:true,";}// pre
if(el.pre){data+="pre:true,";}// record original tag name for components using "is" attribute
if(el.component){data+="tag:\""+el.tag+"\",";}// module data generation functions
for(var i=0;i<state.dataGenFns.length;i++){data+=state.dataGenFns[i](el);}// attributes
if(el.attrs){data+="attrs:{"+genProps(el.attrs)+"},";}// DOM props
if(el.props){data+="domProps:{"+genProps(el.props)+"},";}// event handlers
if(el.events){data+=genHandlers(el.events,false,state.warn)+",";}if(el.nativeEvents){data+=genHandlers(el.nativeEvents,true,state.warn)+",";}// slot target
if(el.slotTarget){data+="slot:"+el.slotTarget+",";}// scoped slots
if(el.scopedSlots){data+=genScopedSlots(el.scopedSlots,state)+",";}// component v-model
if(el.model){data+="model:{value:"+el.model.value+",callback:"+el.model.callback+",expression:"+el.model.expression+"},";}// inline-template
if(el.inlineTemplate){var inlineTemplate=genInlineTemplate(el,state);if(inlineTemplate){data+=inlineTemplate+",";}}data=data.replace(/,$/,'')+'}';// v-bind data wrap
if(el.wrapData){data=el.wrapData(data);}// v-on data wrap
if(el.wrapListeners){data=el.wrapListeners(data);}return data;}function genDirectives(el,state){var dirs=el.directives;if(!dirs){return;}var res='directives:[';var hasRuntime=false;var i,l,dir,needRuntime;for(i=0,l=dirs.length;i<l;i++){dir=dirs[i];needRuntime=true;var gen=state.directives[dir.name];if(gen){// compile-time directive that manipulates AST.
// returns true if it also needs a runtime counterpart.
needRuntime=!!gen(el,dir,state.warn);}if(needRuntime){hasRuntime=true;res+="{name:\""+dir.name+"\",rawName:\""+dir.rawName+"\""+(dir.value?",value:("+dir.value+"),expression:"+JSON.stringify(dir.value):'')+(dir.arg?",arg:\""+dir.arg+"\"":'')+(dir.modifiers?",modifiers:"+JSON.stringify(dir.modifiers):'')+"},";}}if(hasRuntime){return res.slice(0,-1)+']';}}function genInlineTemplate(el,state){var ast=el.children[0];if("development"!=='production'&&(el.children.length>1||ast.type!==1)){state.warn('Inline-template components must have exactly one child element.');}if(ast.type===1){var inlineRenderFns=generate(ast,state.options);return"inlineTemplate:{render:function(){"+inlineRenderFns.render+"},staticRenderFns:["+inlineRenderFns.staticRenderFns.map(function(code){return"function(){"+code+"}";}).join(',')+"]}";}}function genScopedSlots(slots,state){return"scopedSlots:_u(["+Object.keys(slots).map(function(key){return genScopedSlot(key,slots[key],state);}).join(',')+"])";}function genScopedSlot(key,el,state){if(el.for&&!el.forProcessed){return genForScopedSlot(key,el,state);}return"{key:"+key+",fn:function("+String(el.attrsMap.scope)+"){"+"return "+(el.tag==='template'?genChildren(el,state)||'void 0':genElement(el,state))+"}}";}function genForScopedSlot(key,el,state){var exp=el.for;var alias=el.alias;var iterator1=el.iterator1?","+el.iterator1:'';var iterator2=el.iterator2?","+el.iterator2:'';el.forProcessed=true;// avoid recursion
return"_l(("+exp+"),"+"function("+alias+iterator1+iterator2+"){"+"return "+genScopedSlot(key,el,state)+'})';}function genChildren(el,state,checkSkip,altGenElement,altGenNode){var children=el.children;if(children.length){var el$1=children[0];// optimize single v-for
if(children.length===1&&el$1.for&&el$1.tag!=='template'&&el$1.tag!=='slot'){return(altGenElement||genElement)(el$1,state);}var normalizationType=checkSkip?getNormalizationType(children,state.maybeComponent):0;var gen=altGenNode||genNode;return"["+children.map(function(c){return gen(c,state);}).join(',')+"]"+(normalizationType?","+normalizationType:'');}}// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType(children,maybeComponent){var res=0;for(var i=0;i<children.length;i++){var el=children[i];if(el.type!==1){continue;}if(needsNormalization(el)||el.ifConditions&&el.ifConditions.some(function(c){return needsNormalization(c.block);})){res=2;break;}if(maybeComponent(el)||el.ifConditions&&el.ifConditions.some(function(c){return maybeComponent(c.block);})){res=1;}}return res;}function needsNormalization(el){return el.for!==undefined||el.tag==='template'||el.tag==='slot';}function genNode(node,state){if(node.type===1){return genElement(node,state);}if(node.type===3&&node.isComment){return genComment(node);}else{return genText(node);}}function genText(text){return"_v("+(text.type===2?text.expression// no need for () because already wrapped in _s()
:transformSpecialNewlines(JSON.stringify(text.text)))+")";}function genComment(comment){return"_e("+JSON.stringify(comment.text)+")";}function genSlot(el,state){var slotName=el.slotName||'"default"';var children=genChildren(el,state);var res="_t("+slotName+(children?","+children:'');var attrs=el.attrs&&"{"+el.attrs.map(function(a){return camelize(a.name)+":"+a.value;}).join(',')+"}";var bind$$1=el.attrsMap['v-bind'];if((attrs||bind$$1)&&!children){res+=",null";}if(attrs){res+=","+attrs;}if(bind$$1){res+=(attrs?'':',null')+","+bind$$1;}return res+')';}// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent(componentName,el,state){var children=el.inlineTemplate?null:genChildren(el,state,true);return"_c("+componentName+","+genData$2(el,state)+(children?","+children:'')+")";}function genProps(props){var res='';for(var i=0;i<props.length;i++){var prop=props[i];res+="\""+prop.name+"\":"+transformSpecialNewlines(prop.value)+",";}return res.slice(0,-1);}// #3895, #4268
function transformSpecialNewlines(text){return text.replace(/\u2028/g,'\\u2028').replace(/\u2029/g,'\\u2029');}/*  */// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE=new RegExp('\\b'+('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,'+'super,throw,while,yield,delete,export,import,return,switch,default,'+'extends,finally,continue,debugger,function,arguments').split(',').join('\\b|\\b')+'\\b');// these unary operators should not be used as property/method names
var unaryOperatorsRE=new RegExp('\\b'+'delete,typeof,void'.split(',').join('\\s*\\([^\\)]*\\)|\\b')+'\\s*\\([^\\)]*\\)');// check valid identifier for v-for
var identRE=/[A-Za-z_$][\w$]*/;// strip strings in expressions
var stripStringRE=/'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;// detect problematic expressions in a template
function detectErrors(ast){var errors=[];if(ast){checkNode(ast,errors);}return errors;}function checkNode(node,errors){if(node.type===1){for(var name in node.attrsMap){if(dirRE.test(name)){var value=node.attrsMap[name];if(value){if(name==='v-for'){checkFor(node,"v-for=\""+value+"\"",errors);}else if(onRE.test(name)){checkEvent(value,name+"=\""+value+"\"",errors);}else{checkExpression(value,name+"=\""+value+"\"",errors);}}}}if(node.children){for(var i=0;i<node.children.length;i++){checkNode(node.children[i],errors);}}}else if(node.type===2){checkExpression(node.expression,node.text,errors);}}function checkEvent(exp,text,errors){var stipped=exp.replace(stripStringRE,'');var keywordMatch=stipped.match(unaryOperatorsRE);if(keywordMatch&&stipped.charAt(keywordMatch.index-1)!=='$'){errors.push("avoid using JavaScript unary operator as property name: "+"\""+keywordMatch[0]+"\" in expression "+text.trim());}checkExpression(exp,text,errors);}function checkFor(node,text,errors){checkExpression(node.for||'',text,errors);checkIdentifier(node.alias,'v-for alias',text,errors);checkIdentifier(node.iterator1,'v-for iterator',text,errors);checkIdentifier(node.iterator2,'v-for iterator',text,errors);}function checkIdentifier(ident,type,text,errors){if(typeof ident==='string'&&!identRE.test(ident)){errors.push("invalid "+type+" \""+ident+"\" in expression: "+text.trim());}}function checkExpression(exp,text,errors){try{new Function("return "+exp);}catch(e){var keywordMatch=exp.replace(stripStringRE,'').match(prohibitedKeywordRE);if(keywordMatch){errors.push("avoid using JavaScript keyword as property name: "+"\""+keywordMatch[0]+"\" in expression "+text.trim());}else{errors.push("invalid expression: "+text.trim());}}}/*  */function createFunction(code,errors){try{return new Function(code);}catch(err){errors.push({err:err,code:code});return noop;}}function createCompileToFunctionFn(compile){var cache=Object.create(null);return function compileToFunctions(template,options,vm){options=options||{};/* istanbul ignore if */{// detect possible CSP restriction
try{new Function('return 1');}catch(e){if(e.toString().match(/unsafe-eval|CSP/)){warn('It seems you are using the standalone build of Vue.js in an '+'environment with Content Security Policy that prohibits unsafe-eval. '+'The template compiler cannot work in this environment. Consider '+'relaxing the policy to allow unsafe-eval or pre-compiling your '+'templates into render functions.');}}}// check cache
var key=options.delimiters?String(options.delimiters)+template:template;if(cache[key]){return cache[key];}// compile
var compiled=compile(template,options);// check compilation errors/tips
{if(compiled.errors&&compiled.errors.length){warn("Error compiling template:\n\n"+template+"\n\n"+compiled.errors.map(function(e){return"- "+e;}).join('\n')+'\n',vm);}if(compiled.tips&&compiled.tips.length){compiled.tips.forEach(function(msg){return tip(msg,vm);});}}// turn code into functions
var res={};var fnGenErrors=[];res.render=createFunction(compiled.render,fnGenErrors);res.staticRenderFns=compiled.staticRenderFns.map(function(code){return createFunction(code,fnGenErrors);});// check function generation errors.
// this should only happen if there is a bug in the compiler itself.
// mostly for codegen development use
/* istanbul ignore if */{if((!compiled.errors||!compiled.errors.length)&&fnGenErrors.length){warn("Failed to generate render function:\n\n"+fnGenErrors.map(function(ref){var err=ref.err;var code=ref.code;return err.toString()+" in\n\n"+code+"\n";}).join('\n'),vm);}}return cache[key]=res;};}/*  */function createCompilerCreator(baseCompile){return function createCompiler(baseOptions){function compile(template,options){var finalOptions=Object.create(baseOptions);var errors=[];var tips=[];finalOptions.warn=function(msg,tip){(tip?tips:errors).push(msg);};if(options){// merge custom modules
if(options.modules){finalOptions.modules=(baseOptions.modules||[]).concat(options.modules);}// merge custom directives
if(options.directives){finalOptions.directives=extend(Object.create(baseOptions.directives),options.directives);}// copy other options
for(var key in options){if(key!=='modules'&&key!=='directives'){finalOptions[key]=options[key];}}}var compiled=baseCompile(template,finalOptions);{errors.push.apply(errors,detectErrors(compiled.ast));}compiled.errors=errors;compiled.tips=tips;return compiled;}return{compile:compile,compileToFunctions:createCompileToFunctionFn(compile)};};}/*  */// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler=createCompilerCreator(function baseCompile(template,options){var ast=parse(template.trim(),options);optimize(ast,options);var code=generate(ast,options);return{ast:ast,render:code.render,staticRenderFns:code.staticRenderFns};});/*  */var ref$1=createCompiler(baseOptions);var compileToFunctions=ref$1.compileToFunctions;/*  */var idToTemplate=cached(function(id){var el=query(id);return el&&el.innerHTML;});var mount=Vue$3.prototype.$mount;Vue$3.prototype.$mount=function(el,hydrating){el=el&&query(el);/* istanbul ignore if */if(el===document.body||el===document.documentElement){"development"!=='production'&&warn("Do not mount Vue to <html> or <body> - mount to normal elements instead.");return this;}var options=this.$options;// resolve template/el and convert to render function
if(!options.render){var template=options.template;if(template){if(typeof template==='string'){if(template.charAt(0)==='#'){template=idToTemplate(template);/* istanbul ignore if */if("development"!=='production'&&!template){warn("Template element not found or is empty: "+options.template,this);}}}else if(template.nodeType){template=template.innerHTML;}else{{warn('invalid template option:'+template,this);}return this;}}else if(el){template=getOuterHTML(el);}if(template){/* istanbul ignore if */if("development"!=='production'&&config.performance&&mark){mark('compile');}var ref=compileToFunctions(template,{shouldDecodeNewlines:shouldDecodeNewlines,delimiters:options.delimiters,comments:options.comments},this);var render=ref.render;var staticRenderFns=ref.staticRenderFns;options.render=render;options.staticRenderFns=staticRenderFns;/* istanbul ignore if */if("development"!=='production'&&config.performance&&mark){mark('compile end');measure(this._name+" compile",'compile','compile end');}}}return mount.call(this,el,hydrating);};/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */function getOuterHTML(el){if(el.outerHTML){return el.outerHTML;}else{var container=document.createElement('div');container.appendChild(el.cloneNode(true));return container.innerHTML;}}Vue$3.compile=compileToFunctions;return Vue$3;});
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(94)))

/***/ }),
/* 674 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/**
  * vue-router v2.7.0
  * (c) 2017 Evan You
  * @license MIT
  *//*  */function assert(condition,message){if(!condition){throw new Error("[vue-router] "+message);}}function warn(condition,message){if(undefined!=='production'&&!condition){typeof console!=='undefined'&&console.warn("[vue-router] "+message);}}function isError(err){return Object.prototype.toString.call(err).indexOf('Error')>-1;}var View={name:'router-view',functional:true,props:{name:{type:String,default:'default'}},render:function render(_,ref){var props=ref.props;var children=ref.children;var parent=ref.parent;var data=ref.data;data.routerView=true;// directly use parent context's createElement() function
// so that components rendered by router-view can resolve named slots
var h=parent.$createElement;var name=props.name;var route=parent.$route;var cache=parent._routerViewCache||(parent._routerViewCache={});// determine current view depth, also check to see if the tree
// has been toggled inactive but kept-alive.
var depth=0;var inactive=false;while(parent&&parent._routerRoot!==parent){if(parent.$vnode&&parent.$vnode.data.routerView){depth++;}if(parent._inactive){inactive=true;}parent=parent.$parent;}data.routerViewDepth=depth;// render previous view if the tree is inactive and kept-alive
if(inactive){return h(cache[name],data,children);}var matched=route.matched[depth];// render empty node if no matched route
if(!matched){cache[name]=null;return h();}var component=cache[name]=matched.components[name];// attach instance registration hook
// this will be called in the instance's injected lifecycle hooks
data.registerRouteInstance=function(vm,val){// val could be undefined for unregistration
var current=matched.instances[name];if(val&&current!==vm||!val&&current===vm){matched.instances[name]=val;}}// also regiseter instance in prepatch hook
// in case the same component instance is reused across different routes
;(data.hook||(data.hook={})).prepatch=function(_,vnode){matched.instances[name]=vnode.componentInstance;};// resolve props
data.props=resolveProps(route,matched.props&&matched.props[name]);return h(component,data,children);}};function resolveProps(route,config){switch(typeof config==='undefined'?'undefined':_typeof(config)){case'undefined':return;case'object':return config;case'function':return config(route);case'boolean':return config?route.params:undefined;default:if(undefined!=='production'){warn(false,"props in \""+route.path+"\" is a "+(typeof config==='undefined'?'undefined':_typeof(config))+", "+"expecting an object, function or boolean.");}}}/*  */var encodeReserveRE=/[!'()*]/g;var encodeReserveReplacer=function encodeReserveReplacer(c){return'%'+c.charCodeAt(0).toString(16);};var commaRE=/%2C/g;// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode=function encode(str){return encodeURIComponent(str).replace(encodeReserveRE,encodeReserveReplacer).replace(commaRE,',');};var decode=decodeURIComponent;function resolveQuery(query,extraQuery,_parseQuery){if(extraQuery===void 0)extraQuery={};var parse=_parseQuery||parseQuery;var parsedQuery;try{parsedQuery=parse(query||'');}catch(e){undefined!=='production'&&warn(false,e.message);parsedQuery={};}for(var key in extraQuery){var val=extraQuery[key];parsedQuery[key]=Array.isArray(val)?val.slice():val;}return parsedQuery;}function parseQuery(query){var res={};query=query.trim().replace(/^(\?|#|&)/,'');if(!query){return res;}query.split('&').forEach(function(param){var parts=param.replace(/\+/g,' ').split('=');var key=decode(parts.shift());var val=parts.length>0?decode(parts.join('=')):null;if(res[key]===undefined){res[key]=val;}else if(Array.isArray(res[key])){res[key].push(val);}else{res[key]=[res[key],val];}});return res;}function stringifyQuery(obj){var res=obj?Object.keys(obj).map(function(key){var val=obj[key];if(val===undefined){return'';}if(val===null){return encode(key);}if(Array.isArray(val)){var result=[];val.forEach(function(val2){if(val2===undefined){return;}if(val2===null){result.push(encode(key));}else{result.push(encode(key)+'='+encode(val2));}});return result.join('&');}return encode(key)+'='+encode(val);}).filter(function(x){return x.length>0;}).join('&'):null;return res?"?"+res:'';}/*  */var trailingSlashRE=/\/?$/;function createRoute(record,location,redirectedFrom,router){var stringifyQuery$$1=router&&router.options.stringifyQuery;var route={name:location.name||record&&record.name,meta:record&&record.meta||{},path:location.path||'/',hash:location.hash||'',query:location.query||{},params:location.params||{},fullPath:getFullPath(location,stringifyQuery$$1),matched:record?formatMatch(record):[]};if(redirectedFrom){route.redirectedFrom=getFullPath(redirectedFrom,stringifyQuery$$1);}return Object.freeze(route);}// the starting route that represents the initial state
var START=createRoute(null,{path:'/'});function formatMatch(record){var res=[];while(record){res.unshift(record);record=record.parent;}return res;}function getFullPath(ref,_stringifyQuery){var path=ref.path;var query=ref.query;if(query===void 0)query={};var hash=ref.hash;if(hash===void 0)hash='';var stringify=_stringifyQuery||stringifyQuery;return(path||'/')+stringify(query)+hash;}function isSameRoute(a,b){if(b===START){return a===b;}else if(!b){return false;}else if(a.path&&b.path){return a.path.replace(trailingSlashRE,'')===b.path.replace(trailingSlashRE,'')&&a.hash===b.hash&&isObjectEqual(a.query,b.query);}else if(a.name&&b.name){return a.name===b.name&&a.hash===b.hash&&isObjectEqual(a.query,b.query)&&isObjectEqual(a.params,b.params);}else{return false;}}function isObjectEqual(a,b){if(a===void 0)a={};if(b===void 0)b={};var aKeys=Object.keys(a);var bKeys=Object.keys(b);if(aKeys.length!==bKeys.length){return false;}return aKeys.every(function(key){var aVal=a[key];var bVal=b[key];// check nested equality
if((typeof aVal==='undefined'?'undefined':_typeof(aVal))==='object'&&(typeof bVal==='undefined'?'undefined':_typeof(bVal))==='object'){return isObjectEqual(aVal,bVal);}return String(aVal)===String(bVal);});}function isIncludedRoute(current,target){return current.path.replace(trailingSlashRE,'/').indexOf(target.path.replace(trailingSlashRE,'/'))===0&&(!target.hash||current.hash===target.hash)&&queryIncludes(current.query,target.query);}function queryIncludes(current,target){for(var key in target){if(!(key in current)){return false;}}return true;}/*  */// work around weird flow bug
var toTypes=[String,Object];var eventTypes=[String,Array];var Link={name:'router-link',props:{to:{type:toTypes,required:true},tag:{type:String,default:'a'},exact:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,event:{type:eventTypes,default:'click'}},render:function render(h){var this$1=this;var router=this.$router;var current=this.$route;var ref=router.resolve(this.to,current,this.append);var location=ref.location;var route=ref.route;var href=ref.href;var classes={};var globalActiveClass=router.options.linkActiveClass;var globalExactActiveClass=router.options.linkExactActiveClass;// Support global empty active class
var activeClassFallback=globalActiveClass==null?'router-link-active':globalActiveClass;var exactActiveClassFallback=globalExactActiveClass==null?'router-link-exact-active':globalExactActiveClass;var activeClass=this.activeClass==null?activeClassFallback:this.activeClass;var exactActiveClass=this.exactActiveClass==null?exactActiveClassFallback:this.exactActiveClass;var compareTarget=location.path?createRoute(null,location,null,router):route;classes[exactActiveClass]=isSameRoute(current,compareTarget);classes[activeClass]=this.exact?classes[exactActiveClass]:isIncludedRoute(current,compareTarget);var handler=function handler(e){if(guardEvent(e)){if(this$1.replace){router.replace(location);}else{router.push(location);}}};var on={click:guardEvent};if(Array.isArray(this.event)){this.event.forEach(function(e){on[e]=handler;});}else{on[this.event]=handler;}var data={class:classes};if(this.tag==='a'){data.on=on;data.attrs={href:href};}else{// find the first <a> child and apply listener and href
var a=findAnchor(this.$slots.default);if(a){// in case the <a> is a static node
a.isStatic=false;var extend=_Vue.util.extend;var aData=a.data=extend({},a.data);aData.on=on;var aAttrs=a.data.attrs=extend({},a.data.attrs);aAttrs.href=href;}else{// doesn't have <a> child, apply listener to self
data.on=on;}}return h(this.tag,data,this.$slots.default);}};function guardEvent(e){// don't redirect with control keys
if(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey){return;}// don't redirect when preventDefault called
if(e.defaultPrevented){return;}// don't redirect on right click
if(e.button!==undefined&&e.button!==0){return;}// don't redirect if `target="_blank"`
if(e.currentTarget&&e.currentTarget.getAttribute){var target=e.currentTarget.getAttribute('target');if(/\b_blank\b/i.test(target)){return;}}// this may be a Weex event which doesn't have this method
if(e.preventDefault){e.preventDefault();}return true;}function findAnchor(children){if(children){var child;for(var i=0;i<children.length;i++){child=children[i];if(child.tag==='a'){return child;}if(child.children&&(child=findAnchor(child.children))){return child;}}}}var _Vue;function install(Vue){if(install.installed){return;}install.installed=true;_Vue=Vue;var isDef=function isDef(v){return v!==undefined;};var registerInstance=function registerInstance(vm,callVal){var i=vm.$options._parentVnode;if(isDef(i)&&isDef(i=i.data)&&isDef(i=i.registerRouteInstance)){i(vm,callVal);}};Vue.mixin({beforeCreate:function beforeCreate(){if(isDef(this.$options.router)){this._routerRoot=this;this._router=this.$options.router;this._router.init(this);Vue.util.defineReactive(this,'_route',this._router.history.current);}else{this._routerRoot=this.$parent&&this.$parent._routerRoot||this;}registerInstance(this,this);},destroyed:function destroyed(){registerInstance(this);}});Object.defineProperty(Vue.prototype,'$router',{get:function get(){return this._routerRoot._router;}});Object.defineProperty(Vue.prototype,'$route',{get:function get(){return this._routerRoot._route;}});Vue.component('router-view',View);Vue.component('router-link',Link);var strats=Vue.config.optionMergeStrategies;// use the same hook merging strategy for route hooks
strats.beforeRouteEnter=strats.beforeRouteLeave=strats.beforeRouteUpdate=strats.created;}/*  */var inBrowser=typeof window!=='undefined';/*  */function resolvePath(relative,base,append){var firstChar=relative.charAt(0);if(firstChar==='/'){return relative;}if(firstChar==='?'||firstChar==='#'){return base+relative;}var stack=base.split('/');// remove trailing segment if:
// - not appending
// - appending to trailing slash (last segment is empty)
if(!append||!stack[stack.length-1]){stack.pop();}// resolve relative path
var segments=relative.replace(/^\//,'').split('/');for(var i=0;i<segments.length;i++){var segment=segments[i];if(segment==='..'){stack.pop();}else if(segment!=='.'){stack.push(segment);}}// ensure leading slash
if(stack[0]!==''){stack.unshift('');}return stack.join('/');}function parsePath(path){var hash='';var query='';var hashIndex=path.indexOf('#');if(hashIndex>=0){hash=path.slice(hashIndex);path=path.slice(0,hashIndex);}var queryIndex=path.indexOf('?');if(queryIndex>=0){query=path.slice(queryIndex+1);path=path.slice(0,queryIndex);}return{path:path,query:query,hash:hash};}function cleanPath(path){return path.replace(/\/\//g,'/');}var index$1=Array.isArray||function(arr){return Object.prototype.toString.call(arr)=='[object Array]';};/**
 * Expose `pathToRegexp`.
 */var index=pathToRegexp;var parse_1=parse;var compile_1=compile;var tokensToFunction_1=tokensToFunction;var tokensToRegExp_1=tokensToRegExp;/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */var PATH_REGEXP=new RegExp([// Match escaped characters that would otherwise appear in future matches.
// This allows the user to escape special characters that won't transform.
'(\\\\.)',// Match Express-style parameters and un-named parameters with a prefix
// and optional suffixes. Matches appear as:
//
// "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
// "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
'([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))'].join('|'),'g');/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */function parse(str,options){var tokens=[];var key=0;var index=0;var path='';var defaultDelimiter=options&&options.delimiter||'/';var res;while((res=PATH_REGEXP.exec(str))!=null){var m=res[0];var escaped=res[1];var offset=res.index;path+=str.slice(index,offset);index=offset+m.length;// Ignore already escaped sequences.
if(escaped){path+=escaped[1];continue;}var next=str[index];var prefix=res[2];var name=res[3];var capture=res[4];var group=res[5];var modifier=res[6];var asterisk=res[7];// Push the current path onto the tokens.
if(path){tokens.push(path);path='';}var partial=prefix!=null&&next!=null&&next!==prefix;var repeat=modifier==='+'||modifier==='*';var optional=modifier==='?'||modifier==='*';var delimiter=res[2]||defaultDelimiter;var pattern=capture||group;tokens.push({name:name||key++,prefix:prefix||'',delimiter:delimiter,optional:optional,repeat:repeat,partial:partial,asterisk:!!asterisk,pattern:pattern?escapeGroup(pattern):asterisk?'.*':'[^'+escapeString(delimiter)+']+?'});}// Match any characters still remaining.
if(index<str.length){path+=str.substr(index);}// If the path exists, push it onto the end.
if(path){tokens.push(path);}return tokens;}/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */function compile(str,options){return tokensToFunction(parse(str,options));}/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */function encodeURIComponentPretty(str){return encodeURI(str).replace(/[\/?#]/g,function(c){return'%'+c.charCodeAt(0).toString(16).toUpperCase();});}/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */function encodeAsterisk(str){return encodeURI(str).replace(/[?#]/g,function(c){return'%'+c.charCodeAt(0).toString(16).toUpperCase();});}/**
 * Expose a method for transforming tokens into the path function.
 */function tokensToFunction(tokens){// Compile all the tokens into regexps.
var matches=new Array(tokens.length);// Compile all the patterns before compilation.
for(var i=0;i<tokens.length;i++){if(_typeof(tokens[i])==='object'){matches[i]=new RegExp('^(?:'+tokens[i].pattern+')$');}}return function(obj,opts){var path='';var data=obj||{};var options=opts||{};var encode=options.pretty?encodeURIComponentPretty:encodeURIComponent;for(var i=0;i<tokens.length;i++){var token=tokens[i];if(typeof token==='string'){path+=token;continue;}var value=data[token.name];var segment;if(value==null){if(token.optional){// Prepend partial segment prefixes.
if(token.partial){path+=token.prefix;}continue;}else{throw new TypeError('Expected "'+token.name+'" to be defined');}}if(index$1(value)){if(!token.repeat){throw new TypeError('Expected "'+token.name+'" to not repeat, but received `'+JSON.stringify(value)+'`');}if(value.length===0){if(token.optional){continue;}else{throw new TypeError('Expected "'+token.name+'" to not be empty');}}for(var j=0;j<value.length;j++){segment=encode(value[j]);if(!matches[i].test(segment)){throw new TypeError('Expected all "'+token.name+'" to match "'+token.pattern+'", but received `'+JSON.stringify(segment)+'`');}path+=(j===0?token.prefix:token.delimiter)+segment;}continue;}segment=token.asterisk?encodeAsterisk(value):encode(value);if(!matches[i].test(segment)){throw new TypeError('Expected "'+token.name+'" to match "'+token.pattern+'", but received "'+segment+'"');}path+=token.prefix+segment;}return path;};}/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */function escapeString(str){return str.replace(/([.+*?=^!:${}()[\]|\/\\])/g,'\\$1');}/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */function escapeGroup(group){return group.replace(/([=!:$\/()])/g,'\\$1');}/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */function attachKeys(re,keys){re.keys=keys;return re;}/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */function flags(options){return options.sensitive?'':'i';}/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */function regexpToRegexp(path,keys){// Use a negative lookahead to match only capturing groups.
var groups=path.source.match(/\((?!\?)/g);if(groups){for(var i=0;i<groups.length;i++){keys.push({name:i,prefix:null,delimiter:null,optional:false,repeat:false,partial:false,asterisk:false,pattern:null});}}return attachKeys(path,keys);}/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */function arrayToRegexp(path,keys,options){var parts=[];for(var i=0;i<path.length;i++){parts.push(pathToRegexp(path[i],keys,options).source);}var regexp=new RegExp('(?:'+parts.join('|')+')',flags(options));return attachKeys(regexp,keys);}/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */function stringToRegexp(path,keys,options){return tokensToRegExp(parse(path,options),keys,options);}/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */function tokensToRegExp(tokens,keys,options){if(!index$1(keys)){options=/** @type {!Object} */keys||options;keys=[];}options=options||{};var strict=options.strict;var end=options.end!==false;var route='';// Iterate over the tokens and create our regexp string.
for(var i=0;i<tokens.length;i++){var token=tokens[i];if(typeof token==='string'){route+=escapeString(token);}else{var prefix=escapeString(token.prefix);var capture='(?:'+token.pattern+')';keys.push(token);if(token.repeat){capture+='(?:'+prefix+capture+')*';}if(token.optional){if(!token.partial){capture='(?:'+prefix+'('+capture+'))?';}else{capture=prefix+'('+capture+')?';}}else{capture=prefix+'('+capture+')';}route+=capture;}}var delimiter=escapeString(options.delimiter||'/');var endsWithDelimiter=route.slice(-delimiter.length)===delimiter;// In non-strict mode we allow a slash at the end of match. If the path to
// match already ends with a slash, we remove it for consistency. The slash
// is valid at the end of a path match, not in the middle. This is important
// in non-ending mode, where "/test/" shouldn't match "/test//route".
if(!strict){route=(endsWithDelimiter?route.slice(0,-delimiter.length):route)+'(?:'+delimiter+'(?=$))?';}if(end){route+='$';}else{// In non-ending mode, we need the capturing groups to match as much as
// possible by using a positive lookahead to the end or next path segment.
route+=strict&&endsWithDelimiter?'':'(?='+delimiter+'|$)';}return attachKeys(new RegExp('^'+route,flags(options)),keys);}/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */function pathToRegexp(path,keys,options){if(!index$1(keys)){options=/** @type {!Object} */keys||options;keys=[];}options=options||{};if(path instanceof RegExp){return regexpToRegexp(path,/** @type {!Array} */keys);}if(index$1(path)){return arrayToRegexp(/** @type {!Array} */path,/** @type {!Array} */keys,options);}return stringToRegexp(/** @type {string} */path,/** @type {!Array} */keys,options);}index.parse=parse_1;index.compile=compile_1;index.tokensToFunction=tokensToFunction_1;index.tokensToRegExp=tokensToRegExp_1;/*  */var regexpCompileCache=Object.create(null);function fillParams(path,params,routeMsg){try{var filler=regexpCompileCache[path]||(regexpCompileCache[path]=index.compile(path));return filler(params||{},{pretty:true});}catch(e){if(undefined!=='production'){warn(false,"missing param for "+routeMsg+": "+e.message);}return'';}}/*  */function createRouteMap(routes,oldPathList,oldPathMap,oldNameMap){// the path list is used to control path matching priority
var pathList=oldPathList||[];var pathMap=oldPathMap||Object.create(null);var nameMap=oldNameMap||Object.create(null);routes.forEach(function(route){addRouteRecord(pathList,pathMap,nameMap,route);});// ensure wildcard routes are always at the end
for(var i=0,l=pathList.length;i<l;i++){if(pathList[i]==='*'){pathList.push(pathList.splice(i,1)[0]);l--;i--;}}return{pathList:pathList,pathMap:pathMap,nameMap:nameMap};}function addRouteRecord(pathList,pathMap,nameMap,route,parent,matchAs){var path=route.path;var name=route.name;if(undefined!=='production'){assert(path!=null,"\"path\" is required in a route configuration.");assert(typeof route.component!=='string',"route config \"component\" for path: "+String(path||name)+" cannot be a "+"string id. Use an actual component instead.");}var normalizedPath=normalizePath(path,parent);var pathToRegexpOptions=route.pathToRegexpOptions||{};if(typeof route.caseSensitive==='boolean'){pathToRegexpOptions.sensitive=route.caseSensitive;}var record={path:normalizedPath,regex:compileRouteRegex(normalizedPath,pathToRegexpOptions),components:route.components||{default:route.component},instances:{},name:name,parent:parent,matchAs:matchAs,redirect:route.redirect,beforeEnter:route.beforeEnter,meta:route.meta||{},props:route.props==null?{}:route.components?route.props:{default:route.props}};if(route.children){// Warn if route is named, does not redirect and has a default child route.
// If users navigate to this route by name, the default child will
// not be rendered (GH Issue #629)
if(undefined!=='production'){if(route.name&&!route.redirect&&route.children.some(function(child){return /^\/?$/.test(child.path);})){warn(false,"Named Route '"+route.name+"' has a default child route. "+"When navigating to this named route (:to=\"{name: '"+route.name+"'\"), "+"the default child route will not be rendered. Remove the name from "+"this route and use the name of the default child route for named "+"links instead.");}}route.children.forEach(function(child){var childMatchAs=matchAs?cleanPath(matchAs+"/"+child.path):undefined;addRouteRecord(pathList,pathMap,nameMap,child,record,childMatchAs);});}if(route.alias!==undefined){var aliases=Array.isArray(route.alias)?route.alias:[route.alias];aliases.forEach(function(alias){var aliasRoute={path:alias,children:route.children};addRouteRecord(pathList,pathMap,nameMap,aliasRoute,parent,record.path||'/'// matchAs
);});}if(!pathMap[record.path]){pathList.push(record.path);pathMap[record.path]=record;}if(name){if(!nameMap[name]){nameMap[name]=record;}else if(undefined!=='production'&&!matchAs){warn(false,"Duplicate named routes definition: "+"{ name: \""+name+"\", path: \""+record.path+"\" }");}}}function compileRouteRegex(path,pathToRegexpOptions){var regex=index(path,[],pathToRegexpOptions);if(undefined!=='production'){var keys={};regex.keys.forEach(function(key){warn(!keys[key.name],"Duplicate param keys in route with path: \""+path+"\"");keys[key.name]=true;});}return regex;}function normalizePath(path,parent){path=path.replace(/\/$/,'');if(path[0]==='/'){return path;}if(parent==null){return path;}return cleanPath(parent.path+"/"+path);}/*  */function normalizeLocation(raw,current,append,router){var next=typeof raw==='string'?{path:raw}:raw;// named target
if(next.name||next._normalized){return next;}// relative params
if(!next.path&&next.params&&current){next=assign({},next);next._normalized=true;var params=assign(assign({},current.params),next.params);if(current.name){next.name=current.name;next.params=params;}else if(current.matched.length){var rawPath=current.matched[current.matched.length-1].path;next.path=fillParams(rawPath,params,"path "+current.path);}else if(undefined!=='production'){warn(false,"relative params navigation requires a current route.");}return next;}var parsedPath=parsePath(next.path||'');var basePath=current&&current.path||'/';var path=parsedPath.path?resolvePath(parsedPath.path,basePath,append||next.append):basePath;var query=resolveQuery(parsedPath.query,next.query,router&&router.options.parseQuery);var hash=next.hash||parsedPath.hash;if(hash&&hash.charAt(0)!=='#'){hash="#"+hash;}return{_normalized:true,path:path,query:query,hash:hash};}function assign(a,b){for(var key in b){a[key]=b[key];}return a;}/*  */function createMatcher(routes,router){var ref=createRouteMap(routes);var pathList=ref.pathList;var pathMap=ref.pathMap;var nameMap=ref.nameMap;function addRoutes(routes){createRouteMap(routes,pathList,pathMap,nameMap);}function match(raw,currentRoute,redirectedFrom){var location=normalizeLocation(raw,currentRoute,false,router);var name=location.name;if(name){var record=nameMap[name];if(undefined!=='production'){warn(record,"Route with name '"+name+"' does not exist");}if(!record){return _createRoute(null,location);}var paramNames=record.regex.keys.filter(function(key){return!key.optional;}).map(function(key){return key.name;});if(_typeof(location.params)!=='object'){location.params={};}if(currentRoute&&_typeof(currentRoute.params)==='object'){for(var key in currentRoute.params){if(!(key in location.params)&&paramNames.indexOf(key)>-1){location.params[key]=currentRoute.params[key];}}}if(record){location.path=fillParams(record.path,location.params,"named route \""+name+"\"");return _createRoute(record,location,redirectedFrom);}}else if(location.path){location.params={};for(var i=0;i<pathList.length;i++){var path=pathList[i];var record$1=pathMap[path];if(matchRoute(record$1.regex,location.path,location.params)){return _createRoute(record$1,location,redirectedFrom);}}}// no match
return _createRoute(null,location);}function redirect(record,location){var originalRedirect=record.redirect;var redirect=typeof originalRedirect==='function'?originalRedirect(createRoute(record,location,null,router)):originalRedirect;if(typeof redirect==='string'){redirect={path:redirect};}if(!redirect||(typeof redirect==='undefined'?'undefined':_typeof(redirect))!=='object'){if(undefined!=='production'){warn(false,"invalid redirect option: "+JSON.stringify(redirect));}return _createRoute(null,location);}var re=redirect;var name=re.name;var path=re.path;var query=location.query;var hash=location.hash;var params=location.params;query=re.hasOwnProperty('query')?re.query:query;hash=re.hasOwnProperty('hash')?re.hash:hash;params=re.hasOwnProperty('params')?re.params:params;if(name){// resolved named direct
var targetRecord=nameMap[name];if(undefined!=='production'){assert(targetRecord,"redirect failed: named route \""+name+"\" not found.");}return match({_normalized:true,name:name,query:query,hash:hash,params:params},undefined,location);}else if(path){// 1. resolve relative redirect
var rawPath=resolveRecordPath(path,record);// 2. resolve params
var resolvedPath=fillParams(rawPath,params,"redirect route with path \""+rawPath+"\"");// 3. rematch with existing query and hash
return match({_normalized:true,path:resolvedPath,query:query,hash:hash},undefined,location);}else{if(undefined!=='production'){warn(false,"invalid redirect option: "+JSON.stringify(redirect));}return _createRoute(null,location);}}function alias(record,location,matchAs){var aliasedPath=fillParams(matchAs,location.params,"aliased route with path \""+matchAs+"\"");var aliasedMatch=match({_normalized:true,path:aliasedPath});if(aliasedMatch){var matched=aliasedMatch.matched;var aliasedRecord=matched[matched.length-1];location.params=aliasedMatch.params;return _createRoute(aliasedRecord,location);}return _createRoute(null,location);}function _createRoute(record,location,redirectedFrom){if(record&&record.redirect){return redirect(record,redirectedFrom||location);}if(record&&record.matchAs){return alias(record,location,record.matchAs);}return createRoute(record,location,redirectedFrom,router);}return{match:match,addRoutes:addRoutes};}function matchRoute(regex,path,params){var m=path.match(regex);if(!m){return false;}else if(!params){return true;}for(var i=1,len=m.length;i<len;++i){var key=regex.keys[i-1];var val=typeof m[i]==='string'?decodeURIComponent(m[i]):m[i];if(key){params[key.name]=val;}}return true;}function resolveRecordPath(path,record){return resolvePath(path,record.parent?record.parent.path:'/',true);}/*  */var positionStore=Object.create(null);function setupScroll(){window.addEventListener('popstate',function(e){saveScrollPosition();if(e.state&&e.state.key){setStateKey(e.state.key);}});}function handleScroll(router,to,from,isPop){if(!router.app){return;}var behavior=router.options.scrollBehavior;if(!behavior){return;}if(undefined!=='production'){assert(typeof behavior==='function',"scrollBehavior must be a function");}// wait until re-render finishes before scrolling
router.app.$nextTick(function(){var position=getScrollPosition();var shouldScroll=behavior(to,from,isPop?position:null);if(!shouldScroll){return;}var isObject=(typeof shouldScroll==='undefined'?'undefined':_typeof(shouldScroll))==='object';if(isObject&&typeof shouldScroll.selector==='string'){var el=document.querySelector(shouldScroll.selector);if(el){var offset=shouldScroll.offset&&_typeof(shouldScroll.offset)==='object'?shouldScroll.offset:{};offset=normalizeOffset(offset);position=getElementPosition(el,offset);}else if(isValidPosition(shouldScroll)){position=normalizePosition(shouldScroll);}}else if(isObject&&isValidPosition(shouldScroll)){position=normalizePosition(shouldScroll);}if(position){window.scrollTo(position.x,position.y);}});}function saveScrollPosition(){var key=getStateKey();if(key){positionStore[key]={x:window.pageXOffset,y:window.pageYOffset};}}function getScrollPosition(){var key=getStateKey();if(key){return positionStore[key];}}function getElementPosition(el,offset){var docEl=document.documentElement;var docRect=docEl.getBoundingClientRect();var elRect=el.getBoundingClientRect();return{x:elRect.left-docRect.left-offset.x,y:elRect.top-docRect.top-offset.y};}function isValidPosition(obj){return isNumber(obj.x)||isNumber(obj.y);}function normalizePosition(obj){return{x:isNumber(obj.x)?obj.x:window.pageXOffset,y:isNumber(obj.y)?obj.y:window.pageYOffset};}function normalizeOffset(obj){return{x:isNumber(obj.x)?obj.x:0,y:isNumber(obj.y)?obj.y:0};}function isNumber(v){return typeof v==='number';}/*  */var supportsPushState=inBrowser&&function(){var ua=window.navigator.userAgent;if((ua.indexOf('Android 2.')!==-1||ua.indexOf('Android 4.0')!==-1)&&ua.indexOf('Mobile Safari')!==-1&&ua.indexOf('Chrome')===-1&&ua.indexOf('Windows Phone')===-1){return false;}return window.history&&'pushState'in window.history;}();// use User Timing api (if present) for more accurate key precision
var Time=inBrowser&&window.performance&&window.performance.now?window.performance:Date;var _key=genKey();function genKey(){return Time.now().toFixed(3);}function getStateKey(){return _key;}function setStateKey(key){_key=key;}function pushState(url,replace){saveScrollPosition();// try...catch the pushState call to get around Safari
// DOM Exception 18 where it limits to 100 pushState calls
var history=window.history;try{if(replace){history.replaceState({key:_key},'',url);}else{_key=genKey();history.pushState({key:_key},'',url);}}catch(e){window.location[replace?'replace':'assign'](url);}}function replaceState(url){pushState(url,true);}/*  */function runQueue(queue,fn,cb){var step=function step(index){if(index>=queue.length){cb();}else{if(queue[index]){fn(queue[index],function(){step(index+1);});}else{step(index+1);}}};step(0);}/*  */function resolveAsyncComponents(matched){return function(to,from,next){var hasAsync=false;var pending=0;var error=null;flatMapComponents(matched,function(def,_,match,key){// if it's a function and doesn't have cid attached,
// assume it's an async component resolve function.
// we are not using Vue's default async resolving mechanism because
// we want to halt the navigation until the incoming component has been
// resolved.
if(typeof def==='function'&&def.cid===undefined){hasAsync=true;pending++;var resolve=once(function(resolvedDef){if(resolvedDef.__esModule&&resolvedDef.default){resolvedDef=resolvedDef.default;}// save resolved on async factory in case it's used elsewhere
def.resolved=typeof resolvedDef==='function'?resolvedDef:_Vue.extend(resolvedDef);match.components[key]=resolvedDef;pending--;if(pending<=0){next();}});var reject=once(function(reason){var msg="Failed to resolve async component "+key+": "+reason;undefined!=='production'&&warn(false,msg);if(!error){error=isError(reason)?reason:new Error(msg);next(error);}});var res;try{res=def(resolve,reject);}catch(e){reject(e);}if(res){if(typeof res.then==='function'){res.then(resolve,reject);}else{// new syntax in Vue 2.3
var comp=res.component;if(comp&&typeof comp.then==='function'){comp.then(resolve,reject);}}}}});if(!hasAsync){next();}};}function flatMapComponents(matched,fn){return flatten(matched.map(function(m){return Object.keys(m.components).map(function(key){return fn(m.components[key],m.instances[key],m,key);});}));}function flatten(arr){return Array.prototype.concat.apply([],arr);}// in Webpack 2, require.ensure now also returns a Promise
// so the resolve/reject functions may get called an extra time
// if the user uses an arrow function shorthand that happens to
// return that Promise.
function once(fn){var called=false;return function(){var args=[],len=arguments.length;while(len--){args[len]=arguments[len];}if(called){return;}called=true;return fn.apply(this,args);};}/*  */var History=function History(router,base){this.router=router;this.base=normalizeBase(base);// start with a route object that stands for "nowhere"
this.current=START;this.pending=null;this.ready=false;this.readyCbs=[];this.readyErrorCbs=[];this.errorCbs=[];};History.prototype.listen=function listen(cb){this.cb=cb;};History.prototype.onReady=function onReady(cb,errorCb){if(this.ready){cb();}else{this.readyCbs.push(cb);if(errorCb){this.readyErrorCbs.push(errorCb);}}};History.prototype.onError=function onError(errorCb){this.errorCbs.push(errorCb);};History.prototype.transitionTo=function transitionTo(location,onComplete,onAbort){var this$1=this;var route=this.router.match(location,this.current);this.confirmTransition(route,function(){this$1.updateRoute(route);onComplete&&onComplete(route);this$1.ensureURL();// fire ready cbs once
if(!this$1.ready){this$1.ready=true;this$1.readyCbs.forEach(function(cb){cb(route);});}},function(err){if(onAbort){onAbort(err);}if(err&&!this$1.ready){this$1.ready=true;this$1.readyErrorCbs.forEach(function(cb){cb(err);});}});};History.prototype.confirmTransition=function confirmTransition(route,onComplete,onAbort){var this$1=this;var current=this.current;var abort=function abort(err){if(isError(err)){if(this$1.errorCbs.length){this$1.errorCbs.forEach(function(cb){cb(err);});}else{warn(false,'uncaught error during route navigation:');console.error(err);}}onAbort&&onAbort(err);};if(isSameRoute(route,current)&&// in the case the route map has been dynamically appended to
route.matched.length===current.matched.length){this.ensureURL();return abort();}var ref=resolveQueue(this.current.matched,route.matched);var updated=ref.updated;var deactivated=ref.deactivated;var activated=ref.activated;var queue=[].concat(// in-component leave guards
extractLeaveGuards(deactivated),// global before hooks
this.router.beforeHooks,// in-component update hooks
extractUpdateHooks(updated),// in-config enter guards
activated.map(function(m){return m.beforeEnter;}),// async components
resolveAsyncComponents(activated));this.pending=route;var iterator=function iterator(hook,next){if(this$1.pending!==route){return abort();}try{hook(route,current,function(to){if(to===false||isError(to)){// next(false) -> abort navigation, ensure current URL
this$1.ensureURL(true);abort(to);}else if(typeof to==='string'||(typeof to==='undefined'?'undefined':_typeof(to))==='object'&&(typeof to.path==='string'||typeof to.name==='string')){// next('/') or next({ path: '/' }) -> redirect
abort();if((typeof to==='undefined'?'undefined':_typeof(to))==='object'&&to.replace){this$1.replace(to);}else{this$1.push(to);}}else{// confirm transition and pass on the value
next(to);}});}catch(e){abort(e);}};runQueue(queue,iterator,function(){var postEnterCbs=[];var isValid=function isValid(){return this$1.current===route;};// wait until async components are resolved before
// extracting in-component enter guards
var enterGuards=extractEnterGuards(activated,postEnterCbs,isValid);var queue=enterGuards.concat(this$1.router.resolveHooks);runQueue(queue,iterator,function(){if(this$1.pending!==route){return abort();}this$1.pending=null;onComplete(route);if(this$1.router.app){this$1.router.app.$nextTick(function(){postEnterCbs.forEach(function(cb){cb();});});}});});};History.prototype.updateRoute=function updateRoute(route){var prev=this.current;this.current=route;this.cb&&this.cb(route);this.router.afterHooks.forEach(function(hook){hook&&hook(route,prev);});};function normalizeBase(base){if(!base){if(inBrowser){// respect <base> tag
var baseEl=document.querySelector('base');base=baseEl&&baseEl.getAttribute('href')||'/';// strip full URL origin
base=base.replace(/^https?:\/\/[^\/]+/,'');}else{base='/';}}// make sure there's the starting slash
if(base.charAt(0)!=='/'){base='/'+base;}// remove trailing slash
return base.replace(/\/$/,'');}function resolveQueue(current,next){var i;var max=Math.max(current.length,next.length);for(i=0;i<max;i++){if(current[i]!==next[i]){break;}}return{updated:next.slice(0,i),activated:next.slice(i),deactivated:current.slice(i)};}function extractGuards(records,name,bind,reverse){var guards=flatMapComponents(records,function(def,instance,match,key){var guard=extractGuard(def,name);if(guard){return Array.isArray(guard)?guard.map(function(guard){return bind(guard,instance,match,key);}):bind(guard,instance,match,key);}});return flatten(reverse?guards.reverse():guards);}function extractGuard(def,key){if(typeof def!=='function'){// extend now so that global mixins are applied.
def=_Vue.extend(def);}return def.options[key];}function extractLeaveGuards(deactivated){return extractGuards(deactivated,'beforeRouteLeave',bindGuard,true);}function extractUpdateHooks(updated){return extractGuards(updated,'beforeRouteUpdate',bindGuard);}function bindGuard(guard,instance){if(instance){return function boundRouteGuard(){return guard.apply(instance,arguments);};}}function extractEnterGuards(activated,cbs,isValid){return extractGuards(activated,'beforeRouteEnter',function(guard,_,match,key){return bindEnterGuard(guard,match,key,cbs,isValid);});}function bindEnterGuard(guard,match,key,cbs,isValid){return function routeEnterGuard(to,from,next){return guard(to,from,function(cb){next(cb);if(typeof cb==='function'){cbs.push(function(){// #750
// if a router-view is wrapped with an out-in transition,
// the instance may not have been registered at this time.
// we will need to poll for registration until current route
// is no longer valid.
poll(cb,match.instances,key,isValid);});}});};}function poll(cb,// somehow flow cannot infer this is a function
instances,key,isValid){if(instances[key]){cb(instances[key]);}else if(isValid()){setTimeout(function(){poll(cb,instances,key,isValid);},16);}}/*  */var HTML5History=function(History$$1){function HTML5History(router,base){var this$1=this;History$$1.call(this,router,base);var expectScroll=router.options.scrollBehavior;if(expectScroll){setupScroll();}window.addEventListener('popstate',function(e){var current=this$1.current;this$1.transitionTo(getLocation(this$1.base),function(route){if(expectScroll){handleScroll(router,route,current,true);}});});}if(History$$1)HTML5History.__proto__=History$$1;HTML5History.prototype=Object.create(History$$1&&History$$1.prototype);HTML5History.prototype.constructor=HTML5History;HTML5History.prototype.go=function go(n){window.history.go(n);};HTML5History.prototype.push=function push(location,onComplete,onAbort){var this$1=this;var ref=this;var fromRoute=ref.current;this.transitionTo(location,function(route){pushState(cleanPath(this$1.base+route.fullPath));handleScroll(this$1.router,route,fromRoute,false);onComplete&&onComplete(route);},onAbort);};HTML5History.prototype.replace=function replace(location,onComplete,onAbort){var this$1=this;var ref=this;var fromRoute=ref.current;this.transitionTo(location,function(route){replaceState(cleanPath(this$1.base+route.fullPath));handleScroll(this$1.router,route,fromRoute,false);onComplete&&onComplete(route);},onAbort);};HTML5History.prototype.ensureURL=function ensureURL(push){if(getLocation(this.base)!==this.current.fullPath){var current=cleanPath(this.base+this.current.fullPath);push?pushState(current):replaceState(current);}};HTML5History.prototype.getCurrentLocation=function getCurrentLocation(){return getLocation(this.base);};return HTML5History;}(History);function getLocation(base){var path=window.location.pathname;if(base&&path.indexOf(base)===0){path=path.slice(base.length);}return(path||'/')+window.location.search+window.location.hash;}/*  */var HashHistory=function(History$$1){function HashHistory(router,base,fallback){History$$1.call(this,router,base);// check history fallback deeplinking
if(fallback&&checkFallback(this.base)){return;}ensureSlash();}if(History$$1)HashHistory.__proto__=History$$1;HashHistory.prototype=Object.create(History$$1&&History$$1.prototype);HashHistory.prototype.constructor=HashHistory;// this is delayed until the app mounts
// to avoid the hashchange listener being fired too early
HashHistory.prototype.setupListeners=function setupListeners(){var this$1=this;window.addEventListener('hashchange',function(){if(!ensureSlash()){return;}this$1.transitionTo(getHash(),function(route){replaceHash(route.fullPath);});});};HashHistory.prototype.push=function push(location,onComplete,onAbort){this.transitionTo(location,function(route){pushHash(route.fullPath);onComplete&&onComplete(route);},onAbort);};HashHistory.prototype.replace=function replace(location,onComplete,onAbort){this.transitionTo(location,function(route){replaceHash(route.fullPath);onComplete&&onComplete(route);},onAbort);};HashHistory.prototype.go=function go(n){window.history.go(n);};HashHistory.prototype.ensureURL=function ensureURL(push){var current=this.current.fullPath;if(getHash()!==current){push?pushHash(current):replaceHash(current);}};HashHistory.prototype.getCurrentLocation=function getCurrentLocation(){return getHash();};return HashHistory;}(History);function checkFallback(base){var location=getLocation(base);if(!/^\/#/.test(location)){window.location.replace(cleanPath(base+'/#'+location));return true;}}function ensureSlash(){var path=getHash();if(path.charAt(0)==='/'){return true;}replaceHash('/'+path);return false;}function getHash(){// We can't use window.location.hash here because it's not
// consistent across browsers - Firefox will pre-decode it!
var href=window.location.href;var index=href.indexOf('#');return index===-1?'':href.slice(index+1);}function pushHash(path){window.location.hash=path;}function replaceHash(path){var href=window.location.href;var i=href.indexOf('#');var base=i>=0?href.slice(0,i):href;window.location.replace(base+"#"+path);}/*  */var AbstractHistory=function(History$$1){function AbstractHistory(router,base){History$$1.call(this,router,base);this.stack=[];this.index=-1;}if(History$$1)AbstractHistory.__proto__=History$$1;AbstractHistory.prototype=Object.create(History$$1&&History$$1.prototype);AbstractHistory.prototype.constructor=AbstractHistory;AbstractHistory.prototype.push=function push(location,onComplete,onAbort){var this$1=this;this.transitionTo(location,function(route){this$1.stack=this$1.stack.slice(0,this$1.index+1).concat(route);this$1.index++;onComplete&&onComplete(route);},onAbort);};AbstractHistory.prototype.replace=function replace(location,onComplete,onAbort){var this$1=this;this.transitionTo(location,function(route){this$1.stack=this$1.stack.slice(0,this$1.index).concat(route);onComplete&&onComplete(route);},onAbort);};AbstractHistory.prototype.go=function go(n){var this$1=this;var targetIndex=this.index+n;if(targetIndex<0||targetIndex>=this.stack.length){return;}var route=this.stack[targetIndex];this.confirmTransition(route,function(){this$1.index=targetIndex;this$1.updateRoute(route);});};AbstractHistory.prototype.getCurrentLocation=function getCurrentLocation(){var current=this.stack[this.stack.length-1];return current?current.fullPath:'/';};AbstractHistory.prototype.ensureURL=function ensureURL(){// noop
};return AbstractHistory;}(History);/*  */var VueRouter=function VueRouter(options){if(options===void 0)options={};this.app=null;this.apps=[];this.options=options;this.beforeHooks=[];this.resolveHooks=[];this.afterHooks=[];this.matcher=createMatcher(options.routes||[],this);var mode=options.mode||'hash';this.fallback=mode==='history'&&!supportsPushState&&options.fallback!==false;if(this.fallback){mode='hash';}if(!inBrowser){mode='abstract';}this.mode=mode;switch(mode){case'history':this.history=new HTML5History(this,options.base);break;case'hash':this.history=new HashHistory(this,options.base,this.fallback);break;case'abstract':this.history=new AbstractHistory(this,options.base);break;default:if(undefined!=='production'){assert(false,"invalid mode: "+mode);}}};var prototypeAccessors={currentRoute:{}};VueRouter.prototype.match=function match(raw,current,redirectedFrom){return this.matcher.match(raw,current,redirectedFrom);};prototypeAccessors.currentRoute.get=function(){return this.history&&this.history.current;};VueRouter.prototype.init=function init(app/* Vue component instance */){var this$1=this;undefined!=='production'&&assert(install.installed,"not installed. Make sure to call `Vue.use(VueRouter)` "+"before creating root instance.");this.apps.push(app);// main app already initialized.
if(this.app){return;}this.app=app;var history=this.history;if(history instanceof HTML5History){history.transitionTo(history.getCurrentLocation());}else if(history instanceof HashHistory){var setupHashListener=function setupHashListener(){history.setupListeners();};history.transitionTo(history.getCurrentLocation(),setupHashListener,setupHashListener);}history.listen(function(route){this$1.apps.forEach(function(app){app._route=route;});});};VueRouter.prototype.beforeEach=function beforeEach(fn){return registerHook(this.beforeHooks,fn);};VueRouter.prototype.beforeResolve=function beforeResolve(fn){return registerHook(this.resolveHooks,fn);};VueRouter.prototype.afterEach=function afterEach(fn){return registerHook(this.afterHooks,fn);};VueRouter.prototype.onReady=function onReady(cb,errorCb){this.history.onReady(cb,errorCb);};VueRouter.prototype.onError=function onError(errorCb){this.history.onError(errorCb);};VueRouter.prototype.push=function push(location,onComplete,onAbort){this.history.push(location,onComplete,onAbort);};VueRouter.prototype.replace=function replace(location,onComplete,onAbort){this.history.replace(location,onComplete,onAbort);};VueRouter.prototype.go=function go(n){this.history.go(n);};VueRouter.prototype.back=function back(){this.go(-1);};VueRouter.prototype.forward=function forward(){this.go(1);};VueRouter.prototype.getMatchedComponents=function getMatchedComponents(to){var route=to?to.matched?to:this.resolve(to).route:this.currentRoute;if(!route){return[];}return[].concat.apply([],route.matched.map(function(m){return Object.keys(m.components).map(function(key){return m.components[key];});}));};VueRouter.prototype.resolve=function resolve(to,current,append){var location=normalizeLocation(to,current||this.history.current,append,this);var route=this.match(location,current);var fullPath=route.redirectedFrom||route.fullPath;var base=this.history.base;var href=createHref(base,fullPath,this.mode);return{location:location,route:route,href:href,// for backwards compat
normalizedTo:location,resolved:route};};VueRouter.prototype.addRoutes=function addRoutes(routes){this.matcher.addRoutes(routes);if(this.history.current!==START){this.history.transitionTo(this.history.getCurrentLocation());}};Object.defineProperties(VueRouter.prototype,prototypeAccessors);function registerHook(list,fn){list.push(fn);return function(){var i=list.indexOf(fn);if(i>-1){list.splice(i,1);}};}function createHref(base,fullPath,mode){var path=mode==='hash'?'#'+fullPath:fullPath;return base?cleanPath(base+'/'+path):path;}VueRouter.install=install;VueRouter.version='2.7.0';if(inBrowser&&window.Vue){window.Vue.use(VueRouter);}exports.default=VueRouter;

/***/ }),
/* 675 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
Object.defineProperty(exports,"__esModule",{value:true});var A={};A.add=function(v){return v*1;};exports.A=A;

/***/ }),
/* 676 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};!function(t,o){ true?!(__WEBPACK_AMD_DEFINE_FACTORY__ = (o),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):"object"==(typeof exports==="undefined"?"undefined":_typeof(exports))?module.exports=o():t.tingle=o();}(undefined,function(){function t(t){var o={onClose:null,onOpen:null,beforeClose:null,stickyFooter:!1,footer:!1,cssClass:[],closeLabel:"Close",closeMethods:["overlay","button","escape"]};this.opts=r({},o,t),this.init();}function o(){this.modalBoxFooter&&(this.modalBoxFooter.style.width=this.modalBox.clientWidth+"px",this.modalBoxFooter.style.left=this.modalBox.offsetLeft+"px");}function e(){this.modal=document.createElement("div"),this.modal.classList.add("tingle-modal"),0!==this.opts.closeMethods.length&&this.opts.closeMethods.indexOf("overlay")!==-1||this.modal.classList.add("tingle-modal--noOverlayClose"),this.modal.style.display="none",this.opts.cssClass.forEach(function(t){"string"==typeof t&&this.modal.classList.add(t);},this),this.opts.closeMethods.indexOf("button")!==-1&&(this.modalCloseBtn=document.createElement("button"),this.modalCloseBtn.classList.add("tingle-modal__close"),this.modalCloseBtnIcon=document.createElement("span"),this.modalCloseBtnIcon.classList.add("tingle-modal__closeIcon"),this.modalCloseBtnIcon.innerHTML="×",this.modalCloseBtnLabel=document.createElement("span"),this.modalCloseBtnLabel.classList.add("tingle-modal__closeLabel"),this.modalCloseBtnLabel.innerHTML=this.opts.closeLabel,this.modalCloseBtn.appendChild(this.modalCloseBtnIcon),this.modalCloseBtn.appendChild(this.modalCloseBtnLabel)),this.modalBox=document.createElement("div"),this.modalBox.classList.add("tingle-modal-box"),this.modalBoxContent=document.createElement("div"),this.modalBoxContent.classList.add("tingle-modal-box__content"),this.modalBox.appendChild(this.modalBoxContent),this.opts.closeMethods.indexOf("button")!==-1&&this.modal.appendChild(this.modalCloseBtn),this.modal.appendChild(this.modalBox);}function s(){this.modalBoxFooter=document.createElement("div"),this.modalBoxFooter.classList.add("tingle-modal-box__footer"),this.modalBox.appendChild(this.modalBoxFooter);}function i(){this._events={clickCloseBtn:this.close.bind(this),clickOverlay:l.bind(this),resize:this.checkOverflow.bind(this),keyboardNav:n.bind(this)},this.opts.closeMethods.indexOf("button")!==-1&&this.modalCloseBtn.addEventListener("click",this._events.clickCloseBtn),this.modal.addEventListener("mousedown",this._events.clickOverlay),window.addEventListener("resize",this._events.resize),document.addEventListener("keydown",this._events.keyboardNav);}function n(t){this.opts.closeMethods.indexOf("escape")!==-1&&27===t.which&&this.isOpen()&&this.close();}function l(t){this.opts.closeMethods.indexOf("overlay")!==-1&&!d(t.target,"tingle-modal")&&t.clientX<this.modal.clientWidth&&this.close();}function d(t,o){for(;(t=t.parentElement)&&!t.classList.contains(o);){}return t;}function a(){this.opts.closeMethods.indexOf("button")!==-1&&this.modalCloseBtn.removeEventListener("click",this._events.clickCloseBtn),this.modal.removeEventListener("mousedown",this._events.clickOverlay),window.removeEventListener("resize",this._events.resize),document.removeEventListener("keydown",this._events.keyboardNav);}function r(){for(var t=1;t<arguments.length;t++){for(var o in arguments[t]){arguments[t].hasOwnProperty(o)&&(arguments[0][o]=arguments[t][o]);}}return arguments[0];}function h(){var t,o=document.createElement("tingle-test-transition"),e={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in e){if(void 0!==o.style[t])return e[t];}}var c=h();return t.prototype.init=function(){this.modal||(e.call(this),i.call(this),document.body.insertBefore(this.modal,document.body.firstChild),this.opts.footer&&this.addFooter());},t.prototype.destroy=function(){null!==this.modal&&(a.call(this),this.modal.parentNode.removeChild(this.modal),this.modal=null);},t.prototype.open=function(){this.modal.style.removeProperty?this.modal.style.removeProperty("display"):this.modal.style.removeAttribute("display"),document.body.classList.add("tingle-enabled"),this.setStickyFooter(this.opts.stickyFooter),this.modal.classList.add("tingle-modal--visible");var t=this;c?this.modal.addEventListener(c,function o(){"function"==typeof t.opts.onOpen&&t.opts.onOpen.call(t),t.modal.removeEventListener(c,o,!1);},!1):"function"==typeof t.opts.onOpen&&t.opts.onOpen.call(t),this.checkOverflow();},t.prototype.isOpen=function(){return!!this.modal.classList.contains("tingle-modal--visible");},t.prototype.close=function(){if("function"==typeof this.opts.beforeClose){var t=this.opts.beforeClose.call(this);if(!t)return;}document.body.classList.remove("tingle-enabled"),this.modal.classList.remove("tingle-modal--visible");var o=this;c?this.modal.addEventListener(c,function t(){o.modal.removeEventListener(c,t,!1),o.modal.style.display="none","function"==typeof o.opts.onClose&&o.opts.onClose.call(this);},!1):(o.modal.style.display="none","function"==typeof o.opts.onClose&&o.opts.onClose.call(this));},t.prototype.setContent=function(t){"string"==typeof t?this.modalBoxContent.innerHTML=t:(this.modalBoxContent.innerHTML="",this.modalBoxContent.appendChild(t));},t.prototype.getContent=function(){return this.modalBoxContent;},t.prototype.addFooter=function(){s.call(this);},t.prototype.setFooterContent=function(t){this.modalBoxFooter.innerHTML=t;},t.prototype.getFooterContent=function(){return this.modalBoxFooter;},t.prototype.setStickyFooter=function(t){this.isOverflow()||(t=!1),t?this.modalBox.contains(this.modalBoxFooter)&&(this.modalBox.removeChild(this.modalBoxFooter),this.modal.appendChild(this.modalBoxFooter),this.modalBoxFooter.classList.add("tingle-modal-box__footer--sticky"),o.call(this),this.modalBoxContent.style["padding-bottom"]=this.modalBoxFooter.clientHeight+20+"px"):this.modalBoxFooter&&(this.modalBox.contains(this.modalBoxFooter)||(this.modal.removeChild(this.modalBoxFooter),this.modalBox.appendChild(this.modalBoxFooter),this.modalBoxFooter.style.width="auto",this.modalBoxFooter.style.left="",this.modalBoxContent.style["padding-bottom"]="",this.modalBoxFooter.classList.remove("tingle-modal-box__footer--sticky")));},t.prototype.addFooterBtn=function(t,o,e){var s=document.createElement("button");return s.innerHTML=t,s.addEventListener("click",e),"string"==typeof o&&o.length&&o.split(" ").forEach(function(t){s.classList.add(t);}),this.modalBoxFooter.appendChild(s),s;},t.prototype.resize=function(){console.warn("Resize is deprecated and will be removed in version 1.0");},t.prototype.isOverflow=function(){var t=window.innerHeight,o=this.modalBox.clientHeight;return o>=t;},t.prototype.checkOverflow=function(){this.modal.classList.contains("tingle-modal--visible")&&(this.isOverflow()?this.modal.classList.add("tingle-modal--overflow"):this.modal.classList.remove("tingle-modal--overflow"),!this.isOverflow()&&this.opts.stickyFooter?this.setStickyFooter(!1):this.isOverflow()&&this.opts.stickyFooter&&(o.call(this),this.setStickyFooter(!0)));},{modal:t};});

/***/ }),
/* 677 */,
/* 678 */,
/* 679 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/// css base code, injected by the css-loader
module.exports=function(useSourceMap){var list=[];// return the list of modules as css string
list.toString=function toString(){return this.map(function(item){var content=cssWithMappingToString(item,useSourceMap);if(item[2]){return"@media "+item[2]+"{"+content+"}";}else{return content;}}).join("");};// import a list of modules into the list
list.i=function(modules,mediaQuery){if(typeof modules==="string")modules=[[null,modules,""]];var alreadyImportedModules={};for(var i=0;i<this.length;i++){var id=this[i][0];if(typeof id==="number")alreadyImportedModules[id]=true;}for(i=0;i<modules.length;i++){var item=modules[i];// skip already imported module
// this implementation is not 100% perfect for weird media query combinations
//  when a module is imported multiple times with different media queries.
//  I hope this will never occur (Hey this way we have smaller bundles)
if(typeof item[0]!=="number"||!alreadyImportedModules[item[0]]){if(mediaQuery&&!item[2]){item[2]=mediaQuery;}else if(mediaQuery){item[2]="("+item[2]+") and ("+mediaQuery+")";}list.push(item);}}};return list;};function cssWithMappingToString(item,useSourceMap){var content=item[1]||'';var cssMapping=item[3];if(!cssMapping){return content;}if(useSourceMap&&typeof btoa==='function'){var sourceMapping=toComment(cssMapping);var sourceURLs=cssMapping.sources.map(function(source){return'/*# sourceURL='+cssMapping.sourceRoot+source+' */';});return[content].concat(sourceURLs).concat([sourceMapping]).join('\n');}return[content].join('\n');}// Adapted from convert-source-map (MIT)
function toComment(sourceMap){// eslint-disable-next-line no-undef
var base64=btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));var data='sourceMappingURL=data:application/json;charset=utf-8;base64,'+base64;return'/*# '+data+' */';}

/***/ }),
/* 680 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(681);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 681 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */module.exports=function(css){// get current location
var location=typeof window!=="undefined"&&window.location;if(!location){throw new Error("fixUrls requires window.location");}// blank or null?
if(!css||typeof css!=="string"){return css;}var baseUrl=location.protocol+"//"+location.host;var currentDir=baseUrl+location.pathname.replace(/\/[^\/]*$/,"/");// convert each url(...)
/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */var fixedCss=css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(fullMatch,origUrl){// strip quotes (if they exist)
var unquotedOrigUrl=origUrl.trim().replace(/^"(.*)"$/,function(o,$1){return $1;}).replace(/^'(.*)'$/,function(o,$1){return $1;});// already a full url? no change
if(/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)){return fullMatch;}// convert the url to a full url
var newUrl;if(unquotedOrigUrl.indexOf("//")===0){//TODO: should we add protocol?
newUrl=unquotedOrigUrl;}else if(unquotedOrigUrl.indexOf("/")===0){// path should be relative to the base url
newUrl=baseUrl+unquotedOrigUrl;// already starts with '/'
}else{// path should be relative to current directory
newUrl=currentDir+unquotedOrigUrl.replace(/^\.\//,"");// Strip leading './'
}// send back the fixed url(...)
return"url("+JSON.stringify(newUrl)+")";});// send back the fixed css
return fixedCss;};

/***/ }),
/* 682 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(683);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(680)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../css-loader/index.js!./tingle.min.css", function() {
			var newContent = require("!!../../css-loader/index.js!./tingle.min.css");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 683 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(679)(undefined);
// imports


// module
exports.push([module.i, ".tingle-modal *{box-sizing:border-box}.tingle-modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1000;display:-webkit-box;display:-ms-flexbox;display:flex;visibility:hidden;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:hidden;background:rgba(0,0,0,.8);opacity:0;cursor:pointer;-webkit-transition:-webkit-transform .2s ease;transition:-webkit-transform .2s ease;transition:transform .2s ease;transition:transform .2s ease,-webkit-transform .2s ease}.tingle-modal--noClose .tingle-modal__close,.tingle-modal__closeLabel{display:none}.tingle-modal--confirm .tingle-modal-box{text-align:center}.tingle-modal--noOverlayClose{cursor:default}.tingle-modal__close{position:fixed;top:10px;right:28px;z-index:1000;padding:0;width:5rem;height:5rem;border:none;background-color:transparent;color:#f0f0f0;font-size:6rem;font-family:monospace;line-height:1;cursor:pointer;-webkit-transition:color .3s ease;transition:color .3s ease}.tingle-modal__close:hover{color:#fff}.tingle-modal-box{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:auto;margin-bottom:auto;width:60%;border-radius:4px;background:#fff;opacity:1;cursor:auto;-webkit-transition:-webkit-transform .3s cubic-bezier(.175,.885,.32,1.275);transition:-webkit-transform .3s cubic-bezier(.175,.885,.32,1.275);transition:transform .3s cubic-bezier(.175,.885,.32,1.275);transition:transform .3s cubic-bezier(.175,.885,.32,1.275),-webkit-transform .3s cubic-bezier(.175,.885,.32,1.275);-webkit-transform:scale(.8);-ms-transform:scale(.8);transform:scale(.8)}.tingle-modal-box__content{padding:3rem}.tingle-modal-box__footer{padding:1.5rem 2rem;width:auto;border-bottom-right-radius:4px;border-bottom-left-radius:4px;background-color:#f5f5f5;cursor:auto}.tingle-modal-box__footer::after{display:table;clear:both;content:\"\"}.tingle-modal-box__footer--sticky{position:fixed;bottom:-200px;z-index:10001;opacity:1;-webkit-transition:bottom .3s ease-in-out .3s;transition:bottom .3s ease-in-out .3s}.tingle-enabled{overflow:hidden;height:100%}.tingle-modal--visible .tingle-modal-box__footer{bottom:0}.tingle-enabled .tingle-content-wrapper{-webkit-filter:blur(15px);filter:blur(15px)}.tingle-modal--visible{visibility:visible;opacity:1}.tingle-modal--visible .tingle-modal-box{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.tingle-modal--overflow{overflow-y:scroll;padding-top:8vh}.tingle-btn{display:inline-block;margin:0 .5rem;padding:1rem 2rem;border:none;background-color:grey;box-shadow:none;color:#fff;vertical-align:middle;text-decoration:none;font-size:inherit;font-family:inherit;line-height:normal;cursor:pointer;-webkit-transition:background-color .4s ease;transition:background-color .4s ease}.tingle-btn--primary{background-color:#3498db}.tingle-btn--danger{background-color:#e74c3c}.tingle-btn--default{background-color:#34495e}.tingle-btn--pull-left{float:left}.tingle-btn--pull-right{float:right}@media (max-width :540px){.tingle-modal-box{width:auto;border-radius:0}.tingle-modal{top:60px;display:block;width:100%}.tingle-modal--noClose{top:0}.tingle-modal--overflow{padding:0}.tingle-modal-box__footer .tingle-btn{display:block;float:none;margin-bottom:1rem;width:100%}.tingle-modal__close{top:0;right:0;left:0;display:block;width:100%;height:60px;border:none;background-color:#2c3e50;box-shadow:none;color:#fff;line-height:55px}.tingle-modal__closeLabel{display:inline-block;vertical-align:middle;font-size:1.5rem;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif}.tingle-modal__closeIcon{display:inline-block;margin-right:.5rem;vertical-align:middle;font-size:4rem}}", ""]);

// exports


/***/ })
/******/ ]);